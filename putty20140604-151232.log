=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.06.04 15:12:32 =~=~=~=~=~=~=~=~=~=~=~=
login as: icjlud
Using keyboard-interactive authentication.
Password: 
Last login: Tue Jun  3 18:51:27 2014 from 172.16.10.49
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
You have new mail.
COBJVM=sun_142
JAVA_HOME=/usr/j2se
LD_LIBRARY_PATH=/usr/j2se/jre/lib/sparc:/usr/j2se/jre/lib/sparc/client:/usr/j2se/jre/lib/sparc/native_threads:/usr/j2se/jre/lib/sparc:/opt/mfocus/des/cobol/lib:/opt/IBM/db2/V9.7/lib:/export/home/db2inst1/sqllib/lib64:/export/home/db2inst1/sqllib/lib32
PATH=/usr/j2se/jre/sh:/usr/j2se/sh:/usr/j2se/bin:/usr/j2se/jre/bin:/opt/mfocus/des/cobol/lib:/opt/mfocus/des/cobol/bin:/usr/bin:/bin:/usr/bin:/d/iccol/desarrollo/macros:/d/iccol/desarrollo/utiles:/opt/bin:/usr/sbin:/usr/lib:/usr/ccs/bin:/opt/SUNWspro/bin:/usr/jdk/latest/bin:/usr/local/bin:/usr/j2se/bin:/usr/openwin/bin:.:/export/home/db2inst1/sqllib/bin:/export/home/db2inst1/sqllib/adm:/export/home/db2inst1/sqllib/misc
CLASSPATH=/opt/mfocus/des/cobol/lib/mfcobol.jar:.:/usr/j2se/jre/lib/rt.jar:/opt/mfocus/des/cobol/lib/mfimtk.jar:/opt/mfocus/des/cobol/lib/xerces.jar:/opt/mfocus/des/cobol/lib/castor-0_9_4_1-xml.jar:/opt/mfocus/des/cobol/lib/mfcobol.jar:/usr/j2se/jre/lib/dt.jar:/usr/j2se/jre/lib/rt.jar:/d/iccol/desarrollo/java/server:/export/home/db2inst1/sqllib/java/db2java.zip:/export/home/db2inst1/sqllib/java/db2jcc.jar:/export/home/db2inst1/sqllib/java/sqlj.zip:/export/home/db2inst1/sqllib/function:/export/home/db2inst1/sqllib/java/db2jcc_license_cu.jar:.
COBCPY=/opt/mfocus/des/cobol/cpylib:/opt/mfocus/des/cobol/cpylib:/d/iccol/desarrollo/copys/pais:/d/iccol/desarrollo/copys
Java version = 1.4.2_19
Java vendor = Sun Microsystems Inc.
Java OS name = SunOS
Java OS arch = sparc
Java OS version = 5.10

  ####    ####   #####   ######   ####
 #    #  #    #  #    #  #       #
 #       #    #  #    #  #####    ####
 #       #    #  #    #  #            #
 #    #  #    #  #    #  #       #    #
  ####    ####   #####   ######   ####

 #####
#     #   ####   #        ####   #    #  #####      #      ##
#        #    #  #       #    #  ##  ##  #    #     #     #  #
#        #    #  #       #    #  # ## #  #####      #    #    #
#        #    #  #       #    #  #    #  #    #     #    ######
#     #  #    #  #       #    #  #    #  #    #     #    #    #
 #####    ####   ######   ####   #    #  #####      #    #    #

 #####
#     #   ####   #    #  #####      #    #         ##     ####      #     ####
#        #    #  ##  ##  #    #     #    #        #  #   #    #     #    #    #
#        #    #  # ## #  #    #     #    #       #    #  #          #    #    #
#        #    #  #    #  #####      #    #       ######  #          #    #    #
#     #  #    #  #    #  #          #    #       #    #  #    #     #    #    #
 #####    ####   #    #  #          #    ######  #    #   ####      #     ####

 #####                                           #####  #         ###
#     #  #    #  #    #          #    #         #     # #    #   #   #
#        #    #  ##   #          #    #               # #    #  #     #
 #####   #    #  # #  #          #    #          #####  #    #  #     #
      #  #    #  #  # #          #    #   ###   #       ####### #     #
#     #  #    #  #   ##           #  #    ###   #            #   #   #
 #####    ####   #    # #######    ##     ###   #######      #    ###

icjlud@codes /d/iccol/desarrollo
$ . viset
viset running
/d/iccol/desarrollo>co
/d/iccol/desarrollo/copys>grep 80100-VALIDAR-IDENTIFICACION *
BDAGCLA-SSO.PROC:MODBDI       PERFORM 80100-VALIDAR-IDENTIFICACION                       FAC0003 
BDAGCLA.FAC:MODBDI       PERFORM 80100-VALIDAR-IDENTIFICACION                       FAC0003 
BDAGCLA.PROC:MODBDI       PERFORM 80100-VALIDAR-IDENTIFICACION                       FAC0003 
BDAGCLA.PROC.0005:MODBDI       PERFORM 80100-VALIDAR-IDENTIFICACION                       FAC0003 
BDIIVIDE_PRO.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE_PRO.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-2836.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-2836.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-BDAIDE.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-BDAIDE.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
bdiivide.flor:       80100-VALIDAR-IDENTIFICACION.
bdiivide.flor:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-CV:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-CV:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-MAL:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-MAL:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-PROD:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-PROD:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V06:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V06:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V07:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V07:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDECOL.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDECOL.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDEECU.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDEECU.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDENEW.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDENEW.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
grep: can't open CARACTCAL-V02.PROC-BCK10
grep: can't open CARACTCAL-V02.PROC-BCK11
grep: can't open CARACTCAL-V02.PROC-BCK5
grep: can't open CARACTCAL-V02.PROC-BCK6
grep: can't open CARACTCAL-V02.PROC-BCK7
grep: can't open CARACTCAL-V02.PROC-BCK9
grep: can't open CARACTPER-009.PROC-2012-01-06
CARDEC-CIGD-BANCOLOMBIA.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC-MOD-ICGD59.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC-V31PROD.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC-V32.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC-V32.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-BCK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-BCK2:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-bk-20101021:               PERFORM 80100-VALIDAR-IDENTIFICACION     
CARDEC.PROC-bk-20101108:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-bk-prudcfra:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-CIGDV13:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-DLM-04-19-2011:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC.PROC-OK4:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC003.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC2.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDEC2.PROC-PATCH:               PERFORM 80100-VALIDAR-IDENTIFICACION     
CARDECCOLPATRIA.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECRMB.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION     
CARDECV01.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV02.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV05.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV06.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV06EHA.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV07.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV08.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV08.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV08.PROC-OK2:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV09.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV10-1.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV10-2.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV10.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV10.PROC-NOSE:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV11.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV11.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV11.PROC-OTRO:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV12.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV12.PROC-OK2:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13-MOD1224.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13.PROC-2011-05-11:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13.PROC-OK2:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV13.PROC-OK3:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV14.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV14.PROC-CIG:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV14.PROC-DLM:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV15.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV16.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV16.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV16.PROC-OK2:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV17.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV18.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV18.PROC-OK1:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV19.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV2.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV20-ICGS58.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV20.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV20.PROC-CIG:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV21.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV22.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV23.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV24-1.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV24.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV25.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV26-2.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV26.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV27.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV28.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV29.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV3.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV30.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV30.PROC-NOES:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV31.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDECV4.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
CARDERMB.PROC:               PERFORM 80100-VALIDAR-IDENTIFICACION             
grep: can't open core
DECIS3.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION
grep: can't open FRAINQ.DAT
INDEREGI.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION        
INDEREGI.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION        
INDEREGI.PROC-ANT:           PERFORM 80100-VALIDAR-IDENTIFICACION        
INDEREGI.PROC-ANT:           PERFORM 80100-VALIDAR-IDENTIFICACION        
INDEREGI.PROC.F-OLD!:           PERFORM 80100-VALIDAR-IDENTIFICACION
INDEREGI.PROC.F-OLD!:           PERFORM 80100-VALIDAR-IDENTIFICACION
INDEREGIV01.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION        
INDEREGIV01.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION        
sco.proc:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCO.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCODRU.PROC1:NUIP01     PERFORM 80100-VALIDAR-IDENTIFICACION                         FAC0004
SCODRUCIG.PROC1:NUIP01     PERFORM 80100-VALIDAR-IDENTIFICACION                         FAC0004
SCODRUFAC.PROC1:NUIP01     PERFORM 80100-VALIDAR-IDENTIFICACION                         FAC0004
SCOT16-DAR.PROC.0023:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16-MALA.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16-OLD.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16.PROC-ART13:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16.PROC-LEY:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16.PROC-ORI:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16.PROC.0023:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16082.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
scot16acii.proc:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16ACII.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16BBVA.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16CLEAR.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16DELTA-ANT.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16DELTA.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16ECU.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16GJ.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16HABEAS.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16HABEAS1.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16ORI.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
SCOT16RMB.PROC:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
scotaciigj.proc:NUIP02         PERFORM 80100-VALIDAR-IDENTIFICACION                     FAC0012
UTLINDEREGI.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION
UTLINDEREGI.PROC:           PERFORM 80100-VALIDAR-IDENTIFICACION
/d/iccol/desarrollo/copys>^[  /d/iccol/desarrollo/copys>grep 80100-VALIDAR-IDENTIFICACION */d/iccol/desarrollo/copys>grep 80100-VALIDAR-IDENTIFICACION * | grep -v PERFO/d/iccol/desarrollo/copys>ICACION * | grep -v PERFOR                         <M
grep: can't open CARACTCAL-V02.PROC-BCK10
grep: can't open CARACTCAL-V02.PROC-BCK11
grep: can't open CARACTCAL-V02.PROC-BCK5
grep: can't open CARACTCAL-V02.PROC-BCK6
grep: can't open CARACTCAL-V02.PROC-BCK7
grep: can't open CARACTCAL-V02.PROC-BCK9
grep: can't open CARACTPER-009.PROC-2012-01-06
BDIIVIDE_PRO.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE_PRO.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-2836.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-2836.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-BDAIDE.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE-BDAIDE.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
bdiivide.flor:       80100-VALIDAR-IDENTIFICACION.
bdiivide.flor:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-CV:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-CV:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-MAL:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-MAL:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-PROD:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-PROD:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V06:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V06:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V07:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDE.PROC-V07:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDECOL.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDECOL.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDEECU.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDEECU.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
BDIIVIDENEW.PROC:       80100-VALIDAR-IDENTIFICACION.
BDIIVIDENEW.PROC:REMARK*80100-VALIDAR-IDENTIFICACION.
grep: can't open core
grep: can't open FRAINQ.DAT
/d/iccol/desarrollo/copys>ls -l BDIIVIDE_PRO.PROC BDIIVIDE-2836.PROC BDIIVIDE-BDAIDE.PROC bdiivide.flor BDIIVIDE.PROC BDIIVIDE.PROC-CV BDIIVIDE.PROC-MAL BDIIVIDE.PROC-PROD BDIIVIDE.PROC-V06 BDIIVIDE.PROC-V07 BDIIVIDECOL.PROC BDIIVIDEECU.PROC BDIIVIDENEW.PROC
-rw-rw-r--   1 1395     icdatacr   18101 Jan 19  2012 BDIIVIDE_PRO.PROC
-rw-rw-r--   1 iccavd   icdatacr   26681 May 18  2012 BDIIVIDE-2836.PROC
-rwxrwxr-x   1 icgjcd   icdatacr   18593 Jun 22  2007 BDIIVIDE-BDAIDE.PROC
-rwxrwxr-x   1 icfacd   icdatacr   18101 Nov 10  2005 bdiivide.flor
-rw-rw-r--   1 iccavd   icdatacr   18386 Jul 12  2012 BDIIVIDE.PROC
-rw-rw-r--   1 iccavd   icdatacr   18386 Jul 12  2012 BDIIVIDE.PROC-CV
-rw-rw-r--   1 iccavd   icdatacr   26761 Dec 29  2011 BDIIVIDE.PROC-MAL
-rw-rw-r--   1 iccavd   icdatacr   18101 Feb 22  2012 BDIIVIDE.PROC-PROD
-rwxrwxr-x   1 icfacd   icdatacr   18101 Oct 14  2008 BDIIVIDE.PROC-V06
-rw-rw-r--   1 iccavd   icdatacr   26681 May 29  2012 BDIIVIDE.PROC-V07
-rwxrwxr-x   1 icfacd   icdatacr   11093 Feb 28  2005 BDIIVIDECOL.PROC
-rwxrwxr-x   1 icfacd   icdatacr   12836 Jul 21  2005 BDIIVIDEECU.PROC
-rwxrwxr-x   1 icrmbd   icdatacr   22221 Jul  7  2008 BDIIVIDENEW.PROC
/d/iccol/desarrollo/copys>view BDIIVIDE.PROC
"BDIIVIDE.PROC" [Read only] 287 lines, 18386 characters REMARK*BDIIVIDE.PROC.v.03.0008
REMARK******************************************************************
REMARK*RUTINA DE VALIDACION DE IDENTIFICACIONES
REMARK******************************************************************
* F.CUADROS   * INCLUSION DE PARAMETRO PARA ASIGNAR EL TIPO DE
* JUN.17/2004 * IDENTIFICACION DE ACUERDO A RANGOS PERMITIDOS
** NUIP01 * RUTINA 80300-ASIGNAR-TIPO-ID
** INCLUSION DE PARAMETRO PARA VALIDAR EL TIPO-ID
* FAC0002     * NUIP01 * RUTINA 80400-VALIDAR-TIPO-ID.
REMARK******************************************************************
* F.CUADROS   * RELLENAR DE CEROS EL NUMERO DE IDENTIFICAICON
* JUL.16/2004 * CUANDO SE LE QUITA EL DIGITO DE CHEQUEO
* FAC0003     * NUIP02 * VALIDACION DE IDENTIFICACION SI TIPO-ID 2
REMARK******************************************************************
* F.CUADROS   * NUIP03: INCLUSION DE RUTINA PARA ELIMINAR EL
* AGO.11/2004 * DIGITO DE CHEQUEO.
* FAC0004     * CAMBIO DE TIPO ID = 2 POR 3 SI EL NIT NO
** CORRESPONDE AL RANGO.
REMARK******************************************************************
* F.CUADROS   * RANGO5: DEFINICION DE NUEVOS RANGOS PARA TIPO ID 3:
* OCT.22/2004 * ENTRE 700.000.001 Y 799.999.999 (OTROS DOCUMENTOS)
* FAC0005     * DEFINICION DE NUEVOS RANGOS PARA TIPO ID 2:
** ENTRE 900.000.000 Y 999.999.999 (MUISCA)
REMARK******************************************************************
* F.CUADROS   * NUIP04: INCLUSION DE RANGO PARA TIPO ID. 2 EN
* OCT.19/2005 * RUTINA VALIDAR-TIPO-ID PARA NITS QUE SON NUIPS
* FAC006C     *
REMARK******************************************************************
* C.VELASCO   * SE VUELVE A LA VERSION ANTES DE MODIFICAR LOS
* JUL.12/2012 * RANGOS DE IDENTIFICACIONES,  LOS AJUSTES DE LA
* CAV0008     * VERSION 07, IMPACTA APERTURAS Y PROCESOS ESPEC.
REMARK******************************************************************
80100-VALIDAR-IDENTIFICACION.
REMARK*===================================*
REMARK*80100-VALIDAR-IDENTIFICACION.
REMARK* Valida el numero de identificacion contra las bases de datos
REMARK* de validacion de informacion BDIIDIAN, BDIIDAS, BDIIREGI
REMARK* y verifica la coincidencia del nombre reportado
REMARK*===================================*INITIALIZE PARAMETROS-SALIDA-BDIIVIDE VARIABLES-VALNOMNOMBRES-AUX-W-BDIIVIDEINSPECT NUM-IDE-BDIIVIDE REPLACING ALL " " BY "0"
NUIP01    IF SW-VERIFNOM-BDIIVIDE NOT NUMERICFAC0002
NUIP01MOVE ZEROS TO SW-VERIFNOM-BDIIVIDEFAC0002
NUIP01    END-IFFAC0002
NUIP01    IF SW-ASGTIPID-BDIIVIDE NOT NUMERICFAC0002
NUIP01MOVE ZEROS TO SW-ASGTIPID-BDIIVIDEFAC0002
NUIP01    END-IFFAC0002
NUIP01    IF SW-VALTIPID-BDIIVIDE NOT NUMERICFAC0002"BDIIVIDE.PROC" [Read only] 287 lines, 18386 charactersREMARK*BDIIVIDE.PROC.v.03.0008
REMARK******************************************************************
REMARK*RUTINA DE VALIDACION DE IDENTIFICACIONES
REMARK******************************************************************
* F.CUADROS   * INCLUSION DE PARAMETRO PARA ASIGNAR EL TIPO DE
* JUN.17/2004 * IDENTIFICACION DE ACUERDO A RANGOS PERMITIDOS
** NUIP01 * RUTINA 80300-ASIGNAR-TIPO-ID
** INCLUSION DE PARAMETRO PARA VALIDAR EL TIPO-ID
* FAC0002     * NUIP01 * RUTINA 80400-VALIDAR-TIPO-ID.
REMARK******************************************************************
* F.CUADROS   * RELLENAR DE CEROS EL NUMERO DE IDENTIFICAICON
* JUL.16/2004 * CUANDO SE LE QUITA EL DIGITO DE CHEQUEO
* FAC0003     * NUIP02 * VALIDACION DE IDENTIFICACION SI TIPO-ID 2
REMARK******************************************************************
* F.CUADROS   * NUIP03: INCLUSION DE RUTINA PARA ELIMINAR EL
* AGO.11/2004 * DIGITO DE CHEQUEO.
* FAC0004     * CAMBIO DE TIPO ID = 2 POR 3 SI EL NIT NO
** CORRESPONDE AL RANGO.
REMARK******************************************************************
* F.CUADROS   * RANGO5: DEFINICION DE NUEVOS RANGOS PARA TIPO ID 3:
* OCT.22/2004 * ENTRE 700.000.001 Y 799.999.999 (OTROS DOCUMENTOS)
* FAC0005     * DEFINICION DE NUEVOS RANGOS PARA TIPO ID 2:
** ENTRE 900.000.000 Y 999.999.999 (MUISCA)
REMARK******************************************************************
* F.CUADROS   * NUIP04: INCLUSION DE RANGO PARA TIPO ID. 2 EN
* OCT.19/2005 * RUTINA VALIDAR-TIPO-ID PARA NITS QUE SON NUIPS
* FAC006C     *
REMARK******************************************************************
* C.VELASCO   * SE VUELVE A LA VERSION ANTES DE MODIFICAR LOS
* JUL.12/2012 * RANGOS DE IDENTIFICACIONES,  LOS AJUSTES DE LA
* CAV0008     * VERSION 07, IMPACTA APERTURAS Y PROCESOS ESPEC.
REMARK******************************************************************
80100-VALIDAR-IDENTIFICACION.
REMARK*===================================*
REMARK*80100-VALIDAR-IDENTIFICACION.
REMARK* Valida el numero de identificacion contra las bases de datos
REMARK* de validacion de informacion BDIIDIAN, BDIIDAS, BDIIREGI
REMARK* y verifica la coincidencia del nombre reportado
REMARK*===================================*INITIALIZE PARAMETROS-SALIDA-BDIIVIDE VARIABLES-VALNOMNOMBRES-AUX-W-BDIIVIDEINSPECT NUM-IDE-BDIIVIDE REPLACING ALL " " BY "0"
NUIP01    IF SW-VERIFNOM-BDIIVIDE NOT NUMERICFAC0002
NUIP01MOVE ZEROS TO SW-VERIFNOM-BDIIVIDEFAC0002
NUIP01    END-IFFAC0002
NUIP01    IF SW-ASGTIPID-BDIIVIDE NOT NUMERICFAC0002
NUIP01MOVE ZEROS TO SW-ASGTIPID-BDIIVIDEFAC0002
NUIP01    END-IFFAC0002
NUIP01    IF SW-VALTIPID-BDIIVIDE NOT NUMERICFAC0002
NUIP01MOVE ZEROS TO SW-VALTIPID-BDIIVIDEFAC0002
NUIP01    END-IFFAC0002
NUIP02    IF SW-DIGCHEQUEO-BDIIVIDE NOT NUMERICFAC0003
NUIP02MOVE ZEROS TO SW-DIGCHEQUEO-BDIIVIDEFAC0003
NUIP02    END-IFFAC0003IF NUM-IDE-BDIIVIDE IS NUMERIC AND NUM-IDE-BDIIVIDE <> ZEROS"BDIIVIDE.PROC" [Read only] line 1 of 287 --0%-- 
NUIP01IF SW-ASGTIPID-BDIIVIDE = 1FAC0002NUIP01IF SW-ASGTIPID-BDIIVIDE = 1FAC0002
NUIP01PERFORM 80300-ASIGNAR-TIPO-IDFAC0002
NUIP01END-IFFAC0002
NUIP01IF SW-VALTIPID-BDIIVIDE = 1FAC0002
NUIP01PERFORM 80400-VALIDAR-TIPO-IDFAC0002
NUIP01END-IFFAC0002
NUIP03IF SW-DIGCHEQUEO-BDIIVIDE = 1FAC0004
NUIP03PERFORM 80500-ELIMINAR-DIGITO-CHEQUEOFAC0004
NUIP03END-IFFAC0004
NUIP01IF SW-VALTIPID-BDIIVIDE = 0 ORFAC0004
NUIP01(SW-VALTIPID-BDIIVIDE = 1 AND SW-TID-BDIIVIDE = 0)FAC0002PERFORM 80200-VALIDAR-IDINITIALIZE NOM-VAL-BDIIVIDEMOVE NOM-LEIDO-BDIIVIDE TO NOM-VAL-BDIIVIDEIF SW-VERIFNOM-BDIIVIDE = 1MOVE TIP-IDE-BDIIVIDE TO TIP-ID-INPUT-VALNOMMOVE NOMBRE-BDIIVIDE TO NOMBRE-INPUT-VALNOMMOVE NOM-VAL-BDIIVIDE TO NOMBOK-INPUT-VALNOMIF SW-ID-BDIIVIDE = 0
IF NUM-BLOQUES-BDIIVIDE NUMERIC ANDNUM-BLOQUES-BDIIVIDE <> ZEROSMOVE NUM-BLOQUES-BDIIVIDE TO BLOQUES-INPUT-VALNOMELSE IF TIP-ID-INPUT-VALNOM = 1
MOVE 2 TO BLOQUES-INPUT-VALNOMELSE MOVE 1 TO BLOQUES-INPUT-VALNOMEND-IF
END-IF
PERFORM 10000-MATCH-NOMBRES-VALNOMIF MATCH-OK-OUT-VALNOM = 0
MOVE 1 TO SW-NOMBRES-BDIIVIDEEND-IF
END-IF
END-IF
NUIP01ELSE IF SW-TID-BDIIVIDE = 1FAC0002
NUIP01MOVE 1 TO SW-ID-BDIIVIDEFAC0002
NUIP01END-IFFAC0002
NUIP01END-IFFAC0002ELSE MOVE 1 TO SW-ID-BDIIVIDEEND-IF.80200-VALIDAR-ID.
REMARK*===================================*
REMARK*80200-VALIDAR-ID.
REMARK*Validacion del numero de identificacion
REMARK*con las BASES DE DATOS DE LA REGISTRADURIA, DAS, DIAN:
REMARK*BDIAREGI, BDIADAS, BDIADIAN respectivamente
REMARK*Dependiendo del tipo de identificacion
REMARK*===================================*EVALUATE TIP-IDE-BDIIVIDEWHEN 1
PERFORM 85010-UBICA-CEDULAWHEN 2
PERFORM 85020-UBICA-NITWHEN 3
PERFORM 85020-UBICA-NIT
WHEN 4WHEN 4
PERFORM 85030-UBICA-EXTWHEN OTHER
MOVE 1 TO SW-ID-BDIIVIDEEND-EVALUATE.

NUIP01 80300-ASIGNAR-TIPO-ID.FAC0002
REMARK*================================================================
NUIP01*80300-ASIGNAR-TIPO-ID.FAC0002
NUIP01*ASIGNACION DEL TIPO DE IDENTIFICACION. PARAMETRO DE ENTRADAFAC0002
NUPI01*SW-ASGTIPID-BDIVIIDE = 1; RETORNA TIPID-VAL-BDIIVIDE
REMARK*================================================================
NUIP01    INITIALIZE PARAMETROS-SALIDA-BDIIVIDE TIP-IDE-BDIIVIDEFAC0002
NUIP01    INSPECT NUM-IDE-BDIIVIDE REPLACING ALL " " BY "0"FAC0002
NUIP01IF (NUM-IDE-BDIIVIDE-R >= 1 ANDFAC0002
NUIP01NUM-IDE-BDIIVIDE-R  <= 99999999) ORFAC0002
NUIP01(NUM-IDE-BDIIVIDE-R >= 1000000000 ANDFAC0002
NUIP02NUM-IDE-BDIIVIDE-R  <  8000000000)FAC0003
NUIP01MOVE 1 TO TIP-IDE-BDIIVIDEFAC0002
NUIP01ELSEFAC0002
NUIP01IF (NUM-IDE-BDIIVIDE-R >= 800000000 ANDFAC0002
RANGO5NUM-IDE-BDIIVIDE-R  <= 999999999) ORFAC0005
NUIP02(NUM-IDE-BDIIVIDE-R >= 8000000000 ANDFAC0003
RANGO5NUM-IDE-BDIIVIDE-R  <= 9999999999)FAC0005
NUIP01MOVE 2 TO TIP-IDE-BDIIVIDEFAC0002
NUIP03*IF NUM-IDE-BDIIVIDE-R >= 8000000000FAC0004
NUIP03*MOVE NUM-IDE-BDIIVIDE-R TO NUM-ID-W11-BDIIVIDEFAC0004
NUIP03*MOVE NUM-ID-W10-BDIIVIDE TO NUM-IDE-BDIIVIDE-RFAC0004
NUIP03*END-IFFAC0004
NUIP01ELSEFAC0002
NUIP01IF (NUM-IDE-BDIIVIDE-R >= 600000000 ANDFAC0002
RANGO5NUM-IDE-BDIIVIDE-R  <  800000000) ORFAC0005
NUIP01(NUM-IDE-BDIIVIDE-R >= 6000000000 ANDFAC0002
RANGO5NUM-IDE-BDIIVIDE-R  <  8000000000)FAC0005
NUIP01MOVE 3 TO TIP-IDE-BDIIVIDEFAC0002
NUIP01ELSE MOVE 4 TO TIP-IDE-BDIIVIDEFAC0002
NUIP01END-IF.FAC0002

NUIP01 80400-VALIDAR-TIPO-ID.FAC0002
REMARK*================================================================
NUIP01*80400-VALIDAR-TIPO-ID.FAC0002
NUIP01*VALIDACION DEL TIPO DE IDENTIFICACION DE ACUERDO AL RANGOFAC0002
NUIP01*CONTENIDO EN EL NUMERO DE IDENTIFICACION. SE PREGUNTA AL REVES.  FAC0002
NUIP01*PARAMETRO DE ENTRADA SW-VALTIPID-BDIVIIDE = 1;FAC0002
NUIP01*RETORNA SW-TID-BDIIVIDE = 1 SI ESTA ERRADO.FAC0002
REMARK*================================================================
NUIP01    INITIALIZE PARAMETROS-SALIDA-BDIIVIDEFAC0002
NUIP01    INSPECT NUM-IDE-BDIIVIDE REPLACING ALL " " BY "0"FAC0002
NUIP01    EVALUATE TIP-IDE-BDIIVIDEFAC0002
NUIP01WHEN 1FAC0002
NUIP01IF NUM-IDE-BDIIVIDE-R > 9999999999FAC0002
NUIP01MOVE 1 TO SW-TID-BDIIVIDEFAC0002
NUIP01END-IFFAC0002
NUIP01WHEN 2FAC0002
NUIP04IF NUM-IDE-BDIIVIDE-R >  9999999999 ORFAC006C
RANGO5(NUM-IDE-BDIIVIDE-R <= 800000000 AND >= 600000000)FAC0005RANGO5(NUM-IDE-BDIIVIDE-R <= 800000000 AND >= 600000000)FAC0005
NUIP01MOVE 1 TO SW-TID-BDIIVIDEFAC0002
NUIP01END-IFFAC0002
NUIP01WHEN 3FAC0002
RANGO5IF NUM-IDE-BDIIVIDE-R > 800000000 OR < 600000000FAC0005
NUIP01MOVE 1 TO SW-TID-BDIIVIDEFAC0002
NUIP01END-IFFAC0002
NUIP01    END-EVALUATE.FAC0002

NUIP03 80500-ELIMINAR-DIGITO-CHEQUEO.FAC0004
REMARK*================================================================
NUIP03*80500-ELIMINAR-DIGITO-CHEQUEO.FAC0004
REMARK*Elimina el digito de chequeo y cambia el tipo de identificacion
REMARK*de acuerdo a los rangos para tipo id = 2 y 3
REMARK*================================================================
NUIP03IF (NUM-IDE-BDIIVIDE-R >= 600000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R  <  800000000) ORFAC0005
NUIP03(NUM-IDE-BDIIVIDE-R >= 6000000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R  < 8000000000)FAC0005
NUIP03MOVE 3 TO TIP-IDE-BDIIVIDEFAC0004
NUIP03END-IFFAC0004
NUIP03IF (NUM-IDE-BDIIVIDE-R >= 800000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R  <= 999999999) ORFAC0005
NUIP03(NUM-IDE-BDIIVIDE-R >= 8000000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R  <= 9999999999)FAC0005
NUIP03MOVE 2 TO TIP-IDE-BDIIVIDEFAC0004
NUIP03END-IFFAC0004
NUIP03IF (TIP-IDE-BDIIVIDE = 2 ANDFAC0004
NUIP03(NUM-IDE-BDIIVIDE-R >= 10000000000) ORFAC0004
NUIP03(NUM-IDE-BDIIVIDE-R >= 8000000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R <= 9999999999)) ORFAC0005
NUIP03(TIP-IDE-BDIIVIDE = 3 ANDFAC0004
NUIP03(NUM-IDE-BDIIVIDE-R >= 6000000000 ANDFAC0004
RANGO5NUM-IDE-BDIIVIDE-R <  8000000000))FAC0005
NUIP03MOVE NUM-IDE-BDIIVIDE TO NUM-ID-W11-BDIIVIDEFAC0004
NUIP03MOVE NUM-ID-W10-BDIIVIDE TO NUM-IDE-BDIIVIDE-RFAC0004
NUIP03END-IFFAC0004
NUIP03INSPECT NUM-IDE-BDIIVIDE REPLACING ALL " " BY "0".FAC000485010-UBICA-CEDULA.
REMARK*================================================================
REMARK*85010-UBICA-CEDULA.
REMARK*Ubica la identificacion dada la llave en BDIIREGI
REMARK*Arma el nombre completo en una sola variable
REMARK*================================================================MOVE NUM-IDE-BDIIVIDE TO CEDULA-BDIIREGIMOVE TIP-IDE-BDIIVIDE TO TIPO-ID-BDIIREGIREAD BDIIREGI INVALID KEY MOVE 1 TO SW-ID-BDIIVIDEEND-READ
IF SW-ID-BDIIVIDE = 0MOVE APELLIDO1-BDIIREGI TO PRIMER-APELLIDO-BDIIVIDEMOVE APELLIDO2-BDIIREGI TO SEGUNDO-APELLIDO-BDIIVIDEMOVE DES-NOMBRE2-BDIIREGI TO SEGUNDO-NOMBRE-BDIIVIDEMOVE DES-NOMBRE1-BDIIREGI TO PRIMER-NOMBRE-BDIIVIDEIF ESTADO-CIVIL-BDIIREGI = 0
STRINGSTRING
SEGUNDO-APELLIDO-BDIIVIDE DELIMITED BY "  ","*" DELIMITED BY SIZE ,PRIMER-NOMBRE-BDIIVIDE    DELIMITED BY "  ","*" DELIMITED BY SIZE ,SEGUNDO-NOMBRE-BDIIVIDE   DELIMITED BY SIZE,";" DELIMITED BY SIZE ,INTO NOM-LEIDO-BDIIVIDEEND-IF
IF ESTADO-CIVIL-BDIIREGI = 1STRING
"DE" DELIMITED BY SIZE,"*"  DELIMITED BY SIZE,SEGUNDO-APELLIDO-BDIIVIDE DELIMITED BY "  ","*"  DELIMITED BY SIZE,PRIMER-NOMBRE-BDIIVIDE    DELIMITED BY "  ","*"  DELIMITED BY SIZE,SEGUNDO-NOMBRE-BDIIVIDE   DELIMITED BY SIZE,";"  DELIMITED BY SIZE,INTO NOM-LEIDO-BDIIVIDEEND-IF
IF ESTADO-CIVIL-BDIIREGI = 2STRING
"VDA DE" DELIMITED BY SIZE,"*"DELIMITED BY SIZE,SEGUNDO-APELLIDO-BDIIVIDE DELIMITED BY "  ","*"DELIMITED BY SIZE,PRIMER-NOMBRE-BDIIVIDE    DELIMITED BY "  ","*"DELIMITED BY SIZE,SEGUNDO-NOMBRE-BDIIVIDE DELIMITED BY SIZE,";"DELIMITED BY SIZE,INTO NOM-LEIDO-BDIIVIDEEND-IF
STRING PRIMER-APELLIDO-BDIIVIDE DELIMITED BY "  ","*"DELIMITED BY SIZE,NOM-LEIDO-BDIIVIDE     DELIMITED BY SIZE, "*",
DELIMITED BY SIZE,INTO NOM-VAL-BDIIVIDEINSPECT NOM-VAL-BDIIVIDE REPLACING ALL "*" BY " "INSPECT NOM-VAL-BDIIVIDE REPLACING ALL ";" BY " "INITIALIZE NOM-LEIDO-BDIIVIDEMOVE NOM-VAL-BDIIVIDE TO NOM-LEIDO-BDIIVIDE.85020-UBICA-NIT.
REMARK*================================================================
REMARK*85020-UBICA-NIT.
REMARK*Ubica NIT en archivo de la DIAN, BDIIDIAN
REMARK*================================================================MOVE NUM-IDE-BDIIVIDE TO NITS-R-BDIIDIANREAD BDIIDIAN INVALID KEY MOVE 1 TO SW-ID-BDIIVIDEEND-READ
IF SW-ID-BDIIVIDE = 0MOVE DESCRIPCION-BDIIDIAN TO NOM-LEIDO-BDIIVIDEEND-IF.

85030-UBICA-EXT.
REMARK*================================================================
REMARK*85030-UBICA-EXT.
REMARK*Ubica cedula de extranjeria en archivo del DAS
REMARK*================================================================MOVE NUM-IDE-BDIIVIDE TO NUM-ID-BDIIDASMOVE TIP-IDE-BDIIVIDE TO TIPO-ID-BDIIDASREAD BDIIDAS INVALID KEY MOVE 1 TO SW-ID-BDIIVIDEEND-READ
IF SW-ID-BDIIVIDE = 0MOVE NOMBRE-BDIIDAS TO NOM-LEIDO-BDIIVIDE.
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~


"BDIIVIDE.PROC" [Read only] line 278 of 287 --96%-- 

:q/d/iccol/desarrollo/copys>^[  /d/iccol/desarrollo/copys>view BDIIVIDE.PROCls -l BDIIVIDE _PRO.PROC BDIIVIDE-2836.PROC BDIIVIDE>/d/iccol/desarrollo/copys>grep 80100-VALIDAR-IDENTIFICACION * | grep -v PERFO/d/iccol/desarrollo/copys>grep  * | grep -v PERFORM                           /d/iccol/desarrollo/copys>grep 1 * | grep -v PERFORM0 * | grep -v PERFORM0 * | grep -v PERFORM0 * | grep -v PERFORM0 * | grep -v PERFORM- * | grep -v PERFORMM * | grep -v PERFORMA * | grep -v PERFORMT * | grep -v PERFORMC * | grep -v PERFORMH * | grep -v PERFORM- * | grep -v PERFORMN * | grep -v PERFORMO * | grep -v PERFORMM * | grep -v PERFORMB * | grep -v PERFORMR * | grep -v PERFORME * | grep -v PERFORMS * | grep -v PERFORM- * | grep -v PERFORMV * | grep -v PERFORMA * | grep -v PERFORML * | grep -v PERFORMN * | grep -v PERFORMO * | grep -v PERFORMM * | grep -v PERFORM
grep: can't open CARACTCAL-V02.PROC-BCK10
grep: can't open CARACTCAL-V02.PROC-BCK11
grep: can't open CARACTCAL-V02.PROC-BCK5
grep: can't open CARACTCAL-V02.PROC-BCK6
grep: can't open CARACTCAL-V02.PROC-BCK7
grep: can't open CARACTCAL-V02.PROC-BCK9
grep: can't open CARACTPER-009.PROC-2012-01-06
grep: can't open core
grep: can't open FRAINQ.DAT
VALNOM.PROC:       10000-MATCH-NOMBRES-VALNOM.                 
VALNOM.PROC.0002:       10000-MATCH-NOMBRES-VALNOM.                   
VALNOM.PROC.NUE:       10000-MATCH-NOMBRES-VALNOM.                   
VALNOMGJ.ANT.PROC:       10000-MATCH-NOMBRES-VALNOM-A.                   
VALNOMGJ.PROC:       10000-MATCH-NOMBRES-VALNOM.                 
/d/iccol/desarrollo/copys>ls -l VALNOM*
-rwxrwxr-x   1 icehad   icdatacr   26321 Aug  7  2010 VALNOM-EHA.PROC
-rwxrwxr-x   1 icehad   icdatacr    3846 Aug  7  2010 VALNOM-EHA.WS
-rwxrwxr-x   1 icgjcd   icdatacr   24053 Jan  2  2009 VALNOM.PROC
-rwxrwxr-x   1 icrmbd   icdatacr   22611 Jul  9  2004 VALNOM.PROC.0002
-rwxrwxr-x   1 icrmbd   icdatacr   17831 Mar 17  2003 VALNOM.PROC.NUE
-rwxrwxr-x   1 icgjcd   icdatacr    3266 Nov 10  2005 VALNOM.WS
-rwxrwxr-x   1 iccavd   icdatacr    7128 Aug 28  2007 VALNOMCSV.PROC
-rwxrwxr-x   1 iccavd   icdatacr    1555 Aug  2  2007 VALNOMCSV.WS
-rwxrwxr-x   1 icgjcd   icdatacr   25756 Oct  8  2003 VALNOMGJ.ANT.PROC
-rwxrwxr-x   1 icgjcd   icdatacr   23909 Nov 10  2005 VALNOMGJ.PROC
-rwxrwxr-x   1 icgjcd   icdatacr    3668 Oct  7  2003 VALNOMGJ.WS
/d/iccol/desarrollo/copys>view VALNOM.PROC
"VALNOM.PROC" [Read only] 420 lines, 24053 characters REMARK*VALNOM-PROC.v.0005
REMARK******************************************************************
REMARK* RUTINA CREADA PARA HACER LA VALIDACION DE NOMBRES CONTRA LOS
REMARK* ARCHIVOS DE LA REGISTRADURIA, DIAN Y DAS, DEPENDIENDO DEL TIPO
REMARK* DE IDENTIFICACION RECIBIDA.
REMARK*    PARAMETROS
REMARK*BLOQUES-INPUT-VALNOM - NUMERO DE BLOQUES A VALIDAR
REMARK*NOMBRE-INPUT-VALNOM  - NOMBRE A VALIDAR
REMARK*NOMBOK-INPUT-VALNOM  - NOMBRE CORRECTO CON EL QUE SE
REMARK*DEBE COMPARAR NOMBRE-INPUT-VALNOM
REMARK*TIP-ID-INPUT-VALNOM  - TIPO DE IDENTIFICACION A VALIDAR
REMARK*    SALIDAS:
REMARK*MATCH-OK-OUT-VALNOM  - 0-NO HUBO1-HUBO
REMARK*******************************************************************
REMARK* RMB0002   * VAL001: SE MEJORA LA VALIDACION DE NOMBRES EN PERSONAS
REMARK* R.MARTINEZ* JURIDICAS
REMARK* DIC.2002  *
REMARK*******************************************************************
REMARK* GJC0003    * VALMEJ :SE CREAN ANUEVOS CAMPOS PARA MEJORAR LA VALIDACION
REMARK* G.JIMENEZ  * DE NIT. PARA MEJORA TAMBIEN SE AMPLIA TAMANO DE VARIABLES
REMARK* MARZO/2003 * PARA CEDULAS, EL COMODIN QUE USUALMENTE CORRESPONDE A LA N
REMARK** SOLO SE COMPARA CONTRA N O CONTRA BLANCOS
REMARK*************************************************************************
REMARK* GJC0004    * VALME1 :CON EL FIN DE AFINAR AUN MAS EL PROCESO DE VALIDA-
REMARK* R.MARTINEZ * CION DE NOMBRES, EN EL MATCH A PROXIMADO DE PERSONAS NATU-
REMARK* G.JIMENEZ  * RALES SE CAMBIA EL CALCULO FINAL PARA DETERMINAR SI UN BLO-
REMARK* MARZO/2003 * QUE ES O NO VALIDO. PARA QUE UN NOMBRE QUE VENGA NUMERICO
REMARK** NO SE CONVIERTA EN COMODIN, EN LAS SUSTITUCIONES POR *
REMARK** SE VALIDA QUE EL CONTENIDO NO SEA NUMERICO.
REMARK*************************************************************************
REMARK* GJC0005    * VLNM01: LOS PROGRAMAS ABORTAN CUANDO ALGUNO DE LOS
REMARK* G.JIMENEZ  *PARAMETROS DE UN SUBSTRING QUEDA EN 0 O EN
REMARK* NOV/2005   *UN NUMERO MENOR QUE 0. EJ: NOMBRE(I:J) DONDE I O
REMARK**J ES 0.
REMARK*************************************************************************
10000-MATCH-NOMBRES-VALNOM.
REMARK******************************************************************
REMARK*10000-MATCH-NOMBRE-VALNOM.
REMARK* SE BUSCA DETERMINAR SI EL NOMBRE DE LA PERSONA CONSULTADA HACE
REMARK*CON EL NOMBRE ENVIADO EN LA CONSULTA.
REMARK******************************************************************MOVE 0 TO MATCH-OK-OUT-VALNOM.MOVE NOMBRE-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.IF TIP-ID-INPUT-VALNOM  = 2INSPECT NOMBRE-AUX-VALNOM REPLACING ALL
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003"VALNOM.PROC" [Read only] 420 lines, 24053 charactersVAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003MOVE NOMBRE-AUX-VALNOM TO NOMBRE-INPUT-VALNOMELSE
INSPECT CADENA-VALNOM    REPLACING ALL
VALME1"." BY " ","-" BY " ", "," BY " ","C" BY "S","Z" BY "S","J" BY "G","V" BY "B","Y" BY "G","H" BY "G","I" BY "G"," DE " BY "    "," LA " BY "    "," DEL " BY "     "
VAL001INSPECT CADENA-VALNOM    REPLACING ALLRMB0002
VALME1"." BY " ","-" BY " ", "," BY " ",
VAL001"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",RMB0002
VAL001"Y" BY "G","H" BY "G","I" BY "G",RMB0002
VAL001" DE " BY "    "," LA " BY "    ",RMB0002
VAL001" DEL " BY "     "RMB0002PERFORM VARYING I-VALNOM FROM 1 BY 1
UNTIL I-VALNOM >= 66IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC
VALME1AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERICMOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)END-IF
END-PERFORMEND-IF.
MOVE SPACES TO VECTOR-INPUT-VALNOM.UNSTRING CADENA-VALNOMDELIMITED BY ALL " " INTOBASURA-VALNOMVM-INPUT-VALNOM(1) VM-INPUT-VALNOM(2) VM-INPUT-VALNOM(3)VM-INPUT-VALNOM(4) VM-INPUT-VALNOM(5)VM-INPUT-VALNOM(6) VM-INPUT-VALNOM(7) VM-INPUT-VALNOM(8)VM-INPUT-VALNOM(9) VM-INPUT-VALNOM(10)VM-INPUT-VALNOM(11) VM-INPUT-VALNOM(12) VM-INPUT-VALNOM(13)VM-INPUT-VALNOM(14)VM-INPUT-VALNOM(15)VM-INPUT-VALNOM(16) VM-INPUT-VALNOM(17) VM-INPUT-VALNOM(18)VM-INPUT-VALNOM(19)VM-INPUT-VALNOM(16) VM-INPUT-VALNOM(17) VM-INPUT-VALNOM(18)VM-INPUT-VALNOM(19)VM-INPUT-VALNOM(20)
******************PREPARA EL NOMBRE CORRECTO DEL ARCHIVO *********MOVE NOMBOK-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.IF TIP-ID-INPUT-VALNOM  NOT = 2INSPECT NOMBRE-AUX-VALNOM REPLACING ALL
VALME1"." BY " ","-" BY " ","," BY " ","C" BY "S","Z" BY "S","J" BY "G","V" BY "B","Y" BY "G","H" BY "G","I" BY "G"PERFORM VARYING I-VALNOM FROM 1 BY 1
UNTIL I-VALNOM >= 66IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC
VALME1AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERICMOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)END-IF
END-PERFORMELSE
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003MOVE NOMBRE-AUX-VALNOM TO NOMBOK-INPUT-VALNOMEND-IF.
MOVE SPACES TO VECTOR-OK-VALNOM.UNSTRING CADENA-VALNOMDELIMITED BY ALL " " INTOBASURA-VALNOMVM-OK-VALNOM(1) VM-OK-VALNOM(2) VM-OK-VALNOM(3)VM-OK-VALNOM(4) VM-OK-VALNOM(5)VM-OK-VALNOM(6) VM-OK-VALNOM(7) VM-OK-VALNOM(8)VM-OK-VALNOM(9) VM-OK-VALNOM(10)VM-OK-VALNOM(11) VM-OK-VALNOM(12) VM-OK-VALNOM(13)VM-OK-VALNOM(14) VM-OK-VALNOM(15)VM-OK-VALNOM(11) VM-OK-VALNOM(12) VM-OK-VALNOM(13)VM-OK-VALNOM(14) VM-OK-VALNOM(15)VM-OK-VALNOM(16) VM-OK-VALNOM(17) VM-OK-VALNOM(18)VM-OK-VALNOM(19) VM-OK-VALNOM(20).
REMARK***********HACE LA VALIDACION BLOQUE A BLOQUE********************MOVE 1 TO I-VALNOM.MOVE 0 TO BLOQOK-AUX-VALNOM.PERFORM UNTIL VM-INPUT-VALNOM(I-VALNOM) = SPACESMOVE 1 TO J-VALNOMPERFORM UNTIL J-VALNOM > 20IF VM-INPUT-VALNOM(I-VALNOM) = VM-OK-VALNOM(J-VALNOM)ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)MOVE 21 TO J-VALNOMELSE
MOVE 0 TO M-VALNOM
INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOMFOR CHARACTERS BEFORE INITIAL "*"IF M-VALNOM >= 15
MOVE 0 TO M-VALNOM
INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOMFOR CHARACTERS BEFORE INITIAL "N"END-IF
IF M-VALNOM > 0 AND < 15 AND I-VALNOM < 20
VLNM01AND (14 - M-VALNOM > 0)GJC0005COMPUTE INI-VALNOM = M-VALNOM + 2COMPUTE LON-VALNOM = 14 - M-VALNOMMOVE VM-OK-VALNOM(J-VALNOM) TO PEDAZO-VALNOMIF PEDAZO-VALNOM(INI-VALNOM:LON-VALNOM) =VM-INPUT-VALNOM(I-VALNOM + 1 ) ANDPEDAZO-VALNOM(1:M-VALNOM) =VM-INPUT-VALNOM(I-VALNOM)
ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)MOVE 21 TO J-VALNOM
ADD 1 TO I-VALNOM
MOVE SPACES TO VM-INPUT-VALNOM(I-VALNOM)END-IF
END-IF
END-IF
ADD 1 TO J-VALNOMEND-PERFORM
ADD 1 TO I-VALNOMIF I-VALNOM = 21
NEXT SENTENCEEND-IF
END-PERFORM.
IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOMMOVE 1 TO MATCH-OK-OUT-VALNOMELSE
IF TIP-ID-INPUT-VALNOM <> 2PERFORM 10100-MATCH-APROXIMADOELSEPERFORM 10100-MATCH-APROXIMADOELSE
PERFORM 10100-MATCH-APROX-EMPRESASEND-IF
IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOMMOVE 1 TO MATCH-OK-OUT-VALNOMEND-IF
END-IF.
REMARK**********************************************************************
REMARK*10100-MATCH-APROXIMADO.
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON
REMARK*     LOS TIPOS DE IDENTIFICACION 1, 3 Y 4.
REMARK**********************************************************************
10100-MATCH-APROXIMADO.IF BLOQOK-AUX-VALNOM > 0MOVE 65 TO APROX-TOT-VALNOM APROX-INP-VALNOMELSE
MOVE 70 TO APROX-TOT-VALNOM APROX-INP-VALNOMEND-IF
MOVE 1 TO I-VALNOM.PERFORM UNTIL I-VALNOM > 10MOVE 1 TO J-VALNOMPERFORM UNTIL J-VALNOM > 10MOVE 0 TO LETRAS-OK-VALNOM LETRAS-OK2-VALNOMMOVE 1 TO K-VALNOMMOVE 1 TO L-VALNOMIF VM-INPUT-VALNOM(I-VALNOM) NOT = SPACES ANDVM-OK-VALNOM   (J-VALNOM) NOT = SPACESPERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJOR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003
VALMEJAND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003
VALMEJOR = "N"))GJC0003IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT= SPACESADD 1 TO LETRAS-OK-VALNOM
ADD 1 TO K-VALNOM
ADD 1 TO L-VALNOM
ELSE
MOVE 19 TO K-VALNOM
END-IF
ELSE
ADD 1   TO K-VALNOM
IF K-VALNOM <= 15 AND L-VALNOM < 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM + 1) =VMM-OK-VALNOM(J-VALNOM,K-VALNOM )ADD 1 TO L-VALNOM
END-IF
END-IF
END-IF
END-PERFORM
MOVE 1 TO K-VALNOM
MOVE 1 TO L-VALNOM
PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15MOVE 1 TO L-VALNOM
PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJOR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003
VALMEJAND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003
VALMEJOR = "N"))GJC0003IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT = SPACESADD 1 TO LETRAS-OK2-VALNOM
ADD 1 TO K-VALNOM
ADD 1 TO L-VALNOM
ELSE
MOVE 19 TO K-VALNOM
END-IF
ELSE
ADD 1   TO L-VALNOM
IF L-VALNOM <= 15 AND K-VALNOM < 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM(J-VALNOM,K-VALNOM + 1)ADD 1 TO K-VALNOM
END-IF
END-IF
END-IF
END-PERFORM
END-IF
IF LETRAS-OK2-VALNOM > LETRAS-OK-VALNOMMOVE LETRAS-OK2-VALNOM TO LETRAS-OK-VALNOMEND-IF
IF LETRAS-OK-VALNOM > 0MOVE 0 TO TOTLET-INP-VALNOM TOTLET-OK-VALNOMINSPECT VM-INPUT-VALNOM(I-VALNOM) TALLYINGTOTLET-INP-VALNOM
FOR CHARACTERS BEFORE INITIAL " "INSPECT VM-OK-VALNOM   (J-VALNOM) TALLYINGTOTLET-OK-VALNOM
FOR CHARACTERS BEFORE INITIAL " "MOVE 0 TO POR-TOT-VALNOM  POR-INP-VALNOMIF TOTLET-OK-VALNOM >= 3
COMPUTE POR-TOT-VALNOM = LETRAS-OK-VALNOM * 100 /
TOTLET-OK-VALNOMEND-IF
IF TOTLET-INP-VALNOM >= 3
COMPUTE POR-INP-VALNOM = LETRAS-OK-VALNOM * 100 /
TOTLET-INP-VALNOMEND-IF
IF TOTLET-OK-VALNOM > TOTLET-INP-VALNOMCOMPUTE A-VALNOM = TOTLET-INP-VALNOM * 100 /
TOTLET-OK-VALNOMELSE
COMPUTE A-VALNOM = TOTLET-OK-VALNOM  * 100 /
TOTLET-INP-VALNOMEND-IF
VALME1IF ((POR-TOT-VALNOM + POR-INP-VALNOM)/2 >=
VALME1APROX-TOT-VALNOM) AND
VALME1A-VALNOM >= 63VALME1APROX-TOT-VALNOM) AND
VALME1A-VALNOM >= 63
VALME1****   display "%TOT=",POR-TOT-VALNOM, " %INP=", POR-INP-VALNOM,
VALME1****"A-VALNOM=", A-VALNOM
VALME1*****IF (POR-TOT-VALNOM >= APROX-TOT-VALNOM AND
VALME1*****POR-INP-VALNOM >= APROX-INP-VALNOM ) OR
VALME1*****((POR-TOT-VALNOM >= APROX-TOT-VALNOM OR
VALME1*****POR-INP-VALNOM >= APROX-INP-VALNOM ) AND
VALME1*****A-VALNOM >= 70)
ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)END-IF
END-IF
ADD 1 TO J-VALNOMEND-PERFORM
ADD 1 TO I-VALNOMEND-PERFORM.
REMARK**********************************************************************
REMARK*10100-MATCH-APROX-EMPRESAS
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON
REMARK*     LOS TIPOS DE IDENTIFICACION 2.
REMARK**********************************************************************
10100-MATCH-APROX-EMPRESAS.
MOVE ZEROS TO TOTLET-INP-VALNOM
MOVE ZEROS TO LETRAS-OK2-VALNOM
VALMEJ    MOVE ZEROS TO A-VALNOMGJC0003
MOVE 1 TO K-VALNOM
PERFORM UNTIL K-VALNOM > 65MOVE K-VALNOM  TO I-VALNOMMOVE 1TO J-VALNOMMOVE ZEROS TO LETRAS-OK-VALNOMPERFORM UNTIL J-VALNOM > 65 OR I-VALNOM > 65IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES ANDV-NOMBRE-VALNOM(I-VALNOM) <> "."IF V-NOMBRE-VALNOM(I-VALNOM) =V-NOMBOK-VALNOM(J-VALNOM)ADD 1 TO LETRAS-OK-VALNOMADD 1 TO I-VALNOM
ADD 1 TO J-VALNOMELSE
ADD 1 TO J-VALNOMEND-IF
ELSE
ADD 1 TO I-VALNOMEND-IF
END-PERFORM
IF LETRAS-OK-VALNOM > LETRAS-OK2-VALNOMMOVE LETRAS-OK-VALNOM TO LETRAS-OK2-VALNOMEND-IF
ADD 1 TO K-VALNOM
END-PERFORM.
MOVE 1 TO I-VALNOM
PERFORM UNTIL I-VALNOM > 65MOVE 1 TO I-VALNOMPERFORM UNTIL I-VALNOM > 65IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES ANDV-NOMBRE-VALNOM(I-VALNOM) <> "."ADD 1 TO TOTLET-INP-VALNOMEND-IF
ADD 1 TO I-VALNOM
END-PERFORM.
COMPUTE A-VALNOM = LETRAS-OK2-VALNOM * 100 /
TOTLET-INP-VALNOM.
IF A-VALNOM >= 75
ADD 1 TO BLOQOK-AUX-VALNOM
END-IF.
VALMEJ    MOVE 0 TO K-VALNOMGJC0003
VALMEJ   IF BLOQOK-AUX-VALNOM < BLOQUES-INPUT-VALNOMGJC0003
VALMEJINITIALIZE A-VALNOM VECTORES-VALNOM L-VALNOMGJC0003
VALMEJPERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 65    GJC0003
VALMEJIF V-NOMBRE-VALNOM(J-VALNOM) <> " "GJC0003
VALMEJMOVE FUNCTION ORD(V-NOMBRE-VALNOM(J-VALNOM))     GJC0003
VALMEJTO I-VALNOMGJC0003
VALMEJADD 1 TO CONT-LET-INPUT-VALNOM(I-VALNOM)GJC0003
VALMEJEND-IFGJC0003
VALMEJIF V-NOMBOK-VALNOM(J-VALNOM) <> " "GJC0003
VALMEJMOVE FUNCTION ORD(V-NOMBOK-VALNOM(J-VALNOM))     GJC0003
VALMEJTO I-VALNOMGJC0003
VALMEJADD 1 TO CONT-LET-OK-VALNOM(I-VALNOM)GJC0003
VALMEJEND-IFGJC0003
VALMEJEND-PERFORMGJC0003
VALMEJMOVE 0 TO I-VALNOMGJC0003
VALMEJPERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 256  GJC0003
VALMEJIF CONT-LET-OK-VALNOM(J-VALNOM)  > 0GJC0003
VALMEJADD 1 TO I-VALNOMGJC0003
VALMEJIF CONT-LET-OK-VALNOM(J-VALNOM) <GJC0003
VALMEJCONT-LET-INPUT-VALNOM(J-VALNOM)GJC0003
VALMEJCOMPUTE L-VALNOM = L-VALNOM + 100GJC0003
VALMEJELSEGJC0003
VALMEJCOMPUTE L-VALNOM = L-VALNOM +GJC0003
VALMEJ(CONT-LET-INPUT-VALNOM(J-VALNOM)GJC0003
VALMEJ*  100 /CONT-LET-OK-VALNOM(J-VALNOM))  GJC0003
VALMEJEND-IFGJC0003
VALMEJEND-IFGJC0003
VALMEJEND-PERFORMGJC0003
VALMEJCOMPUTE K-VALNOM = L-VALNOM/I-VALNOMGJC0003
VALMEJIF (A-VALNOM >= 40 AND K-VALNOM > 80) ORGJC0003
VALMEJ((A-VALNOM >= 35 AND A-VALNOM < 40) AND K-VALNOM > 85) ORGJC0003
VALMEJ((A-VALNOM >= 25 AND A-VALNOM < 35) AND K-VALNOM = 100)  GJC0003
VALMEJADD 1 TO BLOQOK-AUX-VALNOMGJC0003
VALMEJEND-IFGJC0003
VALMEJ   END-IF.GJC0003
~
~
~
~
~
~"VALNOM.PROC" [Read only] line 420 of 420 --100%-- REMARK*VALNOM-PROC.v.0005
REMARK******************************************************************
REMARK* RUTINA CREADA PARA HACER LA VALIDACION DE NOMBRES CONTRA LOS
REMARK* ARCHIVOS DE LA REGISTRADURIA, DIAN Y DAS, DEPENDIENDO DEL TIPO
REMARK* DE IDENTIFICACION RECIBIDA.
REMARK*    PARAMETROS
REMARK*BLOQUES-INPUT-VALNOM - NUMERO DE BLOQUES A VALIDAR
REMARK*NOMBRE-INPUT-VALNOM  - NOMBRE A VALIDAR
REMARK*NOMBOK-INPUT-VALNOM  - NOMBRE CORRECTO CON EL QUE SE
REMARK*DEBE COMPARAR NOMBRE-INPUT-VALNOM
REMARK*TIP-ID-INPUT-VALNOM  - TIPO DE IDENTIFICACION A VALIDAR
REMARK*    SALIDAS:
REMARK*MATCH-OK-OUT-VALNOM  - 0-NO HUBO1-HUBO
REMARK*******************************************************************
REMARK* RMB0002   * VAL001: SE MEJORA LA VALIDACION DE NOMBRES EN PERSONAS
REMARK* R.MARTINEZ* JURIDICAS
REMARK* DIC.2002  *
REMARK*******************************************************************
REMARK* GJC0003    * VALMEJ :SE CREAN ANUEVOS CAMPOS PARA MEJORAR LA VALIDACION
REMARK* G.JIMENEZ  * DE NIT. PARA MEJORA TAMBIEN SE AMPLIA TAMANO DE VARIABLES
REMARK* MARZO/2003 * PARA CEDULAS, EL COMODIN QUE USUALMENTE CORRESPONDE A LA N
REMARK** SOLO SE COMPARA CONTRA N O CONTRA BLANCOS
REMARK*************************************************************************
REMARK* GJC0004    * VALME1 :CON EL FIN DE AFINAR AUN MAS EL PROCESO DE VALIDA-
REMARK* R.MARTINEZ * CION DE NOMBRES, EN EL MATCH A PROXIMADO DE PERSONAS NATU-
REMARK* G.JIMENEZ  * RALES SE CAMBIA EL CALCULO FINAL PARA DETERMINAR SI UN BLO-
REMARK* MARZO/2003 * QUE ES O NO VALIDO. PARA QUE UN NOMBRE QUE VENGA NUMERICO
REMARK** NO SE CONVIERTA EN COMODIN, EN LAS SUSTITUCIONES POR *
REMARK** SE VALIDA QUE EL CONTENIDO NO SEA NUMERICO.
REMARK*************************************************************************
REMARK* GJC0005    * VLNM01: LOS PROGRAMAS ABORTAN CUANDO ALGUNO DE LOS
REMARK* G.JIMENEZ  *PARAMETROS DE UN SUBSTRING QUEDA EN 0 O EN
REMARK* NOV/2005   *UN NUMERO MENOR QUE 0. EJ: NOMBRE(I:J) DONDE I O
REMARK**J ES 0.
REMARK*************************************************************************
10000-MATCH-NOMBRES-VALNOM.
REMARK******************************************************************
REMARK*10000-MATCH-NOMBRE-VALNOM.
REMARK* SE BUSCA DETERMINAR SI EL NOMBRE DE LA PERSONA CONSULTADA HACE
REMARK*CON EL NOMBRE ENVIADO EN LA CONSULTA.
REMARK******************************************************************MOVE 0 TO MATCH-OK-OUT-VALNOM.MOVE NOMBRE-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.IF TIP-ID-INPUT-VALNOM  = 2INSPECT NOMBRE-AUX-VALNOM REPLACING ALL
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003MOVE NOMBRE-AUX-VALNOM TO NOMBRE-INPUT-VALNOMELSE
INSPECT CADENA-VALNOM    REPLACING ALL
VALME1"." BY " ","-" BY " ", "," BY " ","C" BY "S","Z" BY "S","J" BY "G","V" BY "B","Y" BY "G","H" BY "G","I" BY "G"," DE " BY "    "," LA " BY "    "," DEL " BY "     "
VAL001INSPECT CADENA-VALNOM    REPLACING ALLRMB0002
VALME1"." BY " ","-" BY " ", "," BY " ",
VAL001"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",RMB0002
VAL001"Y" BY "G","H" BY "G","I" BY "G",RMB0002
VAL001" DE " BY "    "," LA " BY "    ",RMB0002
VAL001" DEL " BY "     "RMB0002PERFORM VARYING I-VALNOM FROM 1 BY 1
UNTIL I-VALNOM >= 66IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC
VALME1AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERICMOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)END-IF
END-PERFORMEND-IF.
MOVE SPACES TO VECTOR-INPUT-VALNOM.UNSTRING CADENA-VALNOMDELIMITED BY ALL " " INTOBASURA-VALNOMVM-INPUT-VALNOM(1) VM-INPUT-VALNOM(2) VM-INPUT-VALNOM(3)VM-INPUT-VALNOM(4) VM-INPUT-VALNOM(5)VM-INPUT-VALNOM(6) VM-INPUT-VALNOM(7) VM-INPUT-VALNOM(8)VM-INPUT-VALNOM(9) VM-INPUT-VALNOM(10)VM-INPUT-VALNOM(11) VM-INPUT-VALNOM(12) VM-INPUT-VALNOM(13)VM-INPUT-VALNOM(14)VM-INPUT-VALNOM(15)VM-INPUT-VALNOM(16) VM-INPUT-VALNOM(17) VM-INPUT-VALNOM(18)VM-INPUT-VALNOM(19)VM-INPUT-VALNOM(16) VM-INPUT-VALNOM(17) VM-INPUT-VALNOM(18)VM-INPUT-VALNOM(19)VM-INPUT-VALNOM(20)
******************PREPARA EL NOMBRE CORRECTO DEL ARCHIVO *********MOVE NOMBOK-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.IF TIP-ID-INPUT-VALNOM  NOT = 2INSPECT NOMBRE-AUX-VALNOM REPLACING ALL
VALME1"." BY " ","-" BY " ","," BY " ","C" BY "S","Z" BY "S","J" BY "G","V" BY "B","Y" BY "G","H" BY "G","I" BY "G"PERFORM VARYING I-VALNOM FROM 1 BY 1
UNTIL I-VALNOM >= 66IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC
VALME1AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERICMOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)END-IF
END-PERFORMELSE
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VAL001INSPECT NOMBRE-AUX-VALNOM REPLACING ALLRMB0002
VAL001" S.A. " BY "",RMB0002
VAL001"." BY " ", " LTDA " BY "",RMB0002
VAL001" LIMITADA " BY "",RMB0002
VAL001" CIA " BY "     ", " COMPA/IA " BY "",RMB0002
VAL001" INVERSIONES " BY "",RMB0002
VAL001" EMPRESA " BY "",RMB0002
VAL001" CORPORACION " BY "",RMB0002
VAL001" DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002
VAL001" S " BY "   ", " A " BY "   "RMB0002
VALMEJ" Y " BY "   "GJC0003
VALMEJINSPECT NOMBRE-AUX-VALNOM REPLACING ALLGJC0003
VALMEJ"." BY " ","-" BY " ",GJC0003
VALMEJ"C" BY "S","Z" BY "S","J" BY "G","V" BY "B",GJC0003
VALMEJ"Y" BY "G","H" BY "G","I" BY "G"GJC0003MOVE NOMBRE-AUX-VALNOM TO NOMBOK-INPUT-VALNOMEND-IF.
MOVE SPACES TO VECTOR-OK-VALNOM.UNSTRING CADENA-VALNOMDELIMITED BY ALL " " INTOBASURA-VALNOMVM-OK-VALNOM(1) VM-OK-VALNOM(2) VM-OK-VALNOM(3)VM-OK-VALNOM(4) VM-OK-VALNOM(5)VM-OK-VALNOM(6) VM-OK-VALNOM(7) VM-OK-VALNOM(8)VM-OK-VALNOM(9) VM-OK-VALNOM(10)VM-OK-VALNOM(11) VM-OK-VALNOM(12) VM-OK-VALNOM(13)VM-OK-VALNOM(14) VM-OK-VALNOM(15)VM-OK-VALNOM(11) VM-OK-VALNOM(12) VM-OK-VALNOM(13)VM-OK-VALNOM(14) VM-OK-VALNOM(15)VM-OK-VALNOM(16) VM-OK-VALNOM(17) VM-OK-VALNOM(18)VM-OK-VALNOM(19) VM-OK-VALNOM(20).
REMARK***********HACE LA VALIDACION BLOQUE A BLOQUE********************MOVE 1 TO I-VALNOM.MOVE 0 TO BLOQOK-AUX-VALNOM.PERFORM UNTIL VM-INPUT-VALNOM(I-VALNOM) = SPACESMOVE 1 TO J-VALNOMPERFORM UNTIL J-VALNOM > 20IF VM-INPUT-VALNOM(I-VALNOM) = VM-OK-VALNOM(J-VALNOM)ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)MOVE 21 TO J-VALNOMELSE
MOVE 0 TO M-VALNOM
INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOMFOR CHARACTERS BEFORE INITIAL "*"IF M-VALNOM >= 15
MOVE 0 TO M-VALNOM
INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOMFOR CHARACTERS BEFORE INITIAL "N"END-IF
IF M-VALNOM > 0 AND < 15 AND I-VALNOM < 20
VLNM01AND (14 - M-VALNOM > 0)GJC0005COMPUTE INI-VALNOM = M-VALNOM + 2COMPUTE LON-VALNOM = 14 - M-VALNOMMOVE VM-OK-VALNOM(J-VALNOM) TO PEDAZO-VALNOMIF PEDAZO-VALNOM(INI-VALNOM:LON-VALNOM) =VM-INPUT-VALNOM(I-VALNOM + 1 ) ANDPEDAZO-VALNOM(1:M-VALNOM) =VM-INPUT-VALNOM(I-VALNOM)
ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)MOVE 21 TO J-VALNOM
ADD 1 TO I-VALNOM
MOVE SPACES TO VM-INPUT-VALNOM(I-VALNOM)END-IF
END-IF
END-IF
ADD 1 TO J-VALNOMEND-PERFORM
ADD 1 TO I-VALNOMIF I-VALNOM = 21
NEXT SENTENCEEND-IF
END-PERFORM.
IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOMMOVE 1 TO MATCH-OK-OUT-VALNOMELSE
IF TIP-ID-INPUT-VALNOM <> 2PERFORM 10100-MATCH-APROXIMADOELSEPERFORM 10100-MATCH-APROXIMADOELSE
PERFORM 10100-MATCH-APROX-EMPRESASEND-IF
IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOMMOVE 1 TO MATCH-OK-OUT-VALNOMEND-IF
END-IF.
REMARK**********************************************************************
REMARK*10100-MATCH-APROXIMADO.
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON
REMARK*     LOS TIPOS DE IDENTIFICACION 1, 3 Y 4.
REMARK**********************************************************************
10100-MATCH-APROXIMADO.IF BLOQOK-AUX-VALNOM > 0MOVE 65 TO APROX-TOT-VALNOM APROX-INP-VALNOMELSE
MOVE 70 TO APROX-TOT-VALNOM APROX-INP-VALNOMEND-IF
MOVE 1 TO I-VALNOM.PERFORM UNTIL I-VALNOM > 10MOVE 1 TO J-VALNOMPERFORM UNTIL J-VALNOM > 10MOVE 0 TO LETRAS-OK-VALNOM LETRAS-OK2-VALNOMMOVE 1 TO K-VALNOMMOVE 1 TO L-VALNOMIF VM-INPUT-VALNOM(I-VALNOM) NOT = SPACES ANDVM-OK-VALNOM   (J-VALNOM) NOT = SPACESPERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJOR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003
VALMEJAND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003
VALMEJOR = "N"))GJC0003IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT= SPACESADD 1 TO LETRAS-OK-VALNOM
ADD 1 TO K-VALNOM
ADD 1 TO L-VALNOM
ELSE
MOVE 19 TO K-VALNOM
END-IF
ELSE
ADD 1   TO K-VALNOM
IF K-VALNOM <= 15 AND L-VALNOM < 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM + 1) =VMM-OK-VALNOM(J-VALNOM,K-VALNOM )ADD 1 TO L-VALNOM
END-IF
END-IF
END-IF
END-PERFORM
MOVE 1 TO K-VALNOM
MOVE 1 TO L-VALNOM
PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15MOVE 1 TO L-VALNOM
PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJOR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003
VALMEJAND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003
VALMEJOR = "N"))GJC0003IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT = SPACESADD 1 TO LETRAS-OK2-VALNOM
ADD 1 TO K-VALNOM
ADD 1 TO L-VALNOM
ELSE
MOVE 19 TO K-VALNOM
END-IF
ELSE
ADD 1   TO L-VALNOM
IF L-VALNOM <= 15 AND K-VALNOM < 15IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =VMM-OK-VALNOM(J-VALNOM,K-VALNOM + 1)ADD 1 TO K-VALNOM
END-IF
END-IF
END-IF
END-PERFORM
END-IF
IF LETRAS-OK2-VALNOM > LETRAS-OK-VALNOMMOVE LETRAS-OK2-VALNOM TO LETRAS-OK-VALNOMEND-IF
IF LETRAS-OK-VALNOM > 0MOVE 0 TO TOTLET-INP-VALNOM TOTLET-OK-VALNOMINSPECT VM-INPUT-VALNOM(I-VALNOM) TALLYINGTOTLET-INP-VALNOM
FOR CHARACTERS BEFORE INITIAL " "INSPECT VM-OK-VALNOM   (J-VALNOM) TALLYINGTOTLET-OK-VALNOM
FOR CHARACTERS BEFORE INITIAL " "MOVE 0 TO POR-TOT-VALNOM  POR-INP-VALNOMIF TOTLET-OK-VALNOM >= 3
COMPUTE POR-TOT-VALNOM = LETRAS-OK-VALNOM * 100 /
TOTLET-OK-VALNOMEND-IF
IF TOTLET-INP-VALNOM >= 3
COMPUTE POR-INP-VALNOM = LETRAS-OK-VALNOM * 100 /
TOTLET-INP-VALNOMEND-IF
IF TOTLET-OK-VALNOM > TOTLET-INP-VALNOMCOMPUTE A-VALNOM = TOTLET-INP-VALNOM * 100 /
TOTLET-OK-VALNOMELSE
COMPUTE A-VALNOM = TOTLET-OK-VALNOM  * 100 /
TOTLET-INP-VALNOMEND-IF
VALME1IF ((POR-TOT-VALNOM + POR-INP-VALNOM)/2 >=
VALME1APROX-TOT-VALNOM) AND
VALME1A-VALNOM >= 63VALME1APROX-TOT-VALNOM) AND
VALME1A-VALNOM >= 63
VALME1****   display "%TOT=",POR-TOT-VALNOM, " %INP=", POR-INP-VALNOM,
VALME1****"A-VALNOM=", A-VALNOM
VALME1*****IF (POR-TOT-VALNOM >= APROX-TOT-VALNOM AND
VALME1*****POR-INP-VALNOM >= APROX-INP-VALNOM ) OR
VALME1*****((POR-TOT-VALNOM >= APROX-TOT-VALNOM OR
VALME1*****POR-INP-VALNOM >= APROX-INP-VALNOM ) AND
VALME1*****A-VALNOM >= 70)
ADD 1 TO BLOQOK-AUX-VALNOMMOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
VM-INPUT-VALNOM(I-VALNOM)END-IF
END-IF
ADD 1 TO J-VALNOMEND-PERFORM
ADD 1 TO I-VALNOMEND-PERFORM.
REMARK**********************************************************************
REMARK*10100-MATCH-APROX-EMPRESAS
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON
REMARK*     LOS TIPOS DE IDENTIFICACION 2.
REMARK**********************************************************************
10100-MATCH-APROX-EMPRESAS.
MOVE ZEROS TO TOTLET-INP-VALNOM
MOVE ZEROS TO LETRAS-OK2-VALNOM
VALMEJ    MOVE ZEROS TO A-VALNOMGJC0003
MOVE 1 TO K-VALNOM
PERFORM UNTIL K-VALNOM > 65MOVE K-VALNOM  TO I-VALNOMMOVE 1TO J-VALNOMMOVE ZEROS TO LETRAS-OK-VALNOMPERFORM UNTIL J-VALNOM > 65 OR I-VALNOM > 65IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES ANDV-NOMBRE-VALNOM(I-VALNOM) <> "."IF V-NOMBRE-VALNOM(I-VALNOM) =V-NOMBOK-VALNOM(J-VALNOM)ADD 1 TO LETRAS-OK-VALNOMADD 1 TO I-VALNOM
ADD 1 TO J-VALNOMELSE
ADD 1 TO J-VALNOMEND-IF
ELSE
ADD 1 TO I-VALNOMEND-IF
END-PERFORM
IF LETRAS-OK-VALNOM > LETRAS-OK2-VALNOMMOVE LETRAS-OK-VALNOM TO LETRAS-OK2-VALNOMEND-IF
ADD 1 TO K-VALNOM
END-PERFORM.
MOVE 1 TO I-VALNOM
PERFORM UNTIL I-VALNOM > 65MOVE 1 TO I-VALNOMPERFORM UNTIL I-VALNOM > 65IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES ANDV-NOMBRE-VALNOM(I-VALNOM) <> "."ADD 1 TO TOTLET-INP-VALNOMEND-IF
ADD 1 TO I-VALNOM
END-PERFORM.
COMPUTE A-VALNOM = LETRAS-OK2-VALNOM * 100 /
TOTLET-INP-VALNOM.
IF A-VALNOM >= 75
ADD 1 TO BLOQOK-AUX-VALNOM
END-IF.
VALMEJ    MOVE 0 TO K-VALNOMGJC0003
VALMEJ   IF BLOQOK-AUX-VALNOM < BLOQUES-INPUT-VALNOMGJC0003
VALMEJINITIALIZE A-VALNOM VECTORES-VALNOM L-VALNOMGJC0003
VALMEJPERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 65    GJC0003
VALMEJIF V-NOMBRE-VALNOM(J-VALNOM) <> " "GJC0003
VALMEJMOVE FUNCTION ORD(V-NOMBRE-VALNOM(J-VALNOM))     GJC0003
VALMEJTO I-VALNOMGJC0003
VALMEJADD 1 TO CONT-LET-INPUT-VALNOM(I-VALNOM)GJC0003
VALMEJEND-IFGJC0003
VALMEJIF V-NOMBOK-VALNOM(J-VALNOM) <> " "GJC0003
VALMEJMOVE FUNCTION ORD(V-NOMBOK-VALNOM(J-VALNOM))     GJC0003
VALMEJTO I-VALNOMGJC0003
VALMEJADD 1 TO CONT-LET-OK-VALNOM(I-VALNOM)GJC0003
VALMEJEND-IFGJC0003
VALMEJEND-PERFORMGJC0003
VALMEJMOVE 0 TO I-VALNOMGJC0003
VALMEJPERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 256  GJC0003
VALMEJIF CONT-LET-OK-VALNOM(J-VALNOM)  > 0GJC0003
VALMEJADD 1 TO I-VALNOMGJC0003
VALMEJIF CONT-LET-OK-VALNOM(J-VALNOM) <GJC0003
VALMEJCONT-LET-INPUT-VALNOM(J-VALNOM)GJC0003
VALMEJCOMPUTE L-VALNOM = L-VALNOM + 100GJC0003
VALMEJELSEGJC0003
VALMEJCOMPUTE L-VALNOM = L-VALNOM +GJC0003
VALMEJ(CONT-LET-INPUT-VALNOM(J-VALNOM)GJC0003
VALMEJ*  100 /CONT-LET-OK-VALNOM(J-VALNOM))  GJC0003
VALMEJEND-IFGJC0003
VALMEJEND-IFGJC0003
VALMEJEND-PERFORMGJC0003
VALMEJCOMPUTE K-VALNOM = L-VALNOM/I-VALNOMGJC0003
VALMEJIF (A-VALNOM >= 40 AND K-VALNOM > 80) ORGJC0003
VALMEJ((A-VALNOM >= 35 AND A-VALNOM < 40) AND K-VALNOM > 85) ORGJC0003
VALMEJ((A-VALNOM >= 25 AND A-VALNOM < 35) AND K-VALNOM = 100)  GJC0003
VALMEJADD 1 TO BLOQOK-AUX-VALNOMGJC0003
VALMEJEND-IFGJC0003
VALMEJ   END-IF.GJC0003
~
~
~
~
~
~VALMEJEND-IFGJC0003
VALMEJ   END-IF.GJC0003
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~VALMEJADD 1 TO BLOQOK-AUX-VALNOMGJC0003
VALMEJ((A-VALNOM >= 25 AND A-VALNOM < 35) AND K-VALNOM = 100)  GJC0003

VALMEJ((A-VALNOM >= 35 AND A-VALNOM < 40) AND K-VALNOM > 85) ORGJC0003


VALMEJIF (A-VALNOM >= 40 AND K-VALNOM > 80) ORGJC0003VALMEJCOMPUTE K-VALNOM = L-VALNOM/I-VALNOMGJC0003VALMEJEND-PERFORMGJC0003VALMEJEND-IFGJC0003VALMEJEND-IFGJC0003
VALMEJ   END-IF.GJC0003
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~:q/d/iccol/desarrollo/copys>^[  /d/iccol/desarrollo/copys>view VALNOM.PROCls -l VALNOM*   
-rwxrwxr-x   1 icehad   icdatacr   26321 Aug  7  2010 VALNOM-EHA.PROC
-rwxrwxr-x   1 icehad   icdatacr    3846 Aug  7  2010 VALNOM-EHA.WS
-rwxrwxr-x   1 icgjcd   icdatacr   24053 Jan  2  2009 VALNOM.PROC
-rwxrwxr-x   1 icrmbd   icdatacr   22611 Jul  9  2004 VALNOM.PROC.0002
-rwxrwxr-x   1 icrmbd   icdatacr   17831 Mar 17  2003 VALNOM.PROC.NUE
-rwxrwxr-x   1 icgjcd   icdatacr    3266 Nov 10  2005 VALNOM.WS
-rwxrwxr-x   1 iccavd   icdatacr    7128 Aug 28  2007 VALNOMCSV.PROC
-rwxrwxr-x   1 iccavd   icdatacr    1555 Aug  2  2007 VALNOMCSV.WS
-rwxrwxr-x   1 icgjcd   icdatacr   25756 Oct  8  2003 VALNOMGJ.ANT.PROC
-rwxrwxr-x   1 icgjcd   icdatacr   23909 Nov 10  2005 VALNOMGJ.PROC
-rwxrwxr-x   1 icgjcd   icdatacr    3668 Oct  7  2003 VALNOMGJ.WS
/d/iccol/desarrollo/copys>:clear
ksh: :clear:  not found
/d/iccol/desarrollo/copys>clear
/d/iccol/desarrollo/copys>cat  VALNOM.PROC  VALNOM.PROC    WS
REMARK*VALNOM-PROC.v.0005
REMARK******************************************************************
REMARK* RUTINA CREADA PARA HACER LA VALIDACION DE NOMBRES CONTRA LOS 
REMARK* ARCHIVOS DE LA REGISTRADURIA, DIAN Y DAS, DEPENDIENDO DEL TIPO
REMARK* DE IDENTIFICACION RECIBIDA.    
REMARK*    PARAMETROS                      
REMARK*        BLOQUES-INPUT-VALNOM - NUMERO DE BLOQUES A VALIDAR
REMARK*        NOMBRE-INPUT-VALNOM  - NOMBRE A VALIDAR
REMARK*        NOMBOK-INPUT-VALNOM  - NOMBRE CORRECTO CON EL QUE SE 
REMARK*                               DEBE COMPARAR NOMBRE-INPUT-VALNOM
REMARK*        TIP-ID-INPUT-VALNOM  - TIPO DE IDENTIFICACION A VALIDAR
REMARK*    SALIDAS:
REMARK*        MATCH-OK-OUT-VALNOM  - 0-NO HUBO       1-HUBO      
REMARK*******************************************************************
REMARK* RMB0002   * VAL001: SE MEJORA LA VALIDACION DE NOMBRES EN PERSONAS
REMARK* R.MARTINEZ* JURIDICAS                                             
REMARK* DIC.2002  * 
REMARK*******************************************************************
REMARK* GJC0003    * VALMEJ :SE CREAN ANUEVOS CAMPOS PARA MEJORAR LA VALIDACION
REMARK* G.JIMENEZ  * DE NIT. PARA MEJORA TAMBIEN SE AMPLIA TAMANO DE VARIABLES
REMARK* MARZO/2003 * PARA CEDULAS, EL COMODIN QUE USUALMENTE CORRESPONDE A LA N
REMARK*            * SOLO SE COMPARA CONTRA N O CONTRA BLANCOS
REMARK*************************************************************************
REMARK* GJC0004    * VALME1 :CON EL FIN DE AFINAR AUN MAS EL PROCESO DE VALIDA- 
REMARK* R.MARTINEZ * CION DE NOMBRES, EN EL MATCH A PROXIMADO DE PERSONAS NATU- 
REMARK* G.JIMENEZ  * RALES SE CAMBIA EL CALCULO FINAL PARA DETERMINAR SI UN BLO-
REMARK* MARZO/2003 * QUE ES O NO VALIDO. PARA QUE UN NOMBRE QUE VENGA NUMERICO 
REMARK*            * NO SE CONVIERTA EN COMODIN, EN LAS SUSTITUCIONES POR *
REMARK*            * SE VALIDA QUE EL CONTENIDO NO SEA NUMERICO.
REMARK*************************************************************************
REMARK* GJC0005    * VLNM01: LOS PROGRAMAS ABORTAN CUANDO ALGUNO DE LOS       
REMARK* G.JIMENEZ  *         PARAMETROS DE UN SUBSTRING QUEDA EN 0 O EN         
REMARK* NOV/2005   *         UN NUMERO MENOR QUE 0. EJ: NOMBRE(I:J) DONDE I O  
REMARK*            *         J ES 0.                                        
REMARK*************************************************************************
       10000-MATCH-NOMBRES-VALNOM.                 
REMARK******************************************************************
REMARK*10000-MATCH-NOMBRE-VALNOM.                   
REMARK* SE BUSCA DETERMINAR SI EL NOMBRE DE LA PERSONA CONSULTADA HACE 
REMARK*       CON EL NOMBRE ENVIADO EN LA CONSULTA. 
REMARK******************************************************************
           MOVE 0 TO MATCH-OK-OUT-VALNOM.
           MOVE NOMBRE-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.
           IF TIP-ID-INPUT-VALNOM  = 2 
               INSPECT NOMBRE-AUX-VALNOM REPLACING ALL
VAL001           " S.A. " BY "      ",                                  RMB0002 
VAL001           "." BY " ", " LTDA " BY "      ",                      RMB0002 
VAL001           " LIMITADA " BY "          ",                          RMB0002 
VAL001           " CIA " BY "     ", " COMPA/IA " BY "          ",      RMB0002 
VAL001           " INVERSIONES " BY "             ",                    RMB0002 
VAL001           " EMPRESA " BY "         ",                            RMB0002 
VAL001           " CORPORACION " BY "             ",                    RMB0002 
VAL001           " DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002 
VAL001           " S " BY "   ", " A " BY "   "                         RMB0002 
VALMEJ           " Y " BY "   "                                         GJC0003 
VAL001         INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                  RMB0002 
VAL001           " S.A. " BY "      ",                                  RMB0002 
VAL001           "." BY " ", " LTDA " BY "      ",                      RMB0002 
VAL001           " LIMITADA " BY "          ",                          RMB0002 
VAL001           " CIA " BY "     ", " COMPA/IA " BY "          ",      RMB0002 
VAL001           " INVERSIONES " BY "             ",                    RMB0002 
VAL001           " EMPRESA " BY "         ",                            RMB0002 
VAL001           " CORPORACION " BY "             ",                    RMB0002 
VAL001           " DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002 
VAL001           " S " BY "   ", " A " BY "   "                         RMB0002 
VALMEJ           " Y " BY "   "                                         GJC0003 
VALMEJ         INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                  GJC0003 
VALMEJ                "." BY " ","-" BY " ",                            GJC0003 
VALMEJ                "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",      GJC0003 
VALMEJ                "Y" BY "G","H" BY "G","I" BY "G"                  GJC0003 
VALMEJ         INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                  GJC0003 
VALMEJ                "." BY " ","-" BY " ",                            GJC0003 
VALMEJ                "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",      GJC0003 
VALMEJ                "Y" BY "G","H" BY "G","I" BY "G"                  GJC0003 
               MOVE NOMBRE-AUX-VALNOM TO NOMBRE-INPUT-VALNOM
           ELSE   
              INSPECT CADENA-VALNOM    REPLACING ALL 
VALME1                 "." BY " ","-" BY " ", "," BY " ",
                      "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",
                      "Y" BY "G","H" BY "G","I" BY "G",
                      " DE " BY "    "," LA " BY "    ",
                      " DEL " BY "     " 
VAL001        INSPECT CADENA-VALNOM    REPLACING ALL                    RMB0002 
VALME1                 "." BY " ","-" BY " ", "," BY " ", 
VAL001                "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",      RMB0002 
VAL001                "Y" BY "G","H" BY "G","I" BY "G",                 RMB0002 
VAL001                " DE " BY "    "," LA " BY "    ",                RMB0002 
VAL001                " DEL " BY "     "                                RMB0002 
                      PERFORM VARYING I-VALNOM FROM 1 BY 1 
                              UNTIL I-VALNOM >= 66
                        IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC 
VALME1                      AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERIC
                           MOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)
                        END-IF
                      END-PERFORM
           END-IF.
           MOVE SPACES TO VECTOR-INPUT-VALNOM.
           UNSTRING CADENA-VALNOM      DELIMITED BY ALL " " INTO 
                        BASURA-VALNOM
            VM-INPUT-VALNOM(1) VM-INPUT-VALNOM(2) VM-INPUT-VALNOM(3)
            VM-INPUT-VALNOM(4) VM-INPUT-VALNOM(5) 
            VM-INPUT-VALNOM(6) VM-INPUT-VALNOM(7) VM-INPUT-VALNOM(8)
            VM-INPUT-VALNOM(9) VM-INPUT-VALNOM(10) 
            VM-INPUT-VALNOM(11) VM-INPUT-VALNOM(12) VM-INPUT-VALNOM(13)
            VM-INPUT-VALNOM(14)
            VM-INPUT-VALNOM(15) 
            VM-INPUT-VALNOM(16) VM-INPUT-VALNOM(17) VM-INPUT-VALNOM(18)
            VM-INPUT-VALNOM(19)
            VM-INPUT-VALNOM(20) 
      ******************PREPARA EL NOMBRE CORRECTO DEL ARCHIVO *********
           MOVE NOMBOK-INPUT-VALNOM TO NOMBRE-AUX-VALNOM.
           IF TIP-ID-INPUT-VALNOM  NOT = 2  
              INSPECT NOMBRE-AUX-VALNOM REPLACING ALL 
VALME1                 "." BY " ","-" BY " ","," BY " ",
                      "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",
                      "Y" BY "G","H" BY "G","I" BY "G"
                      PERFORM VARYING I-VALNOM FROM 1 BY 1 
                              UNTIL I-VALNOM >= 66
                        IF VNOM-AUX-VALNOM(I-VALNOM) NOT ALPHABETIC 
VALME1                      AND VNOM-AUX-VALNOM(I-VALNOM) NOT NUMERIC
                           MOVE "*" TO VNOM-AUX-VALNOM(I-VALNOM)
                        END-IF
                      END-PERFORM
           ELSE                            
VAL001         INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                  RMB0002 
VAL001           " S.A. " BY "      ",                                  RMB0002 
VAL001           "." BY " ", " LTDA " BY "      ",                      RMB0002 
VAL001           " LIMITADA " BY "          ",                          RMB0002 
VAL001           " CIA " BY "     ", " COMPA/IA " BY "          ",      RMB0002 
VAL001           " INVERSIONES " BY "             ",                    RMB0002 
VAL001           " EMPRESA " BY "         ",                            RMB0002 
VAL001           " CORPORACION " BY "             ",                    RMB0002 
VAL001           " DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002 
VAL001           " S " BY "   ", " A " BY "   "                         RMB0002 
VALMEJ           " Y " BY "   "                                         GJC0003 
VAL001         INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                  RMB0002 
VAL001           " S.A. " BY "      ",                                  RMB0002 
VAL001           "." BY " ", " LTDA " BY "      ",                      RMB0002 
VAL001           " LIMITADA " BY "          ",                          RMB0002 
VAL001           " CIA " BY "     ", " COMPA/IA " BY "          ",      RMB0002 
VAL001           " INVERSIONES " BY "             ",                    RMB0002 
VAL001           " EMPRESA " BY "         ",                            RMB0002 
VAL001           " CORPORACION " BY "             ",                    RMB0002 
VAL001           " DE " BY "    ", " LA " BY "    ", " DEL " BY "     ",RMB0002 
VAL001           " S " BY "   ", " A " BY "   "                         RMB0002 
VALMEJ           " Y " BY "   "                                         GJC0003 
VALMEJ        INSPECT NOMBRE-AUX-VALNOM REPLACING ALL                   GJC0003 
VALMEJ                "." BY " ","-" BY " ",                            GJC0003 
VALMEJ                "C" BY "S","Z" BY "S","J" BY "G","V" BY "B",      GJC0003 
VALMEJ                "Y" BY "G","H" BY "G","I" BY "G"                  GJC0003 
               MOVE NOMBRE-AUX-VALNOM TO NOMBOK-INPUT-VALNOM
           END-IF.
           MOVE SPACES TO VECTOR-OK-VALNOM.      
           UNSTRING CADENA-VALNOM      DELIMITED BY ALL " " INTO 
                        BASURA-VALNOM
            VM-OK-VALNOM(1) VM-OK-VALNOM(2) VM-OK-VALNOM(3)
            VM-OK-VALNOM(4) VM-OK-VALNOM(5) 
            VM-OK-VALNOM(6) VM-OK-VALNOM(7) VM-OK-VALNOM(8)
            VM-OK-VALNOM(9) VM-OK-VALNOM(10) 
            VM-OK-VALNOM(11) VM-OK-VALNOM(12) VM-OK-VALNOM(13)
            VM-OK-VALNOM(14) VM-OK-VALNOM(15) 
            VM-OK-VALNOM(16) VM-OK-VALNOM(17) VM-OK-VALNOM(18)
            VM-OK-VALNOM(19) VM-OK-VALNOM(20).
REMARK***********HACE LA VALIDACION BLOQUE A BLOQUE********************
           MOVE 1 TO I-VALNOM.
           MOVE 0 TO BLOQOK-AUX-VALNOM.
           PERFORM UNTIL VM-INPUT-VALNOM(I-VALNOM) = SPACES
             MOVE 1 TO J-VALNOM 
             PERFORM UNTIL J-VALNOM > 20 
               IF VM-INPUT-VALNOM(I-VALNOM) = VM-OK-VALNOM(J-VALNOM)
                  ADD 1 TO BLOQOK-AUX-VALNOM
                  MOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
                                 VM-INPUT-VALNOM(I-VALNOM)
                  MOVE 21 TO J-VALNOM
               ELSE
                  MOVE 0 TO M-VALNOM
                  INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOM
                          FOR CHARACTERS BEFORE INITIAL "*"
                  IF M-VALNOM >= 15
                     MOVE 0 TO M-VALNOM
                     INSPECT VM-OK-VALNOM(J-VALNOM) TALLYING M-VALNOM
                          FOR CHARACTERS BEFORE INITIAL "N"
                  END-IF
                  IF M-VALNOM > 0 AND < 15 AND I-VALNOM < 20
VLNM01               AND (14 - M-VALNOM > 0)                            GJC0005 
                     COMPUTE INI-VALNOM = M-VALNOM + 2  
                     COMPUTE LON-VALNOM = 14 - M-VALNOM 
                     MOVE VM-OK-VALNOM(J-VALNOM) TO PEDAZO-VALNOM
                     IF PEDAZO-VALNOM(INI-VALNOM:LON-VALNOM) =
                        VM-INPUT-VALNOM(I-VALNOM + 1 ) AND
                        PEDAZO-VALNOM(1:M-VALNOM) = 
                        VM-INPUT-VALNOM(I-VALNOM)
                        ADD 1 TO BLOQOK-AUX-VALNOM
                        MOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
                                 VM-INPUT-VALNOM(I-VALNOM)
                        MOVE 21 TO J-VALNOM
                        ADD 1 TO I-VALNOM 
                        MOVE SPACES TO VM-INPUT-VALNOM(I-VALNOM)
                     END-IF
                  END-IF 
               END-IF
               ADD 1 TO J-VALNOM
             END-PERFORM
             ADD 1 TO I-VALNOM
             IF I-VALNOM = 21 
                NEXT SENTENCE
             END-IF
           END-PERFORM.
           IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOM
              MOVE 1 TO MATCH-OK-OUT-VALNOM
           ELSE
              IF TIP-ID-INPUT-VALNOM <> 2
                 PERFORM 10100-MATCH-APROXIMADO  
              ELSE
                 PERFORM 10100-MATCH-APROX-EMPRESAS  
              END-IF
              IF BLOQOK-AUX-VALNOM >= BLOQUES-INPUT-VALNOM
                 MOVE 1 TO MATCH-OK-OUT-VALNOM
              END-IF
           END-IF.
REMARK**********************************************************************
REMARK*10100-MATCH-APROXIMADO.
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON     
REMARK*     LOS TIPOS DE IDENTIFICACION 1, 3 Y 4.
REMARK**********************************************************************
       10100-MATCH-APROXIMADO.
           IF BLOQOK-AUX-VALNOM > 0
              MOVE 65 TO APROX-TOT-VALNOM APROX-INP-VALNOM
           ELSE
              MOVE 70 TO APROX-TOT-VALNOM APROX-INP-VALNOM
           END-IF
           MOVE 1 TO I-VALNOM.
           PERFORM UNTIL I-VALNOM > 10                         
             MOVE 1 TO J-VALNOM 
             PERFORM UNTIL J-VALNOM > 10 
               MOVE 0 TO LETRAS-OK-VALNOM LETRAS-OK2-VALNOM
               MOVE 1 TO K-VALNOM
               MOVE 1 TO L-VALNOM
               IF VM-INPUT-VALNOM(I-VALNOM) NOT = SPACES AND
                  VM-OK-VALNOM   (J-VALNOM) NOT = SPACES
                  PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15
                    IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = 
                       VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJ                 OR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003 
VALMEJ                 AND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003 
VALMEJ                      OR = "N"))                                  GJC0003 
                       IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT= SPACES
                          ADD 1 TO LETRAS-OK-VALNOM    
                          ADD 1 TO K-VALNOM
                          ADD 1 TO L-VALNOM
                       ELSE
                          MOVE 19 TO K-VALNOM
                       END-IF
                    ELSE
                       ADD 1   TO K-VALNOM
                       IF K-VALNOM <= 15 AND L-VALNOM < 15
                          IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM + 1) =
                             VMM-OK-VALNOM(J-VALNOM,K-VALNOM )
                             ADD 1 TO L-VALNOM
                          END-IF
                       END-IF
                    END-IF
                  END-PERFORM
                  MOVE 1 TO K-VALNOM
                  MOVE 1 TO L-VALNOM
                  PERFORM UNTIL K-VALNOM > 15 OR L-VALNOM > 15
                    IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = 
                       VMM-OK-VALNOM  (J-VALNOM,K-VALNOM)
VALMEJ                 OR ((VMM-OK-VALNOM(J-VALNOM, K-VALNOM)) = "*"    GJC0003 
VALMEJ                 AND (VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) = " "   GJC0003 
VALMEJ                      OR = "N"))                                  GJC0003 
                       IF VMM-OK-VALNOM (J-VALNOM,K-VALNOM) NOT = SPACES
                          ADD 1 TO LETRAS-OK2-VALNOM   
                          ADD 1 TO K-VALNOM
                          ADD 1 TO L-VALNOM
                       ELSE
                          MOVE 19 TO K-VALNOM
                       END-IF
                    ELSE
                       ADD 1   TO L-VALNOM
                       IF L-VALNOM <= 15 AND K-VALNOM < 15
                          IF VMM-INPUT-VALNOM(I-VALNOM,L-VALNOM) =
                             VMM-OK-VALNOM(J-VALNOM,K-VALNOM + 1)
                             ADD 1 TO K-VALNOM
                          END-IF
                       END-IF
                    END-IF
                  END-PERFORM
               END-IF
               IF LETRAS-OK2-VALNOM > LETRAS-OK-VALNOM
                  MOVE LETRAS-OK2-VALNOM TO LETRAS-OK-VALNOM
               END-IF
               IF LETRAS-OK-VALNOM > 0 
                  MOVE 0 TO TOTLET-INP-VALNOM TOTLET-OK-VALNOM
                  INSPECT VM-INPUT-VALNOM(I-VALNOM) TALLYING
                          TOTLET-INP-VALNOM
                          FOR CHARACTERS BEFORE INITIAL " "
                  INSPECT VM-OK-VALNOM   (J-VALNOM) TALLYING 
                          TOTLET-OK-VALNOM 
                          FOR CHARACTERS BEFORE INITIAL " "
                  MOVE 0 TO POR-TOT-VALNOM  POR-INP-VALNOM
                  IF TOTLET-OK-VALNOM >= 3               
                     COMPUTE POR-TOT-VALNOM = LETRAS-OK-VALNOM * 100 /
                                             TOTLET-OK-VALNOM 
                  END-IF
                  IF TOTLET-INP-VALNOM >= 3
                     COMPUTE POR-INP-VALNOM = LETRAS-OK-VALNOM * 100 /
                                             TOTLET-INP-VALNOM
                  END-IF
                  IF TOTLET-OK-VALNOM > TOTLET-INP-VALNOM
                     COMPUTE A-VALNOM = TOTLET-INP-VALNOM * 100 /
                                       TOTLET-OK-VALNOM
                  ELSE
                     COMPUTE A-VALNOM = TOTLET-OK-VALNOM  * 100 /
                                       TOTLET-INP-VALNOM
                  END-IF
VALME1            IF ((POR-TOT-VALNOM + POR-INP-VALNOM)/2 >=
VALME1                                  APROX-TOT-VALNOM) AND
VALME1                 A-VALNOM >= 63
VALME1****   display "%TOT=",POR-TOT-VALNOM, " %INP=", POR-INP-VALNOM,
VALME1****           "A-VALNOM=", A-VALNOM
VALME1*****       IF (POR-TOT-VALNOM >= APROX-TOT-VALNOM AND
VALME1*****           POR-INP-VALNOM >= APROX-INP-VALNOM ) OR
VALME1*****          ((POR-TOT-VALNOM >= APROX-TOT-VALNOM OR 
VALME1*****            POR-INP-VALNOM >= APROX-INP-VALNOM ) AND
VALME1*****            A-VALNOM >= 70)
                     ADD 1 TO BLOQOK-AUX-VALNOM
                     MOVE SPACES TO VM-OK-VALNOM(J-VALNOM)
                                 VM-INPUT-VALNOM(I-VALNOM)
                  END-IF       
               END-IF
               ADD 1 TO J-VALNOM
             END-PERFORM
             ADD 1 TO I-VALNOM
           END-PERFORM.
REMARK**********************************************************************
REMARK*10100-MATCH-APROX-EMPRESAS
REMARK*     EN ESTA RUTINA SE VALIDAN LOS BLOQUES QUE NO PASARON COMPLETOS
REMARK*     CON UNA APROXIMACION. ESTA RUTINA FUNCIONA CORRECTAMENTE CON     
REMARK*     LOS TIPOS DE IDENTIFICACION 2.        
REMARK**********************************************************************
       10100-MATCH-APROX-EMPRESAS.
         MOVE ZEROS TO TOTLET-INP-VALNOM
         MOVE ZEROS TO LETRAS-OK2-VALNOM
VALMEJ    MOVE ZEROS TO A-VALNOM                                        GJC0003 
         MOVE 1 TO K-VALNOM
         PERFORM UNTIL K-VALNOM > 65
           MOVE K-VALNOM  TO I-VALNOM
           MOVE 1       TO J-VALNOM
           MOVE ZEROS TO LETRAS-OK-VALNOM
           PERFORM UNTIL J-VALNOM > 65 OR I-VALNOM > 65
              IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES AND
                 V-NOMBRE-VALNOM(I-VALNOM) <> "."
                 IF V-NOMBRE-VALNOM(I-VALNOM) =
                    V-NOMBOK-VALNOM(J-VALNOM)
                    ADD 1 TO LETRAS-OK-VALNOM
                    ADD 1 TO I-VALNOM
                    ADD 1 TO J-VALNOM
                 ELSE
                    ADD 1 TO J-VALNOM
                 END-IF
              ELSE
                 ADD 1 TO I-VALNOM
              END-IF
           END-PERFORM
           IF LETRAS-OK-VALNOM > LETRAS-OK2-VALNOM
              MOVE LETRAS-OK-VALNOM TO LETRAS-OK2-VALNOM
           END-IF
           ADD 1 TO K-VALNOM
         END-PERFORM.
         MOVE 1 TO I-VALNOM
         PERFORM UNTIL I-VALNOM > 65
           IF V-NOMBRE-VALNOM(I-VALNOM) <> SPACES AND
              V-NOMBRE-VALNOM(I-VALNOM) <> "."
              ADD 1 TO TOTLET-INP-VALNOM
           END-IF
           ADD 1 TO I-VALNOM
         END-PERFORM.
         COMPUTE A-VALNOM = LETRAS-OK2-VALNOM * 100 /
                           TOTLET-INP-VALNOM.
         IF A-VALNOM >= 75
             ADD 1 TO BLOQOK-AUX-VALNOM
         END-IF.
VALMEJ    MOVE 0 TO K-VALNOM                                            GJC0003 
VALMEJ   IF BLOQOK-AUX-VALNOM < BLOQUES-INPUT-VALNOM                    GJC0003 
VALMEJ      INITIALIZE A-VALNOM VECTORES-VALNOM L-VALNOM                GJC0003 
VALMEJ      PERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 65    GJC0003 
VALMEJ               IF V-NOMBRE-VALNOM(J-VALNOM) <> " "                GJC0003 
VALMEJ                 MOVE FUNCTION ORD(V-NOMBRE-VALNOM(J-VALNOM))     GJC0003 
VALMEJ                   TO I-VALNOM                                    GJC0003 
VALMEJ                 ADD 1 TO CONT-LET-INPUT-VALNOM(I-VALNOM)         GJC0003 
VALMEJ              END-IF                                              GJC0003 
VALMEJ               IF V-NOMBOK-VALNOM(J-VALNOM) <> " "                GJC0003 
VALMEJ                 MOVE FUNCTION ORD(V-NOMBOK-VALNOM(J-VALNOM))     GJC0003 
VALMEJ                    TO I-VALNOM                                   GJC0003 
VALMEJ                 ADD 1 TO CONT-LET-OK-VALNOM(I-VALNOM)            GJC0003 
VALMEJ              END-IF                                              GJC0003 
VALMEJ      END-PERFORM                                                 GJC0003 
VALMEJ      MOVE 0 TO I-VALNOM                                          GJC0003 
VALMEJ       PERFORM VARYING J-VALNOM FROM 1 BY 1 UNTIL J-VALNOM > 256  GJC0003 
VALMEJ         IF CONT-LET-OK-VALNOM(J-VALNOM)  > 0                     GJC0003 
VALMEJ            ADD 1 TO I-VALNOM                                     GJC0003 
VALMEJ            IF CONT-LET-OK-VALNOM(J-VALNOM) <                     GJC0003 
VALMEJ               CONT-LET-INPUT-VALNOM(J-VALNOM)                    GJC0003 
VALMEJ               COMPUTE L-VALNOM = L-VALNOM + 100                  GJC0003 
VALMEJ            ELSE                                                  GJC0003 
VALMEJ               COMPUTE L-VALNOM = L-VALNOM +                      GJC0003 
VALMEJ                                  (CONT-LET-INPUT-VALNOM(J-VALNOM)GJC0003 
VALMEJ                           *  100 /CONT-LET-OK-VALNOM(J-VALNOM))  GJC0003 
VALMEJ            END-IF                                                GJC0003 
VALMEJ         END-IF                                                   GJC0003 
VALMEJ      END-PERFORM                                                 GJC0003 
VALMEJ      COMPUTE K-VALNOM = L-VALNOM/I-VALNOM                        GJC0003 
VALMEJ       IF (A-VALNOM >= 40 AND K-VALNOM > 80) OR                   GJC0003 
VALMEJ         ((A-VALNOM >= 35 AND A-VALNOM < 40) AND K-VALNOM > 85) ORGJC0003 
VALMEJ         ((A-VALNOM >= 25 AND A-VALNOM < 35) AND K-VALNOM = 100)  GJC0003 
VALMEJ         ADD 1 TO BLOQOK-AUX-VALNOM                               GJC0003 
VALMEJ       END-IF                                                     GJC0003 
VALMEJ   END-IF.                                                        GJC0003 
******* VALNOM-WS.v.0002
******* DESCRIPCION DE CADA UNO DE LOS CAMPOS BASICOS E INDEPENDIENTES QUE
******* UTILIZAN LAS RUTINAS DEL       DE NOMBRES DE LA RUTINA VALNOM.PROC
*****************************************************************************
REMARK* GJC0002    * VALMEJ :SE CREAN ANUEVOS CAMPOS PARA MEJORAR LA VALIDACION
REMARK* G.JIMENEZ  * DE NIT. PARA MEJORA TAMBIEN SE AMPLIA TAMANO DE VARIABLES
REMARK* MARZO/2003 *
REMARK*************************************************************************
        01 VARIABLES-VALNOM.                                   
           03 VECTOR-INPUT-VALNOM.
             04 VM-INPUT-VALNOM     OCCURS 20 TIMES .
                05 VMM-INPUT-VALNOM OCCURS 15 TIMES PIC X.
           03 VECTOR-OK-VALNOM.
             04 VM-OK-VALNOM         OCCURS 20 TIMES.
                05 VMM-OK-VALNOM    OCCURS 15 TIMES PIC X.
           03 BLOQOK-AUX-VALNOM           PIC 9(2).
           03 CADENA-VALNOM.
              04 FILLER                   PIC X(2) VALUE "A ".
              04 NOMBRE-AUX-VALNOM        PIC X(65).          
              04 FILLER REDEFINES NOMBRE-AUX-VALNOM.
                 05 VNOM-AUX-VALNOM OCCURS 65 TIMES PIC X.
           03 BASURA-VALNOM               PIC X(10).
           03 BLOQUES-INPUT-VALNOM        PIC 9(2).
           03 NOMBRE-INPUT-VALNOM         PIC X(65).
           03 FILLER REDEFINES NOMBRE-INPUT-VALNOM.
              05 V-NOMBRE-VALNOM          PIC X OCCURS 65 TIMES.
           03 NOMBOK-INPUT-VALNOM         PIC X(65).
           03 FILLER REDEFINES NOMBOK-INPUT-VALNOM.
              05 V-NOMBOK-VALNOM          PIC X OCCURS 65 TIMES.
           03 TIP-ID-INPUT-VALNOM         PIC 9(02).
           03 MATCH-OK-OUT-VALNOM         PIC 9(01).
           03 A-VALNOM                    PIC 9(05).
VALMEJ     03 I-VALNOM                    PIC 9(05).                    GJC0002 
VALMEJ     03 J-VALNOM                    PIC 9(05).                    GJC0002 
VALMEJ     03 K-VALNOM                    PIC 9(05).                    GJC0002 
VALMEJ     03 L-VALNOM                    PIC 9(05).                    GJC0002 
VALMEJ     03 M-VALNOM                    PIC 9(05).                    GJC0002 
           03 INI-VALNOM                  PIC 9(02).
           03 LON-VALNOM                  PIC 9(02).
           03 LETRAS-OK-VALNOM            PIC 9(02).          
           03 LETRAS-OK2-VALNOM           PIC 9(02).          
           03 TOTLET-OK-VALNOM            PIC 9(02).          
           03 TOTLET-INP-VALNOM           PIC 9(02).          
           03 PEDAZO-VALNOM               PIC X(15).
           03 POR-TOT-VALNOM              PIC 9(05).          
           03 POR-INP-VALNOM              PIC 9(05).          
           03 APROX-TOT-VALNOM            PIC 9(05).          
           03 APROX-INP-VALNOM            PIC 9(05).          
VALMEJ     03 VECTORES-VALNOM.                                          GJC0002 
VALMEJ        04 FILLER                   OCCURS 256 TIMES.             GJC0002 
VALMEJ           05 CONT-LET-INPUT-VALNOM PIC 9(2).                     GJC0002 
VALMEJ           05 CONT-LET-OK-VALNOM    PIC 9(2).                     GJC0002 
VALMEJ     03 VAL-APELLIDO-VALNOM         PIC 9.                        GJC0002 
/d/iccol/desarrollo/copys>
shell will timeout in 60 seconds due to inactivity
ksh: timed out waiting for input
