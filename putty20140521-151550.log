=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.05.21 15:15:50 =~=~=~=~=~=~=~=~=~=~=~=
login as: icjlud
Using keyboard-interactive authentication.
Password: 
Using keyboard-interactive authentication.
Warning: Your password has expired, please change it now.
Using keyboard-interactive authentication.
New Password: 
Using keyboard-interactive authentication.
sshd-kbdint: The first 8 characters of the password must contain at least 1 numeric or special character(s).
Using keyboard-interactive authentication.
New Password: 
Using keyboard-interactive authentication.
sshd-kbdint: The first 8 characters of the password must contain at least 1 numeric or special character(s).
Using keyboard-interactive authentication.
New Password: 
Using keyboard-interactive authentication.
Re-enter new Password: 
Using keyboard-interactive authentication.
sshd-kbdint: password successfully changed for icjlud
Last login: Wed May 21 13:16:59 2014 from 172.16.10.103
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
COBJVM=sun_142
JAVA_HOME=/usr/j2se
LD_LIBRARY_PATH=/usr/j2se/jre/lib/sparc:/usr/j2se/jre/lib/sparc/client:/usr/j2se/jre/lib/sparc/native_threads:/usr/j2se/jre/lib/sparc:/opt/mfocus/des/cobol/lib:/opt/IBM/db2/V9.7/lib:/export/home/db2inst1/sqllib/lib64:/export/home/db2inst1/sqllib/lib32
PATH=/usr/j2se/jre/sh:/usr/j2se/sh:/usr/j2se/bin:/usr/j2se/jre/bin:/opt/mfocus/des/cobol/lib:/opt/mfocus/des/cobol/bin:/usr/bin:/bin:/usr/bin:/d/iccol/desarrollo/macros:/d/iccol/desarrollo/utiles:/opt/bin:/usr/sbin:/usr/lib:/usr/ccs/bin:/opt/SUNWspro/bin:/usr/jdk/latest/bin:/usr/local/bin:/usr/j2se/bin:/usr/openwin/bin:.:/export/home/db2inst1/sqllib/bin:/export/home/db2inst1/sqllib/adm:/export/home/db2inst1/sqllib/misc
CLASSPATH=/opt/mfocus/des/cobol/lib/mfcobol.jar:.:/usr/j2se/jre/lib/rt.jar:/opt/mfocus/des/cobol/lib/mfimtk.jar:/opt/mfocus/des/cobol/lib/xerces.jar:/opt/mfocus/des/cobol/lib/castor-0_9_4_1-xml.jar:/opt/mfocus/des/cobol/lib/mfcobol.jar:/usr/j2se/jre/lib/dt.jar:/usr/j2se/jre/lib/rt.jar:/d/iccol/desarrollo/java/server:/export/home/db2inst1/sqllib/java/db2java.zip:/export/home/db2inst1/sqllib/java/db2jcc.jar:/export/home/db2inst1/sqllib/java/sqlj.zip:/export/home/db2inst1/sqllib/function:/export/home/db2inst1/sqllib/java/db2jcc_license_cu.jar:.
COBCPY=/opt/mfocus/des/cobol/cpylib:/opt/mfocus/des/cobol/cpylib:/d/iccol/desarrollo/copys/pais:/d/iccol/desarrollo/copys
Java version = 1.4.2_19
Java vendor = Sun Microsystems Inc.
Java OS name = SunOS
Java OS arch = sparc
Java OS version = 5.10

  ####    ####   #####   ######   ####
 #    #  #    #  #    #  #       #
 #       #    #  #    #  #####    ####
 #       #    #  #    #  #            #
 #    #  #    #  #    #  #       #    #
  ####    ####   #####   ######   ####

 #####
#     #   ####   #        ####   #    #  #####      #      ##
#        #    #  #       #    #  ##  ##  #    #     #     #  #
#        #    #  #       #    #  # ## #  #####      #    #    #
#        #    #  #       #    #  #    #  #    #     #    ######
#     #  #    #  #       #    #  #    #  #    #     #    #    #
 #####    ####   ######   ####   #    #  #####      #    #    #

 #####
#     #   ####   #    #  #####      #    #         ##     ####      #     ####
#        #    #  ##  ##  #    #     #    #        #  #   #    #     #    #    #
#        #    #  # ## #  #    #     #    #       #    #  #          #    #    #
#        #    #  #    #  #####      #    #       ######  #          #    #    #
#     #  #    #  #    #  #          #    #       #    #  #    #     #    #    #
 #####    ####   #    #  #          #    ######  #    #   ####      #     ####

 #####                                           #####  #         ###
#     #  #    #  #    #          #    #         #     # #    #   #   #
#        #    #  ##   #          #    #               # #    #  #     #
 #####   #    #  # #  #          #    #          #####  #    #  #     #
      #  #    #  #  # #          #    #   ###   #       ####### #     #
#     #  #    #  #   ##           #  #    ###   #            #   #   #
 #####    ####   #    # #######    ##     ###   #######      #    ###

icjlud@codes /d/iccol/desarrollo
$ . viset
viset running
/d/iccol/desarrollo>which sh-CARGAJURAD
no sh-CARGAJURAD in /usr/j2se/jre/sh /usr/j2se/sh /usr/j2se/bin /usr/j2se/jre/bin /opt/mfocus/des/cobol/lib /opt/mfocus/des/cobol/bin /usr/bin /bin /usr/bin /d/iccol/desarrollo/macros /d/iccol/desarrollo/utiles /opt/bin /usr/sbin /usr/lib /usr/ccs/bin /opt/SUNWspro/bin /usr/jdk/latest/bin /usr/local/bin /usr/j2se/bin /usr/openwin/bin . /export/home/db2inst1/sqllib/bin /export/home/db2inst1/sqllib/adm /export/home/db2inst1/sqllib/misc
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>which sh-CARGAJURADwhich sh-CARGAJURA  
/d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>vi /d/iccol/desarrollo/macros/sh-CARGAJUR
"/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real""/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters









          echo "           <N>   Proceso En Falso               "|
| CQnnnn - CARGA DE ARCHIVO EXTERNO     
 
* 
  
  
  
  
  
  
  
  
  
  
  
 *
 *
echo "<N>   Proceso En Falso" echo "*--------------------------------------------------------*"




$CHANGE MODEFUNCIONES





# $# CHANGE MODEMuestra máquina y defde$CHANGE MODEfecha del sistemaaAPPEND MODE y  máquina y # Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
echo
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`# Prreegguunnttaarr  ppoorr  eell  ppeerriiooddoo  ddeell  ssaannaattaa  yy  eeffeeccttuuaarr  eell  ccaammbbiioo          {
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMESecho "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n
"
echo "**** PROCESO CANCELADO **** "GetEnter
exit
else
 P_FCORTE=$FECHIS_ANOMESCambiarSanatafi
fi
    fi
}

CambiarSanata()
{
#*-----------------------------------------------------------------------------*
# VERIFICAR Y CAMBIAR AL SANATA CORRESPONDIENTE
#*-----------------------------------------------------------------------------*
   if [ $FECHOY_ANOMES -ne $FECHIS_ANOMES ] ; then
echo "\n\tSe Procesa con fecha $FECHIS_ANOMESDIA \n". /san_ata_$sanata/$FECHIS_ANOMES/sh-$FECHIS_ANOMESecho $DATABASEP_FCORTE=$FECHIS_ANOMES
   else
CambiarSanata()
{
#*-----------------------------------------------------------------------------*
# VERIFICAR Y CAMBIAR AL SANATA CORRESPONDIENTE
#*-----------------------------------------------------------------------------*
   if [ $FECHOY_ANOMES -ne $FECHIS_ANOMES ] ; then
echo "\n\tSe Procesa con fecha $FECHIS_ANOMESDIA \n". /san_ata_$sanata/$FECHIS_ANOMES/sh-$FECHIS_ANOMESecho $DATABASEP_FCORTE=$FECHIS_ANOMES
   else
   P_FCORTE=$FECHOY_ANOMES
   fi
}


#* PARAMETROS:
fechab=0;
codsus=0;
nomsus={};
opcion="A";
vector=48;
numeroreg=0;
cadena01={};
cadena02={};
cadena03={};
cadena04={};
cadena05={};
cadena06={};
cadena07={};
cadena08={};
cadena09={};
cadena10={};
cadena11={};
#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]



# Veerriiffiiccaarr  yy  ccaammbbiiaarr  aall  ssaannaattaa  ccoorrrreessppoonnddiieenntteOPEN MODE



#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo





/GetFechaSistema?#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE FUNCIONES
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"?Address search hit TOP without matching pattern/vector=48;
numeroreg=0;
cadena01={};
cadena02={};
cadena03={};
cadena04={};
cadena05={};
cadena06={};
cadena07={};
cadena08={};
cadena09={};
cadena10={};
cadena11={};

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
/GetProceso/Address search hit BOTTOM without matching pattern?#
#*========================================================*
#*DEFINICION DE FUNCIONES
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenGetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter


# Prreegguunnttaa  ssii  eell  pprroocceessoo  ssee  $CHANGE MODEes REAL o EN FALSO
exit?#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE FUNCIONES
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Pregunta si el proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMESecho "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n
"#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE FUNCIONES
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Pregunta si el proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"
DE INSERT MODEVRRIABLES Y VREPLACE 1 CHARA

OPEN MODEraya="""APPEND MODE---------------------------------------------------o
OPEN MODEdc=""INSERT MODEdc="APPEND MODE             D A T A C R E D I T O
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>who am i
icjlud     pts/17       May 21 13:16    (172.16.10.103)
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Pregunta si el proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"
OPEN MODE#    APPEND MODEicjlud     pts/17       May 21 13:16    (172.16.10.103)
APPEND MODE#    APPEND MODE12345678900123456789001234567890012345678900123456789001234567890
OPEN MODE    echo $raya
OPEN MODE:set aiAPPEND MODE    echo " "
APPEND MODEecho $dc
    
    echo " "
    echo " "
OPEN MODEecho Fecha: INSERT MODE" APPEND MODE"  $FECHOY_A4MMDD
     $FECHOY_A4MMDDDAPPEND MODE " en "  echo "MAQUINA: " $P_MAQUINA
P_PROCESO="#";
    


INSERT MODE" "  $HoraHoy
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "


echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"





    echo " "
    echo $rayaecho "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; then
P_PROCESO="N"
else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; then
P_PROCESO="S"
else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; then
P_PROCESO="N"
elseecho "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"
GetEnter
fi
fi
fi
done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio







    =$/FECHOY_ANOMES#*-----------------------------------------------------------------------------*
echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
read FECHIS_ANOMESDIA
longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; then
echo "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
else
if [ $longitud -eq 0 ] ; then
P_FCORTE=$FECHOY_ANOMES
??#*-----------------------------------------------------------------------------*{GetProceso()}    echo $raya    echo " "    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA    echo " "    echo " "    echo $dc    echo " "    echo $raya    P_MAQUINA=`who am i | cut -c 39-50`    P_FCORTE=$FECHOY_ANOMES?    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`?Address search hit TOP without matching pattern//
    /P_PROCESO# $# CHANGE MODEAverigua el tipo deINSERT MODEsi 

    

REPLACE 1 CHAR1REPLACE 1 CHAR"cadena00=$archivo.orig
cp $archivo $cadena00
echo
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
#*========================================================*
#*  EXECUTE PROGRAM: icestdatVEC-NORMAL*
#*========================================================*
#
echo
echo "+------------------------------------------------------+"
echo "|  Programa CARGAJUR|"
echo "||"
echo "|  Procesando archivo --> "  $archivo
echo "+------------------------------------------------------+"
nohup x CARGAJUR $archivo $P_PROCESO $codsus >| $archivo.log 2>| $archivo.log
echo "+-------------------------------------------------------------+"
echo "|     *********  RESULTADOS DEL PROCESO**********|"
echo "||"
ls -lrt $archivo* >> $archivo.log
tail -20 $archivo.log
echo "+-------------------------------------------------------------+"

~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~  echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig
cp $archivo $cadena00    P_SERVER_DEV="172.24.6.154"HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done"    "REPLACE 1 CHAR2 ; do && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "2" ]REPLACE 1 CHAR3
    echo $raya
    echo " "echo " INSERT MODE                   TIPO DE PROCESO
    echo $raya    echo $raya
        echo "    TIPO DE PROCESO"
        echo $raya    echo $raya
    echo "    TIPO DE PROCESO"
    echo $rayaecho $raya
echo "    TIPO DE PROCESO"
echo $raya



#*-----------------------------------------------------------------------------*# Muestra fecha del sistema y máquina#*-----------------------------------------------------------------------------*{GetFechaSistema()#dc="D A T A C R E D I T O"raya="---------------------------------------------------"#*========================================================*#*DEFINICION DE VARIABLES Y FUNCIONES#*========================================================*


raya=""---------------------------------------------------    echo $raya
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
echo "TIPO DE PROCESO"
echo $raya
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
@


GetProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
echo "TIPO DE PROCESO"
echo $raya
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; then
@

#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
echo "TIPO DE PROCESO"
echo $raya
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter


    


    

OPEN MODE####APPEND MODE              ---------------------------------------------------


    echo " "@
    echo " "



echo "TIPO DE PROCESO"      $CHANGE MODE1) Actualización reallAPPEND MODE"
echo " "echo "1) Actualización real"
echo " "echo "1) Actualización real"
echo " "


REPLACE 1 CHAR2e2rea$CHANGE MODEen falso

REPLACE 1 CHAR33) $CHANGE MODEsalirrAPPEND MODE"

  




echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; then
@
6 lines deletedecho "       REPLACE 1 CHAR       opcioREPLACE 1 CHARónóón (S/$CHANGE MODE123

 
    REPLACE 1 CHAR1
     1{GetProceso()ión eoAPPEND MODE (por fef$CHANGE MODEdefecto)$CHANGE MODEProceso

$Proceso

SS
    

     
    

    
    
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
6 lines deletedecho "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnterecho "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter

        if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMES   echo "\n\t*$CHANGE MODElas opciones válidas son 1, 2 o 3

/getperiodo sanata/Address search hit BOTTOM without matching pattern?Address search hit TOP without matching pattern/Address search hit BOTTOM without matching patternGetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# Preguntar por el periodo del sanata y efectuar el cambio
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMESecho "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n
"
echo "**** PROCESO CANCELADO **** "GetEnter
exit
else
 P_FCORTE=$FECHIS_ANOMESCambiarSanatafi
fi
    fi
}

CambiarSanata()
{
#*-----------------------------------------------------------------------------*
# Verificar y cambiar al sanata correspondiente
#*-----------------------------------------------------------------------------*
   if [ $FECHOY_ANOMES -ne $FECHIS_ANOMES ] ; then
echo "\n\tSe Procesa con fecha $FECHIS_ANOMESDIA \n". /san_ata_$sanata/$FECHIS_ANOMES/sh-$FECHIS_ANOMESecho $DATABASEP_FCORTE=$FECHIS_ANOMES
/cambiarsanata/Address search hit BOTTOM without matching pattern?/CambiarSanata()
{
#*-----------------------------------------------------------------------------*
# Verificar y cambiar al sanata correspondiente
#*-----------------------------------------------------------------------------*
   if [ $FECHOY_ANOMES -ne $FECHIS_ANOMES ] ; then
echo "\n\tSe Procesa con fecha $FECHIS_ANOMESDIA \n". /san_ata_$sanata/$FECHIS_ANOMES/sh-$FECHIS_ANOMESecho $DATABASEP_FCORTE=$FECHIS_ANOMES
   else
   P_FCORTE=$FECHOY_ANOMES
   fi
}


#* PARAMETROS:
fechab=0;
codsus=0;
nomsus={};
opcion="A";
vector=48;
numeroreg=0;
cadena01={};
cadena02={};
cadena03={};
cadena04={};
cadena05={};
cadena06={};
cadena07={};
cadena08={};
cadena09={};
cadena10={};
cadena11={};

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
70 lines deleted    then#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxxead     codsus#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
OPEN MODE=999999codsus9APPEND MODE
APPEND MODEelse
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then

#APPEND MODE         




/getrea^?^?procesoAddress search hit BOTTOM without matching pattern??
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"elseGet$GetCHANGE MODERealOFalso/echo "\n\tlas opciones válidas son 1, 2 o 3\c"
GetEnter
fi
done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso$RealOFalsoRealOFalso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo?Address search hit TOP without matching pattern
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"elseecho " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"elseGetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus

32 lines yankedGetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_PROCESO

if [ -z "$P_PROCESO" ] ; then
P_PROCESO="1"
else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"
GetEnter
fi
    done
}
32 more lines
Get$GetCHANGE MODETipoDeProceso()GetTipoDeProcesoelse
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
thenOPEN MODE GetTipoDeProcesoecho $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else


# el tipo de es $CHANGE MODE$CHANGE MODE; ;$CHANGE MODE: carga inicial, actualización, refresque total ...

 
     P_PROCESO="1"#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus=999999

#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo


OPEN MODE
OPEN MODE
OPEN MODEP_PROCESO="1"=APPEND MODE"9"
P_$P_CHANGE MODEREAL_FALSO/Address search hit BOTTOM without matching pattern/P_PROCESOP_PROCESO="#";    $    REAL_FALSO    P_PROCESO    P_$REAL_FALSO    P_REAL_FALSO="#";while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESO/P_$REAL_FA
L
oS
dO
 /P_$REAL_FAL
;S
 O
]/P_/?P_$REAL_FAL
 S
"O
3/P_$REAL_FALSO/P_$REAL_FALSO/P_$REAL_FALSO/P_$REAL_FALSOPROCESO P_PROCESO="#";    ?Address search hit TOP without matching pattern#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"



#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES

P_PROCESO="#";echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "1" ] && [ $P_PROCESO != "2" ] && [ $P_PROCESO != "3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}#*========================================================*#APPEND MODE#
$CHANGE MODE0
1
oINSERT MODE0
d0
 

"02" ] ; do
#*========================================================* && [ $P_PROCESO != "03
"
o 
d]
  
;&
 &
] 
 [
" 
3$
0P
"_
 P
=R
!O
 C
OE
SS
EO
C 
O!
R=
P 
_"
P0
$3
 "
[ 
 ]
&] 
&&
 & [ $P_PROCESO != "03" ]
    OPEN MODEREPLACE 1 CHAR4REPLACE 1 CHAR5REPLACE 1 CHAR0#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_REAL_FALSO="#";
    while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"


echo REPLACE MODEPROCESO REAL O EN FALSO"echo "PROCESO REAL O EN FALSO"echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_PROCESO="##";
    while [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03" ] &
& [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter








  


 
    

   


    







    


    







  fidone}#*========================================================*#*PROCESO*#*========================================================*#*FASE 1: PIDE PARAMETROS*#*========================================================*#*-----------------------------------------------------------------------------*#MENU PRINCIPAL DE EJECUCION#*-----------------------------------------------------------------------------*clearGetFechaSistemaRealOFalsoGetTipoDeProcesoloop=0OPEN MODE
OPEN MODE
OPEN MODEAPPEND MODE
APPEND MODE         ---------------------------------------------------
APPEND MODE
APPEND MODE                  1) Actualización Real
APPEND MODE
APPEND MODE                  2) Proceso en Falso
APPEND MODE
APPEND MODE                  3) SALIR
APPEND MODE
APPEND MODE         --------------
-------------------------------------#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
9 fewer linesAPPEND MODE               display "01 Envio Original - Carga TOTAL 1a vez"
APPEND MODE           when "02"
APPEND MODE               display "02 Archivo Semanal - Carga PARCIAL"
APPEND MODE           when "03"
APPEND MODE               display "03 Archivo
 Mensual - Carga PARCIAL"
APPEND MODE           when "04
"
APPEND MODE        
       display "04 Refresque Total - Carga TOTAL"     display "04 Refresque Total - Carga TOTAL"
APPEND MODE#*========================================================*display "01 Envio Original - Carga TOTAL 1a vez"when "02"
display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Men
sual - Carga PARCIAL"
when "04"

   display "04 Refresque Total - Carga TOTAL"#*PROCESO*
7 lines <<eddisplay "01 Envio Original - Carga TOTAL 1a vez"when "02"
display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Mensual
 - Carga PARCIAL"
when "04"
d
isplay "04 Refresque Total - Carga TOTAL"display "01 Envio Original - Carga TOTAL 1a vez"when "02"
display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Mensual - C
arga PARCIAL"
when "04"
displ
ay "04 Refresque Total - Carga TOTAL"display "01 Envio Original - Carga TOTAL 1a vez"when "02"
display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Mensual - Carga
 PARCIAL"
when "04"
display "
04 Refresque Total - Carga TOTAL"
when "02"
display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Mensual - Carga PAR
CIAL"
when "04"
display "04 R
efresque Total - Carga TOTAL"
  when "02"
display "02 Archivo Semanal - Carga PARCIAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL
"
when "04"
display "04 Refre
sque Total - Carga TOTAL"
when "02"
    display "02 Archivo Semanal - Carga PARCIAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL"
when "04"
display "04 Refresqu
 Total - Carga TOTAL"#*========================================================*
7 lines <<ed

display "02 Archivo Semanal - Carga PARCIAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL"
when "04"
display "04 Refresque Tot
al - Carga TOTAL"display "02 Archivo Semanal - Carga PARCIAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL"
when "04"
display "04 Refresque Total -
 Carga TOTAL"

 display "02 Archivo Semanal - Carga PARCIAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL"
when "04"
display "04 Refresque Total - Car
ga TOTAL"

display "02 Archivo Semanal - Carga PARCIAL"
when "03"
display "03 Archivo Mensual - Carga PARCIAL"
when "04"
display "04 Refresque Total - Carga T
OTAL"when "03"
display "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL
"


when "03"
display "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL"
#*              FASE 1: PIDE PARAMETROS*
7 lines <<eddisplay "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL"display "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL"display "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL"



display "03 Archivo Mensual - Carga PARCIAL"when "04"
display "04 Refresque Total - Carga TOTAL"when "04"
display "04 Refresque Total - Carga TOTAL"when "04"
display "04 Refresque Total - Carga TOTAL"




when "04"
    display "04 Refresque Total - Carga TOTAL"display "04 Refresque Total - Carga TOTAL"display "04 Refresque Total - Carga TOTAL" display "04 Refresque Total - Carga TOTAL"display "04 Refresque Total - Carga TOTAL"
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION$CHANGE MODE        echo
$        echo
$        echo
$        echo
echo "04 Refresque Total - Carga TOTAL"echo "04$CHANGE MODE0 Salir"INSERT MODE #MENU PRINCIPAL DE EJECUCION
echo " "

echo " "

echo " "

echo " "

echo " "
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
8 lines deleted
e12$CHANGE MODE01 02 03 04 00

RealOFalso



   
   
    
    echo "\n\tlas opciones válidas son 1, 2 o 3\c"echo "\n\tlas opciones válidas son 1, 2 o 3\c""$CHANGE MODEpor favor ingrese alguna de las opciones 01 02 03 04 00

  
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"RealOFalso

GetEnterho "INSERT MODE      /0/      //      //      //      

    INSERT MODE  
#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
GetTipoDeProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "

/loop/////Address search hit BOTTOM without matching pattern/Address search hit BOTTOM without matching pattern/Address search hit BOTTOM without matching pattern?????loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_PROCESO="##";
    while [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03" ] &
& [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
GetTipoDeProceso

loop=0
while [ $loop != 1 ]    P_FCORTE=$FECHOY_ANOMESP_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_REAL_FALSO="#";
    while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "PROCESO REAL O EN FALSO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...


"/d/iccol/desarrollo/macros/sh-CARGAJUR" [Modified] line 78 of 197 --39%-- #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES


























    















GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_REAL_FALSO="#";
    while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "PROCESO REAL O EN FALSO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_PROCESO="##";
    while [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03" ] &
& [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "echo "01 Envio Original  - Carga TOTAL 1a vez"echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
GetTipoDeProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then   if test -z "$nomsus"then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig
cp $archivo $cadena00
echo
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
#*========================================================*
#*  EXECUTE PROGRAM: icestdatVEC-NORMAL*
#*========================================================*
#
echo   echo "01 Envio Original  - Carga TOTAL 1a vez"echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
GetTipoDeProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
="1"P_REAL_FALSOecho " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
GetTipoDeProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
OPEN MODEif [  P_REAL_FALSOOAPPEND MODE -eq #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMESecho "opción (01 02 03 04 00)   ---> \c"read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
if [ P_REAL_FALSO -eq
GetTipoDeProceso

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi APPEND MODE03 ]
APPEND MODE    exit
APPEND MODEfifi




if [ P_REAL_FALSO -eq 03 ]
    exit
fi#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
="#";P_PROCESOGetEnterelse
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fiif [ P_PROCESOO -eq 03 ]REPLACE 1 CHAR0
    


loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES"/d/iccol/desarrollo/macros/sh-CARGAJUR" [Modified] line 1 of 203 --0%-- :write sh-CARGAJUR2[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgwho am ivi /d/iccol/desarrollo/macros/sh-CARGAJUR/d/iccol/desarrollo>
"/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real""/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters#s
:w /d/iccol/desarrollo/macros/sh-CARGAJUR2"/d/iccol/desarrollo/macros/sh-CARGAJUR2" File exists - use "w! /d/iccol/desarrollo/macros/sh-CARGAJUR2" to overwrite[Hit return to continue] #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"

:w /d/iccol/desarrollo/macros/sh-CARGAJUR22"/d/iccol/desarrollo/macros/sh-CARGAJUR22" [New file] 227 lines, 8380 characters 

" line 3 of 227 --1%-- 

:file /d/iccol/desarrollo/macros/sh-CARGAJUR22"/d/iccol/desarrollo/macros/sh-CARGAJUR22" [Not edited] line 3 of 227 --1%-- 

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR22" File exists - use "w! /d/iccol/desarrollo/macros/sh-CARGAJUR22" to overwrite[Hit return to continue] #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"

:w!"/d/iccol/desarrollo/macros/sh-CARGAJUR22" 227 lines, 8380 characters 

[2] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>cat /d/iccol/desarrollo/macros/sh-CARGAJUR22
#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:      DATACREDITO                                *
#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
#            | CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# 16-may-2014|                                                    *
# Globant.   |                                                    *
#            |                                                    *
#******************************************************************
#
#*========================================================*
#*                DEFINICION DE VARIABLES                 *
#*========================================================*
# 
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA 
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50` 
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :      " $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :      " $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA 
# 
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; do
          echo
          echo "*--------------------------------------------------------*"
          echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "
          echo "*--------------------------------------------------------*"
          echo "           <S>   Proceso Real                   "          
          echo "           <N>   Proceso En Falso               "
          echo "*--------------------------------------------------------*"
          echo "       Digite opcion  (S/N)   ---> \c"         
          read P_PROCESO
          
          if [ -z "$P_PROCESO" ] ; then
              P_PROCESO="N"
          else
               if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; then
                   P_PROCESO="S"
               else
                   if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; then
                       P_PROCESO="N"
                   else
                       echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"
                       GetEnter
                   fi
               fi
          fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO 
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length($0))}'`
    if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; then
          echo "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD) -Proceso cancelado-"
          GetEnter
          exit
    else
        if [ $longitud -eq 0 ] ; then
             P_FCORTE=$FECHOY_ANOMES
             FECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
        else
             cd $DATOS
             FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`              
             sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`
             cd $TEMPORALES
             echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanata
             if test -z "$sanata" ; then
                  P_FCORTE=$FECHOY_ANOMES
                  echo "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n "
                  echo "                   **** PROCESO CANCELADO **** "
                  GetEnter
                  exit
             else
                  P_FCORTE=$FECHIS_ANOMES
                  CambiarSanata
             fi
         fi
    fi
}

CambiarSanata()
{
#*-----------------------------------------------------------------------------*
# VERIFICAR Y CAMBIAR AL SANATA CORRESPONDIENTE
#*-----------------------------------------------------------------------------*
   if [ $FECHOY_ANOMES -ne $FECHIS_ANOMES ] ; then
         echo "\n\tSe Procesa con fecha $FECHIS_ANOMESDIA \n"
          . /san_ata_$sanata/$FECHIS_ANOMES/sh-$FECHIS_ANOMES
          echo $DATABASE
          P_FCORTE=$FECHIS_ANOMES
   else
          P_FCORTE=$FECHOY_ANOMES
   fi
}


#* PARAMETROS:
fechab=0;
codsus=0;
nomsus={};
opcion="A";
vector=48;
numeroreg=0;
cadena01={};
cadena02={};
cadena03={};
cadena04={};
cadena05={};
cadena06={};
cadena07={};
cadena08={};
cadena09={};
cadena10={};
cadena11={};
#*========================================================*
#*                    PROCESO                             *
#*========================================================*
#*              FASE 1: PIDE PARAMETROS                   *
#*========================================================*
#*-----------------------------------------------------------------------------*
#                   MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
GetProceso

loop=0
while [ $loop != 1 ]
 do
  echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus    
  if [ $codsus -eq 999999 ]
   then
    loop=1
  else
   cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
     echo "suscriptor errado"
   else
     echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"
     read loopd
     if test -z "$loopd"
      then
       loop=1
     fi
   fi
  fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo   
cd $TEMPORALES
if test -s $archivo  
then
   echo
   echo "Procesando archivo-----> "$archivo 
else
   echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
   echo "        (ENTER) Continuar !!!  "
   read xxx
   exit
fi 
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE    
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig
cp $archivo $cadena00
echo
#echo "+-------------------------------------------------------------+"
#echo "|                 SEGUNDA FASE: PROCESO                       |"
#echo "+-------------------------------------------------------------+"
#*========================================================*
#*  EXECUTE PROGRAM: icestdatVEC-NORMAL                   *
#*========================================================*
#
echo 
echo "+------------------------------------------------------+"
echo "|  Programa CARGAJUR                                   |"
echo "|                                                      |"
echo "|  Procesando archivo --> "  $archivo              
echo "+------------------------------------------------------+"
nohup x CARGAJUR $archivo $P_PROCESO $codsus >| $archivo.log 2>| $archivo.log
echo "+-------------------------------------------------------------+"
echo "|     *********  RESULTADOS DEL PROCESO       **********      |"
echo "|                                                             |"
ls -lrt $archivo* >> $archivo.log
tail -20 $archivo.log
echo "+-------------------------------------------------------------+"

/d/iccol/desarrollo>ls -l login as: icjlud
login: No such file or directory
as:: No such file or directory
icjlud: No such file or directory
/d/iccol/desarrollo>Using keyboard-interactive authentication.
Password:
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>Password:
ksh: Password::  not found
/d/iccol/desarrollo>Using keyboard-interactive authentication.
Warning: Your password has expired, please change it now.
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>Warning: Your password has expired, please change it now.
ksh: Warning::  not found
/d/iccol/desarrollo>Using keyboard-interactive authentication.
New Password:
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>New Password:
ksh: New:  not found
/d/iccol/desarrollo>Using keyboard-interactive authentication.
sshd-kbdint: The first 8 characters of the password must contain at least 1 numeric or).
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>sshd-kbdint: The first 8 characters of the password must contain at least 1 numeric or).
ksh: syntax error: `)' unexpected
/d/iccol/desarrollo>Using keyboard-interactive authentication.
New Password:
Using keyboard-interactive authentication.
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>New Password:
ksh: New:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>Using keyboard-interactive authentication.
ksh: Using:  not found
/d/iccol/desarrollo>sshd-kbdint: The first 8 characters of the password must contain at least 1 numeric or).
Using keyboard-interactive authentication.
ksh: syntax error: `)' unexpected
/d/iccol/desarrollo>/d/iccol/desarrollo>Using keyboard-interactive authentication.
ksh: Using:  not found
/d/iccol/desarrollo>New Password:
ksh: New:  not found
/d/iccol/desarrollo>Using keyboard-interactive authentication.
ksh: Using:  not found
/d/iccol/desarrollo>Re-enter new Password:
Using keyboard-interactive authentication.
sshd-kbdint: password successfully changed for icjlud
ksh: Re-enter:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>Using keyboard-interactive authentication.
ksh: Using:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>sshd-kbdint: password successfully changed for icjlud
ksh: sshd-kbdint::  not found
/d/iccol/desarrollo>Last login: Wed May 21 13:16:59 2014 from 172.16.10.103
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
ksh: Last:  not found
/d/iccol/desarrollo>/d/iccol/desarrollo>Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
ksh: Sun:  not found
/d/iccol/desarrollo>COBJVM=sun_142
/d/iccol/desarrollo>JAVA_HOME=/usr/j2se
LD_LIBRARY_PATH=/usr/j2se/jre/lib/sparc:/usr/j2se/jre/lib/sparc/client:/usr/j2se/jre/lads:/usr/j2se/jre/lib/sparc:/opt/mfocus/des/cobol/lib:/opt/IBM/db2/V9.7/lib:/export/hoib64:/export/home/db2inst1/sqllib/lib32
/d/iccol/desarrollo>/d/iccol/desarrollo>LD _LIBRARY _PATH=/usr/j2se/jre/lib/sparc:/usr/j2se/jre/lib/sparc/client:/usr/j2se/jre/lads:/usr/j2se/jre/lib/sparc:/opt/mfocus/des/cobol/lib:/opt/IBM/db2/V9.7/lib:/export/hoib64:/export/home/db2inst1/sqllib/lib32
/d/iccol/desarrollo>PATH=/usr/j2se/jre/sh:/usr/j2se/sh:/usr/j2se/bin:/usr/j2se/jre/bin:/opt/mfocus/des/cobes/cobol/bin:/usr/bin:/bin:/usr/bin:/d/iccol/desarrollo/macros:/d/iccol/desarrollo/utiin:/usr/lib:/usr/ccs/bin:/opt/SUNWspro/bin:/usr/jdk/latest/bin:/usr/local/bin:/usr/j2^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"

"/d/iccol/desarrollo/macros/sh-CARGAJUR22" line 3 of 227 --1%-- 

[2] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>vi /d/iccol/desarrollo/macros/sh-CARGAJUR22^?   
"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 227 lines, 8381 characters #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real""/d/iccol/desarrollo/macros/sh-CARGAJUR2" 227 lines, 8381 characters:q/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"

echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMES:q/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
P_REAL_FALSO="#";        P_REAL_FALSO="#";while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "PROCESO REAL O EN FALSO"
echo $raya
echo " "
echo "1) Proceso en falso (por defecto)"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    P_PROCESO="##";
    while [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03" ] &
& [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] ; do
echo
echo $raya
#---------------------------------------------------
echo "TIPO DE PROCESO"
echo $raya
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"echo "00 Salir"echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; thenecho "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
else
echo "\n\tpor favor ingrese na de las opciones 01 02 03 04 00\c"GetEnter
fi
    done
}

#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
#*-----------------------------------------------------------------------------*
#MENU PRINCIPAL DE EJECUCION
#*-----------------------------------------------------------------------------*
clear
GetFechaSistema
RealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ]
    exit
fi

loop=0
while [ $loop != 1 ]
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
  echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"          echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig
cp $archivo $cadena00
echo
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
#*========================================================*
#*  EXECUTE PROGRAM: icestdatVEC-NORMAL*
#*========================================================*
#
echo
echo "+------------------------------------------------------+"
echo "|  Programa CARGAJUR|"
echo "||"
echo "|  Procesando archivo --> "  $archivo
echo "+------------------------------------------------------+"echo "+------------------------------------------------------+"
nohup x CARGAJUR $archivo $P_PROCESO $codsus >| $archivo.log 2>| $archivo.log
echo "+-------------------------------------------------------------+"
echo "|     *********  RESULTADOS DEL PROCESO**********|"
echo "||"
ls -lrt $archivo* >> $archivo.log
tail -20 $archivo.log
echo "+-------------------------------------------------------------+"

~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~"/d/iccol/desarrollo/macros/sh-CARGAJUR" [Modified] line 195 of 203 --96%-- :w /d/iccol/desarrollo/macros/sh-CARGAJUR2"/d/iccol/desarrollo/macros/sh-CARGAJUR2" File exists - use "w! /d/iccol/desarrollo/macros/sh-CARGAJUR2" to overwrite[Hit return to continue] echo "+------------------------------------------------------+"
nohup x CARGAJUR $archivo $P_PROCESO $codsus >| $archivo.log 2>| $archivo.log
echo "+-------------------------------------------------------------+"
echo "|     *********  RESULTADOS DEL PROCESO**********|"
echo "||"
ls -lrt $archivo* >> $archivo.log
tail -20 $archivo.log
echo "+-------------------------------------------------------------+"

~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~:w! /d/iccol/desarrollo/macros/sh-CARGAJUR2"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 203 lines, 6871 characters :w! /d/iccol/desarrollo/macros/sh-CARGAJUR22"/d/iccol/desarrollo/macros/sh-CARGAJUR22" 203 lines, 6871 characters :q/d/iccol/desarrollo>clear
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>clearfg   fgvi /d/iccol/desarrollo/macros/sh-CARGAJUR2/d/iccol/desarrollo>vi /d/iccol/desarrollo/macros/sh-CARGAJUR 
"/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real""/d/iccol/desarrollo/macros/sh-CARGAJUR" 227 lines, 8380 characters/getenterecho "<N>   Proceso En Falso"
echo "*--------------------------------------------------------*"
echo "Digite opcion  (S/N)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ] ; then
P_PROCESO="N"
else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; then
P_PROCESO="S"
else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; then
P_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"
GetEnter
/if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMESecho "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n
"
echo "**** PROCESO CANCELADO **** "GetEnter
exit
else
 P_FCORTE=$FECHIS_ANOMESCambiarSanatafi
fi
    fi
}//Address search hit BOTTOM without matching pattern[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>ls -a $TEMPORALES/*9^?    999999*
/d/iccol/desarrollo/temporales/9999991000905140101_ERRORES.txt
/d/iccol/desarrollo/temporales/9999991000905140101_ori.txt
/d/iccol/desarrollo/temporales/9999991000905140101.txt
/d/iccol/desarrollo/temporales/9999991000905140101.txt.log
/d/iccol/desarrollo/temporales/9999991000905140101.txt.orig
/d/iccol/desarrollo/temporales/9999991000905140104_ERRORES.txt
/d/iccol/desarrollo/temporales/9999991000905140104.txt
/d/iccol/desarrollo/temporales/9999991000905140104.txt.log
/d/iccol/desarrollo/temporales/9999991000905140104.txt.orig
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMESecho "\n !!!! *ERROR*  sanata de $FECHIS_ANOMESDIA NO Existe !!! \n
"
echo "**** PROCESO CANCELADO **** "GetEnter
exit
else
 P_FCORTE=$FECHIS_ANOMESCambiarSanatafi
fi
    fi
}#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
#| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# 16-may-2014|*
# Globant.   |*
#|*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES*
#*========================================================*
#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# ACTUALIZA FECHA ACTUAL DEL SISTEMA
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo "MAQUINA: " $P_MAQUINA
    echo "+-------------------------------------------------------------+"
    echo "|     Fecha de Ejecucion    :" $FECHOY_A4MMDD
    echo "|     Hora de Ejecucion     :" $HoraHoy
    echo "|-------------------------------------------------------------+"
}

GetProceso()
{
#*-----------------------------------------------------------------------------*
# PREGUNTA SI EL PROCESO SE REALIZA
#
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES
    P_PROCESO="#";
    while [ $P_PROCESO != "S" ] && [ $P_PROCESO != "N" ] ; doecho
echo "*--------------------------------------------------------*"echo "     **  DEFINICION DE LA BASE DATOS PARA PROCESO **     "echo "*--------------------------------------------------------*"echo "<S>   Proceso Real"echo "<S>   Proceso Real"echo "<N>   Proceso En Falso"echo "*--------------------------------------------------------*"echo "Digite opcion  (S/N)   ---> \c"read P_PROCESOif [ -z "$P_PROCESO" ] ; thenP_PROCESO="N"else
 if [ $P_PROCESO == "S" ] || [ $P_PROCESO == "s" ] ; thenP_PROCESO="S"else
if [ $P_PROCESO == "N" ] || [ $P_PROCESO == "n" ] ; thenP_PROCESO="N"
else
echo "\n\t*ERRROR* OPCION NO VALIDA! <ENTER>\c"GetEnter
fi
fi
fi
    done
}

GetPeriodoSanata()
{
#*-----------------------------------------------------------------------------*
# PREGUNTAR POR EL PERIODO DEL SANATA Y EFECTUAR EL CAMBIO
#*-----------------------------------------------------------------------------*
    echo "     Digite Fecha de la Base de Datos (AAAAMMDD) a Procesar  ---> \c"
    read FECHIS_ANOMESDIA
    longitud=`echo $FECHIS_ANOMESDIA | tr -d '[:alpha:]' | awk '{printf("%d\n", length
($0))}'`
if [ $longitud -ne 8 ] && [ $longitud -ne 0 ] ; thenecho "\t *ERROR*  Periodo Historico NO válida. La Fecha debe ser (AAAAMMDD)
-Proceso cancelado-"
GetEnter
exit
    else
if [ $longitud -eq 0 ] ; thenP_FCORTE=$FECHOY_ANOMESFECHIS_ANOMESDIA=`echo $FECHOY_ANOMES`
else
 cd $DATOS
FECHIS_ANOMES=`echo $FECHIS_ANOMESDIA | cut -c 1-6`sanata=`grep $FECHIS_ANOMES ICSANATA.DAT | cut -f2 -d"/"|cut -f3 -d"_"`cd $TEMPORALES
echo "Sanata para Fecha " $FECHIS_ANOMESDIA "  es " $sanataif test -z "$sanata" ; thenP_FCORTE=$FECHOY_ANOMES/archivo do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig



[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR
/d/iccol/desarrollo>echo $TEMPORALES
/d/iccol/desarrollo/temporales
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $TEMPORALESecho "$TEMPORALES"$TEMPORALES"
/d/iccol/desarrollo/temporales
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo "$TEMPORALES"echo ''$TEMPORALES'
$TEMPORALES
/d/iccol/desarrollo>ppp"qqq^?^?^[  /d/iccol/desarrollo>ppp"qqq^?^?
1) ppppp
/d/iccol/desarrollo>ppp"qqq^?^?
> ^C
/d/iccol/desarrollo>ppp=qqqq
/d/iccol/desarrollo>$ppp
ksh: qqqq:  not found
/d/iccol/desarrollo>echo $ppp
qqqq
/d/iccol/desarrollo>echo '$TEMPORALES/'$ppp
$TEMPORALES/qqqq
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo '$TEMPORALES/'$ppp/d/iccol/desarrollo>echo '$TEMPORALES/'+$ppp $ppp
$TEMPORALES/+ qqqq
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo '$TEMPORALES/'+ $ppp/d/iccol/desarrollo>echo '$TEMPORALES/'+$ppp 
$TEMPORALES/+qqqq
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>[ -z werw ]
/d/iccol/desarrollo>[ -z ppp ]
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>[ -z ppp ]e[ -z ppp ]c[ -z ppp ]h[ -z ppp ]o[ -z ppp ] [ -z ppp ]
[ -z ppp ]
/d/iccol/desarrollo>test -z ppp
/d/iccol/desarrollo>echo test -z ppp
test -z ppp
/d/iccol/desarrollo>echo `test -z ppp`

/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo `test -z ppp`echo `test -z $ppp`

/d/iccol/desarrollo>echo $ppp
qqqq
/d/iccol/desarrollo>if [ -z ppp ] echo "si"
> fi
ksh: syntax error: `fi' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z ppp ] echo "si"^Jfi/d/iccol/desarrollo>if [ -z ppp ]; echo "si"^Jfi  echo "si"^Jfit echo "si"^Jfih echo "si"^Jfie echo "si"^Jfin echo "si"^Jfi; echo "si"^Jfi; echo "si"^J;fi fi
ksh: syntax error: `;' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z ppp ]; then; echo "si"^J; fi/d/iccol/desarrollo>if [ -z ppp ]; then echo "si"^J; fi 
ksh: syntax error: `;' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z ppp ]; then echo "si"^J; fi/d/iccol/desarrollo>if [ -z ppp ]; then echo "si"^J fi 
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z ppp ]; then echo "si"^J fi/d/iccol/desarrollo>                                  /d/iccol/desarrollo>if [ -z ppp ]; then echo "si"^J fi/d/iccol/desarrollo>if [ -z $ppp ]; then echo "si"^J fi
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z $ppp ]; then echo "si"^J fi/d/iccol/desarrollo>if [ -z $ppp ]; then echo "si"^ fi  
> ;
ksh: syntax error: `;' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>if [ -z $ppp ]; then echo "si" fi^J;/d/iccol/desarrollo>if [ -z $ppp ] then echo "si" fi^J;  then echo "si" fi^;   
> fi
ksh: syntax error: `fi' unexpected
/d/iccol/desarrollo>
/d/iccol/desarrollo>echo $qqq

/d/iccol/desarrollo>echo $ppp
qqqq
/d/iccol/desarrollo>echo "cuatrocu"$ppp".txt"
cuatrocuqqqq.txt
/d/iccol/desarrollo>fff="JJJJJJaaaDDMMAAbbXX.txt"
/d/iccol/desarrollo>echo $fff
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>echo cut -c 18-19 $fff
cut -c 18-19 JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo cut -c 18-19 $fff/d/iccol/desarrollo>cut -c 18-19 $fff     /d/iccol/desarrollo>
cut: cannot open JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>cut -c 18-19 $fffecho cut -c 18-19 $fff/d/iccol/desarrollo>echo cut -c 18-19     "JJJJJJaaaDDMMAAbbXX.txt"
cut -c 18-19 JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo cut -c 18-19 "JJJJJJaaaDDMMAAbbXX.txt"/d/iccol/desarrollo>cut -c 18-19 $fff                          /d/iccol/desarrollo>                 echo cut -c 18-19 "JJJJJJaaaDDMMAAbbXX.txt"/d/iccol/desarrollo>cut -c 18-19 $fff                          /d/iccol/desarrollo>echo cut -c 18-19 $fff/d/iccol/desarrollo>echo `cut -c 18-19 $fff`cut -c 18-19 $fff`
cut: cannot open JJJJJJaaaDDMMAAbbXX.txt

/d/iccol/desarrollo>echo `expr substr $fff 18 19`
expr: syntax error

/d/iccol/desarrollo>man expr
Reformatting page.  Please Wait... done

User Commands                                             expr(1)

NAME
     expr - evaluate arguments as an expression

SYNOPSIS
     /usr/bin/expr argument...

     /usr/xpg4/bin/expr argument...

     /usr/xpg6/bin/expr argument...

DESCRIPTION
  /usr/bin/expr, /usr/xpg4/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result  to  standard  output.  The character 0 is written to
     indicate a zero value and nothing is written to  indicate  a
     null string.

  /usr/xpg6/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result to standard output followed by a NEWLINE. If there is
     no result from expr processing,  a  NEWLINE  is  written  to
     standard output.

OPERANDS
     The argument operand is evaluated as an expression. Terms of
     the  expression must be separated by blanks. Characters spe-
     cial to the shell must be escaped (see sh(1)). Strings  con-
     taining blanks or other special characters should be quoted.
     The length of the expression is limited  to  LINE_MAX  (2048
     characters).

     The operators and keywords are listed below. The list is  in
     order of increasing precedence, with equal precedence opera-
     tors grouped within {} symbols. All  of  the  operators  are
     left-associative.

     expr \| expr

         Returns the evaluation of the first expr if it  is  nei-
         ther  NULL  nor  0; otherwise, returns the evaluation of
         the second expr if it is not NULL; otherwise, 0.

     expr \& expr

         Returns the first expr if neither expr  is  NULL  or  0,
--More--(20%)         otherwise returns 0.

SunOS 5.10          Last change: 29 Aug 2003                    1

User Commands                                             expr(1)

     expr{ =, \>, \>=, \<, \<=, !=} expr

         Returns the result of  an  integer  comparison  if  both
         arguments  are integers, otherwise returns the result of
         a string comparison using the locale-specific  coalition
         sequence. The result of each comparison will be 1 if the
         specified relationship is TRUE, 0 if the relationship is
         FALSE.

     expr { +, - } expr

         Addition or subtraction of integer-valued arguments.

     expr { \*, /, %} expr

         Multiplication, division, or remainder of  the  integer-
         valued arguments.

     expr : expr

         The matching operator : (colon) compares the first argu-
         ment with the second argument, which must be an interna-
         tionalized basic regular expression (BRE),  except  that
         all  patterns  are  anchored  to  the  beginning  of the
         string. That is, only sequences starting  at  the  first
         character of a string are matched by the regular expres-
         sion.   See   regex(5)   and   NOTES.   Normally,    the
         /usr/bin/expr  matching  operator  returns the number of
         bytes matched and the /usr/xpg4/bin/expr matching opera-
         tor  returns  the  number  of  characters  matched (0 on
         failure). If the second argument contains at  least  one
         BRE  sub-expression  [\(...\)],  the  matching  operator
         returns the string corresponding to \1.

     integer

         An argument consisting only of an (optional) unary minus
         followed by digits.

     string

         A string  argument  that  cannot  be  identified  as  an
--More--(42%)
SunOS 5.10          Last change: 29 Aug 2003                    2

User Commands                                             expr(1)

         integer  argument  or  as one of the expression operator
         symbols.

  Compatibility Operators (x86 only)
     The following operators are included for compatibility  with
     INTERACTIVE UNIX System only and are not intended to be used
     by non- INTERACTIVE UNIX System scripts:

     index string character-list

         Report the first position in which any one of the  bytes
         in character-list matches a byte in string.

     length string

         Return the length (that is,  the  number  of  bytes)  of
         string.

     substr string integer-1 integer-2

         Extract the substring of  string  starting  at  position
         integer-1  and  of length integer-2 bytes.  If integer-1
         has a value greater than the number of bytes in  string,
         expr  returns a null string.  If you try to extract more
         bytes than there are in string,  expr  returns  all  the
         remaining  bytes from string. Results are unspecified if
         either integer-1 or integer-2 is a negative value.

EXAMPLES
     Example 1: Adding an integer to a shell variable

     Add 1 to the shell variable a:

     example$ a=`expr $a + 1`

     Example 2: Returning a path name segment

     The following example emulates  basename(1),  returning  the
     last  segment  of  the  path name $a. For $a equal to either
     /usr/abc/file or just file, the example returns file. (Watch
     out  for  / alone as an argument: expr takes it as the divi-
     sion operator.  See NOTES below.)

--More--(64%)SunOS 5.10          Last change: 29 Aug 2003                    3

User Commands                                             expr(1)

     example$ expr $a : '.*/\(.*\)' \| $a

     Example 3: Using // characters to simplify the expression

     Here is a better version of the previous example. The  addi-
     tion of the // characters eliminates any ambiguity about the
     division operator and simplifies the whole expression.

     example$ expr //$a : '.*/\(.*\)'

  /usr/bin/expr
     Example 4: Returning the number of bytes in a variable

     example$ expr "$VAR" : '.*'

  /usr/xpg4/bin/expr
     Example 5: Returning the number of characters in a variable

     example$ expr "$VAR" : '.*'

ENVIRONMENT VARIABLES
     See environ(5) for descriptions of the following environment
     variables  that  affect the execution of expr: LANG, LC_ALL,
     LC_COLLATE, LC_CTYPE, LC_MESSAGES, and NLSPATH.

EXIT STATUS
     As a side effect of expression evaluation, expr returns  the
     following exit values:

     0        If the expression is neither NULL nor 0.

     1        If the expression is either NULL or 0.

     2        For invalid expressions.

     >2       An error occurred.

ATTRIBUTES
     See attributes(5) for descriptions of the  following  attri-
     butes:

SunOS 5.10          Last change: 29 Aug 2003                    4

User Commands                                             expr(1)
--More--(81%)
     ____________________________________________________________
    |       ATTRIBUTE TYPE        |       ATTRIBUTE VALUE       |
    |_____________________________|_____________________________|
    | Availability                | SUNWcsu                     |
    |_____________________________|_____________________________|
    | CSI                         | enabled                     |
    |_____________________________|_____________________________|
    | Interface Stability         | Standard                    |
    |_____________________________|_____________________________|

SEE ALSO
     basename(1),   ed(1),   sh(1),   Intro(3),    attributes(5),
     environ(5), regex(5), standards(5)

DIAGNOSTICS
     syntax error            Operator and operand errors.

     non-numeric argument    Arithmetic is attempted  on  such  a
                             string.

NOTES
     After argument processing by the shell, expr cannot tell the
     difference  between an operator and an operand except by the
     value. If $a is an =, the command:

     example$ expr $a = '='

     looks like:

     example$ expr = = =

     as the arguments are passed to expr (and they are all  taken
     as the = operator). The following works:

     example$ expr X$a = X=

  Regular Expressions
     Unlike some previous versions, expr  uses  Internationalized
     Basic  Regular  Expressions for all system-provided locales.
     Internationalized Regular Expressions are explained  on  the
     regex(5) manual page.

SunOS 5.10          Last change: 29 Aug 2003                    5

/d/iccol/desarrollo> q^?   man substr
No manual entry for substr.
/d/iccol/desarrollo>man expr
Reformatting page.  Please Wait... done

User Commands                                             expr(1)

NAME
     expr - evaluate arguments as an expression

SYNOPSIS
     /usr/bin/expr argument...

     /usr/xpg4/bin/expr argument...

     /usr/xpg6/bin/expr argument...

DESCRIPTION
  /usr/bin/expr, /usr/xpg4/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result  to  standard  output.  The character 0 is written to
     indicate a zero value and nothing is written to  indicate  a
     null string.

  /usr/xpg6/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result to standard output followed by a NEWLINE. If there is
     no result from expr processing,  a  NEWLINE  is  written  to
     standard output.

OPERANDS
     The argument operand is evaluated as an expression. Terms of
     the  expression must be separated by blanks. Characters spe-
     cial to the shell must be escaped (see sh(1)). Strings  con-
     taining blanks or other special characters should be quoted.
     The length of the expression is limited  to  LINE_MAX  (2048
     characters).

     The operators and keywords are listed below. The list is  in
     order of increasing precedence, with equal precedence opera-
     tors grouped within {} symbols. All  of  the  operators  are
     left-associative.

     expr \| expr

         Returns the evaluation of the first expr if it  is  nei-
         ther  NULL  nor  0; otherwise, returns the evaluation of
         the second expr if it is not NULL; otherwise, 0.

     expr \& expr

         Returns the first expr if neither expr  is  NULL  or  0,
--More--(20%)         otherwise returns 0.

SunOS 5.10          Last change: 29 Aug 2003                    1

User Commands                                             expr(1)

     expr{ =, \>, \>=, \<, \<=, !=} expr

         Returns the result of  an  integer  comparison  if  both
         arguments  are integers, otherwise returns the result of
         a string comparison using the locale-specific  coalition
         sequence. The result of each comparison will be 1 if the
         specified relationship is TRUE, 0 if the relationship is
         FALSE.

     expr { +, - } expr

         Addition or subtraction of integer-valued arguments.

     expr { \*, /, %} expr

         Multiplication, division, or remainder of  the  integer-
         valued arguments.

     expr : expr

         The matching operator : (colon) compares the first argu-
         ment with the second argument, which must be an interna-
         tionalized basic regular expression (BRE),  except  that
         all  patterns  are  anchored  to  the  beginning  of the
         string. That is, only sequences starting  at  the  first
         character of a string are matched by the regular expres-
         sion.   See   regex(5)   and   NOTES.   Normally,    the
         /usr/bin/expr  matching  operator  returns the number of
         bytes matched and the /usr/xpg4/bin/expr matching opera-
         tor  returns  the  number  of  characters  matched (0 on
         failure). If the second argument contains at  least  one
         BRE  sub-expression  [\(...\)],  the  matching  operator
         returns the string corresponding to \1.

     integer

         An argument consisting only of an (optional) unary minus
         followed by digits.

     string

         A string  argument  that  cannot  be  identified  as  an
--More--(42%)
SunOS 5.10          Last change: 29 Aug 2003                    2

User Commands                                             expr(1)

         integer  argument  or  as one of the expression operator
         symbols.

  Compatibility Operators (x86 only)
     The following operators are included for compatibility  with
     INTERACTIVE UNIX System only and are not intended to be used
     by non- INTERACTIVE UNIX System scripts:

     index string character-list

         Report the first position in which any one of the  bytes
         in character-list matches a byte in string.

     length string

         Return the length (that is,  the  number  of  bytes)  of
         string.

     substr string integer-1 integer-2

         Extract the substring of  string  starting  at  position
         integer-1  and  of length integer-2 bytes.  If integer-1
         has a value greater than the number of bytes in  string,
         expr  returns a null string.  If you try to extract more
         bytes than there are in string,  expr  returns  all  the
         remaining  bytes from string. Results are unspecified if
         either integer-1 or integer-2 is a negative value.

EXAMPLES
     Example 1: Adding an integer to a shell variable

     Add 1 to the shell variable a:

     example$ a=`expr $a + 1`

     Example 2: Returning a path name segment

     The following example emulates  basename(1),  returning  the
     last  segment  of  the  path name $a. For $a equal to either
     /usr/abc/file or just file, the example returns file. (Watch
     out  for  / alone as an argument: expr takes it as the divi-
     sion operator.  See NOTES below.)

--More--(64%)/d/iccol/desarrollo>^[  /d/iccol/desarrollo>man expr man substrman expr   echo `expr substr $fff 18 19`/d/iccol/desarrollo>
expr: syntax error

/d/iccol/desarrollo>echo expr substr $fff 18 19
expr substr JJJJJJaaaDDMMAAbbXX.txt 18 19
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo expr substr $fff 18 19/d/iccol/desarrollo>echo `expr substr $fff 18 19`/d/iccol/desarrollo>
expr: syntax error

/d/iccol/desarrollo>man expr
Reformatting page.  Please Wait... done

User Commands                                             expr(1)

NAME
     expr - evaluate arguments as an expression

SYNOPSIS
     /usr/bin/expr argument...

     /usr/xpg4/bin/expr argument...

     /usr/xpg6/bin/expr argument...

DESCRIPTION
  /usr/bin/expr, /usr/xpg4/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result  to  standard  output.  The character 0 is written to
     indicate a zero value and nothing is written to  indicate  a
     null string.

  /usr/xpg6/bin/expr
     The expr utility evaluates the  expression  and  writes  the
     result to standard output followed by a NEWLINE. If there is
     no result from expr processing,  a  NEWLINE  is  written  to
     standard output.

OPERANDS
     The argument operand is evaluated as an expression. Terms of
     the  expression must be separated by blanks. Characters spe-
     cial to the shell must be escaped (see sh(1)). Strings  con-
     taining blanks or other special characters should be quoted.
     The length of the expression is limited  to  LINE_MAX  (2048
     characters).

     The operators and keywords are listed below. The list is  in
     order of increasing precedence, with equal precedence opera-
     tors grouped within {} symbols. All  of  the  operators  are
     left-associative.

     expr \| expr

         Returns the evaluation of the first expr if it  is  nei-
         ther  NULL  nor  0; otherwise, returns the evaluation of
         the second expr if it is not NULL; otherwise, 0.

     expr \& expr

         Returns the first expr if neither expr  is  NULL  or  0,
--More--(20%)         otherwise returns 0.

SunOS 5.10          Last change: 29 Aug 2003                    1

User Commands                                             expr(1)

     expr{ =, \>, \>=, \<, \<=, !=} expr

         Returns the result of  an  integer  comparison  if  both
         arguments  are integers, otherwise returns the result of
         a string comparison using the locale-specific  coalition
         sequence. The result of each comparison will be 1 if the
         specified relationship is TRUE, 0 if the relationship is
         FALSE.

     expr { +, - } expr

         Addition or subtraction of integer-valued arguments.

     expr { \*, /, %} expr

         Multiplication, division, or remainder of  the  integer-
         valued arguments.

     expr : expr

         The matching operator : (colon) compares the first argu-
         ment with the second argument, which must be an interna-
         tionalized basic regular expression (BRE),  except  that
         all  patterns  are  anchored  to  the  beginning  of the
         string. That is, only sequences starting  at  the  first
         character of a string are matched by the regular expres-
         sion.   See   regex(5)   and   NOTES.   Normally,    the
         /usr/bin/expr  matching  operator  returns the number of
         bytes matched and the /usr/xpg4/bin/expr matching opera-
         tor  returns  the  number  of  characters  matched (0 on
         failure). If the second argument contains at  least  one
         BRE  sub-expression  [\(...\)],  the  matching  operator
         returns the string corresponding to \1.

     integer

         An argument consisting only of an (optional) unary minus
         followed by digits.

     string

         A string  argument  that  cannot  be  identified  as  an
--More--(42%)
SunOS 5.10          Last change: 29 Aug 2003                    2

User Commands                                             expr(1)

         integer  argument  or  as one of the expression operator
         symbols.

  Compatibility Operators (x86 only)
     The following operators are included for compatibility  with
     INTERACTIVE UNIX System only and are not intended to be used
     by non- INTERACTIVE UNIX System scripts:

     index string character-list

         Report the first position in which any one of the  bytes
         in character-list matches a byte in string.

     length string

         Return the length (that is,  the  number  of  bytes)  of
         string.

     substr string integer-1 integer-2

         Extract the substring of  string  starting  at  position
         integer-1  and  of length integer-2 bytes.  If integer-1
         has a value greater than the number of bytes in  string,
         expr  returns a null string.  If you try to extract more
         bytes than there are in string,  expr  returns  all  the
         remaining  bytes from string. Results are unspecified if
         either integer-1 or integer-2 is a negative value.

EXAMPLES
     Example 1: Adding an integer to a shell variable

     Add 1 to the shell variable a:

     example$ a=`expr $a + 1`

     Example 2: Returning a path name segment

     The following example emulates  basename(1),  returning  the
     last  segment  of  the  path name $a. For $a equal to either
     /usr/abc/file or just file, the example returns file. (Watch
     out  for  / alone as an argument: expr takes it as the divi-
     sion operator.  See NOTES below.)

--More--(64%)/d/iccol/desarrollo>^[  /d/iccol/desarrollo>man exprecho `expr substr $fff 18 19`/d/iccol/desarrollo>echo `expr substr $fff 18 9` 29`2` 
expr: syntax error

/d/iccol/desarrollo>echo ${fff:18:2}
ksh: ${fff:18:2}: bad substitution
/d/iccol/desarrollo>echo ${"iouyiouyiuy":4:3}
ksh: ${"iouyiouyiuy":4:3}: bad substitution
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo ${"iouyiouyiuy":4:3}/d/iccol/desarrollo> ${"iouyiouyiuy":4:3}    /d/iccol/desarrollo>q ${"iouyiouyiuy":4:3}q ${"iouyiouyiuy":4:3}q ${"iouyiouyiuy":4:3}= ${"iouyiouyiuy":4:3}=${"iouyiouyiuy":4:3} 
ksh: qqq=${"iouyiouyiuy":4:3}: bad substitution
/d/iccol/desarrollo>man substitution
No manual entry for substitution.
/d/iccol/desarrollo>echo cut -c        $fff | cut -c 18-20
XX.
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | cut -c 18-20/d/iccol/desarrollo>echo `$fff | cut -c 18-20`$fff | cut -c 18-  19`
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found

/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo `$fff | cut -c 18-19`/d/iccol/desarrollo>echo `$                          echo `$fff | cut -c 18-19`/d/iccol/desarrollo>echo `'$fff | cut -c 18-19`'$fff' | cut -c 18-19`
ksh: $fff:  not found

/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo `'$fff' | cut -c 18-19`/d/iccol/desarrollo>echo `$fff | cut -c 18-19`  /d/iccol/desarrollo>echo $fff | cut -c 18-20  /d/iccol/desarrollo>echo $fff | cut -c 18-  19
XX
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | cut -c 18-19/d/iccol/desarrollo>echo ($fff | cut -c 18-19($fff | cut -c 18-19)
ksh: syntax error: `(' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo ($fff | cut -c 18-19)/d/iccol/desarrollo>echo ( $fff | cut -c 18-19) $fff | cut -c 18-19 )
ksh: syntax error: `(' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo ( $fff | cut -c 18-19 )/d/iccol/desarrollo>echo ($fff | cut -c 18-19)  /d/iccol/desarrollo>echo $fff | cut -c 18-19  /d/iccol/desarrollo>echo `'$fff' | cut -c 18-19`/d/iccol/desarrollo>echo $fff | cut -c 18-19    /d/iccol/desarrollo>
XX
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | cut -c 18-19/d/iccol/desarrollo>qecho $fff | cut -c 18-19/d/iccol/desarrollo>q=echo $fff | cut -c 18-19/d/iccol/desarrollo>q=
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=echo $fff | cut -c 18-19/d/iccol/desarrollo>q=echo "$fff | cut -c 18-19"$fff" | cut -c 18-19
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=echo "$fff" | cut -c 18-19/d/iccol/desarrollo>q=echo ''$fff'
ksh: $fff:  not found
/d/iccol/desarrollo>echo $fff
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>echo ${fff}
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo ${fff}echo ${fff:}1}2}
ksh: ${fff:12}: bad substitution
/d/iccol/desarrollo>echo $fff
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fffecho $fff | e sed 's/\(..\)\.txt/\1/
> '
JJJJJJaaaDDMMAAbbXX
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | sed 's/\(..\)\.txt/\1/^J'/d/iccol/desarrollo>echo $fff | sed 's/'\(..\)\.txt/\1/^J'\(..\)\.txt/\1/^J' i\(..\)\.txt/\1/^J'^?\(..\)\.txt/\1/^J'\(..\)\.txt/\1/^J'  \(..\)\.txt/\1/^J' .\(..\)\.txt/\1/^J'*\(..\)\.txt/\1/^J'
XX
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>echo ($fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>echo ( $fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>echo (  $fff | sed 's/.*\(..\)\.txt/\1/^J' )
ksh: syntax error: `(' unexpected
/d/iccol/desarrollo>echo [ 1 == 1 ]
[ 1 == 1 ]
/d/iccol/desarrollo>echo `[1 == 1       1 == 1 ]`

/d/iccol/desarrollo>echo $q

/d/iccol/desarrollo>q= $fff | sed 's/.*\(..\)\.txt/\1/^J'
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
sed: command garbled: s/.*\(..\)\.txt/\1/^J
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q= $fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>q=$fff | sed 's/.*\(..\)\.txt/\1/^J' /d/iccol/desarrollo>q=
sed: command garbled: s/.*\(..\)\.txt/\1/^J
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=$fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>q= $fff | sed 's/.*\(..\)\.txt/\1/^J'/d/iccol/desarrollo>q=(($fff | sed 's/.*\(..\)\.txt/\1/^J')
ksh: syntax error: `(' unexpected
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=($fff | sed 's/.*\(..\)\.txt/\1/^J')/d/iccol/desarrollo>q=``$fff | sed 's/.*\(..\)\.txt/\1/^J'`
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
sed: command garbled: s/.*\(..\)\.txt/\1/^J
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=`$fff | sed 's/.*\(..\)\.txt/\1/^J'`/d/iccol/desarrollo>q=`$fff | sed 's/.*\\(..\)\.txt/\1/^J'`\(..\\)\.txt/\1/^J'`\)\\.txt/\1/^J'`\.txt/\\1/^J'`
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
sed: command garbled: s/.*\(..\)\.txt/\1/^J
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=`$fff | sed 's/.*\\(..\\)\\.txt/\\1/^J'`/d/iccol/desarrollo>q=`$fff | sed 's/.*\\(..\\)\\.txt/\\1/J'` '` 
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=`$fff | sed 's/.*\\(..\\)\\.txt/\\1/'`/d/iccol/desarrollo>q=`"$fff | sed 's/.*\\(..\\)\\.txt/\\1/'`/d/iccol/desarrollo>q=`""$fff" | sed 's/.*\\(..\\)\\.txt/\\1/'`/d/iccol/desarrollo>q=`"$fff
ksh: JJJJJJaaaDDMMAAbbXX.txt:  not found
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=`"$fff" | sed 's/.*\\(..\\)\\.txt/\\1/'`/d/iccol/desarrollo>q=`''$fff'
ksh: $fff:  not found
/d/iccol/desarrollo>echo $fff
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fffecho $fff | grep XX.txt
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fff | grep XX.txt/d/iccol/desarrollo>echo $fff | grep XX.txz
/d/iccol/desarrollo>q=  ^[  /d/iccol/desarrollo>echo $fff | grep XX.txz/d/iccol/desarrollo>qecho $fff | grep XX.txz/d/iccol/desarrollo>q=echo $fff | grep XX.txz/d/iccol/desarrollo>q=`echo $fff | grep XX.txz`echo $fff | grep XX.txz`
/d/iccol/desarrollo>echo $q

/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $qq=`echo $fff | grep XX.txz`/d/iccol/desarrollo>q=`echo $fff | grep XX.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>q=`echo $fff | grep XX.txt`/d/iccol/desarrollo>echo $q                    /d/iccol/desarrollo>
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>
/d/iccol/desarrollo>
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR
 do
echo "     Digite Codigo Suscriptor  ---> \c"
  read codsus
  if [ $codsus -eq 999999 ]
   then
loop=1
  else
cd $DATABASE
   nomsus=`grep ^"$codsus" ICBSUS | cut -c9-48`
   echo "Codigo suscriptor: " $codsus  "   Suscriptor: " $nomsus
   if test -z "$nomsus"
    then
echo "suscriptor errado"
   else
echo "si correcto digite ENTER, si va a modificar digite N  ---> \c"read loopdif test -z "$loopd"
then
loop=1fi
fi
fi
done
echo "     Digite nombre del archivo     ---> \c"
read archivo
cd $TEMPORALES
if test -s $archivo
then
echo
echo "Procesando archivo-----> "$archivo
else
echo "!!!...Archivo $archivo  no existe proceso termina ....!!!"
   echo
echo "(ENTER) Continuar !!!  "
   read xxx
   exit
fi
echo
echo "+-------------------------------------------------------------+"
echo "+-------------------------------------------------------------+"
echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
fechab=$P_FCORTE
echo "+-------------------------------------------------------------+"
numeroreg=`wc -l < $archivo`
echo
echo "+-------------------------------------------------------------+"
echo "| Registros iniciales archivo de entrada : " $numeroreg
echo "+-------------------------------------------------------------+"
cadena00=$archivo.orig"/d/iccol/desarrollo/macros/sh-CARGAJUR" line 182 of 227 --80%-- :q/d/iccol/desarrollo>fg
ksh: fg: no such job
/d/iccol/desarrollo>vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 203 lines, 6871 characters #sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";


#
GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Muestra fecha del sistema y máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    P_FCORTE=$FECHOY_ANOMES"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 203 lines, 6871 characters
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
203 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="             D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "       Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO

#*-----------------------------------------------------------------------------*

APPEND MODE    P_FCORTE=$FECHOY_ANOMES

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] 

APPEND MODE    do

APPEND MODE        echo

APPEND MODE        echo $raya

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo "              PROCESO REAL O EN FALSO"

APPEND MODE        echo $raya

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso (por defecto)"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE          echo "              opción (123)   ---> \c"

APPEND MODE          read P_REAL_FALSO

APPEND MODE

APPEND MODE          if [ -z "$P_REAL_FALSO" ] ; then

APPEND MODE              P_REAL_FALSO="1"

APPEND MODE          else

APPEND MODE             echo "\n\tlas opciones válidas son 1, 2 o 3\c"

APPEND MODE             GetEnter

APPEND MODE          fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##";

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z "$P_PROCESO" ] 

APPEND MODE    then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] & [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE        then

APPEND MODE        echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE        endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE    read P_NombreArchivo

APPEND MODE    if [ -z P_NombreArchivo ]

APPEND MODE    then

APPEND MODE        endLoop=0

APPEND MODE    else

APPEND MODE        if [ ! -s $P_NombreArchivo ]

APPEND MODE        echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE        else

APPEND MODE        " el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE        auxTxt=`echo $fff | grep XX.txt`

APPEND MODE        if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE        then

APPEND MODE            echo "El nombre del archivo no condice con el tipo de proceso " $P_PROCESO

APPEND MODE        fi

APPEND MODE        fi

APPEND MODE    fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 215 lines, 6950 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>sh-CARGAJUR2
sh-CARGAJUR2[78]: syntax error at line 116 : `done' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
GetNombreDelArchivo
if [ -z P_NombreArchivo ]
    exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
    P_PROCESO="##";
    while [ endLoop == 0 ]
#---------------------------------------------------
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ]
    then
    echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] & [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"


:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 215 lines, 6949 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[78]: syntax error at line 116 : `done' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
    P_PROCESO="##"
    while [ endLoop == 0 ]
#---------------------------------------------------
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ]
    then
    echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] & [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO" &&
" ] &APPEND MODE&:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 215 lines, 6950 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[78]: syntax error at line 116 : `done' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
    P_PROCESO="##"
    while [ endLoop == 0 ]
#---------------------------------------------------
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z "$P_PROCESO" ]
    then
    echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
   


#sh-CARGAJUR.v.01.0001
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
215 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="             D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "       Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO

#*-----------------------------------------------------------------------------*

APPEND MODE    P_FCORTE=$FECHOY_ANOMES

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    while [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != "
3" ] 

APPEND MODE    do

APPEND MODE        echo

APPEND MODE        echo $raya

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo "              PROCESO REAL O EN FALSO"

APPEND MODE        echo $raya

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso (por defecto)"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE          echo "              opción (123)   ---> \c"

APPEND MODE          read P_REAL_FALSO

APPEND MODE

APPEND MODE          if [ -z "$P_REAL_FALSO" ] ; then

APPEND MODE              P_REAL_FALSO="1"

APPEND MODE          else

APPEND MODE             echo "\n\tlas opciones válidas son 1, 2 o 3\c"

APPEND MODE             GetEnter

APPEND MODE          fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE                " el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 215 lines, 7212 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[78]: syntax error at line 116 : `done' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
GetNombreDelArchivo
if [ -z P_NombreArchivo ]
    exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
    P_PROCESO="##"
    while [ endLoop == 0 ]
#---------------------------------------------------
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z $P_PROCESO ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"else
endLoop=1
fi
fi
OPEN MODE    do:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 216 lines, 7219 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[119]: GetNombreDelArchivo:  not found
sh-CARGAJUR2[120]: syntax error at line 143 : `else' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
read P_REAL_FALSOif [ -z "$P_REAL_FALSO" ] ; thenP_REAL_FALSO="1"else
echo "\n\tlas opciones válidas son 1, 2 o 3\c"GetEnter
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
    P_PROCESO="##"
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z $P_PROCESO ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"else
endLoop=1
fi{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0
else
if [ ! -s $P_NombreArchivo ]echo "no se encuentra el archivo " $P_NombreArchivoelse
" el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
clear
GetFechaSistema
GetRealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ]"$CHANGE MODE#                      INSERT MODE :w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 216 lines, 7217 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[119]: GetNombreDelArchivo:  not found
sh-CARGAJUR2[120]: syntax error at line 143 : `else' unexpected
/d/iccol/desarrollo>141   fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0
else
if [ ! -s $P_NombreArchivo ]echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
clear
GetFechaSistema
GetRealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ] 
OPEN MODE            then:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 217 lines, 7234 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[119]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
D A T A C R E D I T O
 
       Cargue de archivo de JURAD
 
Fecha:  20140521   18:20  en  172.16.10.10
 
---------------------------------------------------

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso (por defecto)
 
        2) Proceso real
 
        3) Salir
 
              opción (123)   ---> 
sh-CARGAJUR2[164]: syntax error at line 167 : `fi' unexpected
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0
else
if [ ! -s $P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
clear
GetFechaSistema
GetRealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ]
exit
fi
GetNombreDelArchivo
if [ -z P_NombreArchivo ]
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
echo " "
echo $raya
echo " "
banner CARGAJUR
echo " "
echo $raya
echo " Procesando $TEMPORALES/'$P_NombreArchivo
echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
echo $raya
echo "RESULTADOS DEL PROCESO"
echo " "
cat $P_NombreArchivo.log
echo " "
ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
ls -lrt $P_NombreArchivo*
echo $raya
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "    
echo " "
fi    exitif [ P_PROCESO -eq 00 ]GetTipoDeProcesoauxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
clear
GetFechaSistema
GetRealOFalso
if [ P_REAL_FALSO -eq 03 ]
    exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ]
    exit
fi
GetNombreDelArchivo
if [ -z P_NombreArchivo ]
    exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
OPEN MODEthen
 



    



if [ -z P_NombreArchivo ]$CHANGE MODEthen  then:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 220 lines, 7249 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[119]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
D A T A C R E D I T O
 
       Cargue de archivo de JURAD
 
Fecha:  20140521   18:23  en  172.16.10.10
 
---------------------------------------------------

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso (por defecto)
 
        2) Proceso real
 
        3) Salir
 
              opción (123)   ---> a

        las opciones válidas son 1, 2 o 3sh-CARGAJUR2[28]: GetEnter:  not found

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso (por defecto)
 
        2) Proceso real
 
        3) Salir
 
              opción (123)   ---> 3

        las opciones válidas son 1, 2 o 3sh-CARGAJUR2[28]: GetEnter:  not found
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
auxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
clear
GetFechaSistema
GetRealOFalso
if [ P_REAL_FALSO -eq 03 ]
then
exit
fi
GetTipoDeProceso
if [ P_PROCESO -eq 00 ]
then
exit
fi
GetNombreDelArchivo
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
    echo $raya
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
220 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc=".             D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO

#*-----------------------------------------------------------------------------*

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE        echo

APPEND MODE        echo $raya

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo "              PROCESO REAL O EN FALSO"

APPEND MODE        echo $raya

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ -z "$P_REAL_FALSO" ]

APPEND MODE        then

APPEND MODE            P_REAL_FALSO="x"

APPEND MODE        else

APPEND MODE            if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO
 != "3" ] 

APPEND MODE            then

APPEND MODE                echo "\n\tlas opciones válidas son 1, 2 o 3\c"

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 222 lines, 7280 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[121]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
. D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha:  20140521   18:29  en  172.16.10.10
 

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc=".D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
222 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="-              D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO

#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ -z "$P_REAL_FALSO" ]

APPEND MODE        then

APPEND MODE            P_REAL_FALSO="x"

APPEND MODE        else

APPEND MODE            if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO
 != "3" ] 

APPEND MODE            then

APPEND MODE                echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 224 lines, 7306 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[123]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
- D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha:  20140521   18:33  en  172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
/d/iccol/desarrollo>1
ksh: 1: cannot execute
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ -z "$P_REAL_FALSO" ]
then
P_REAL_FALSO="x"
else
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO
 != "3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"else
endLoop=1
fi
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0
:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 224 lines, 7304 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fg1 sh-CARGAJUR2
sh-CARGAJUR2[123]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
- D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha:  20140521   18:38  en  172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ -z $P_REAL_FALSO ]
then
P_REAL_FALSO="x"
else
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO
 != "3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"else
endLoop=1
fi
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "TIPO DE PROCESO"
    echo $raya
    endLoop=0#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
dc="-D A T A C R E D I T O"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo $dc
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha: " $FECHOY_A4MMDD " " $HoraHoy " en " $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
224 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "                D A T A C R E D I T O"
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*

    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != 
"3" ] 

APPEND MODE        then

APPEND MODE            echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE        else

APPEND MODE            endLoop=1

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 218 lines, 7170 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 18:40  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    P_MAQUINA=`who am i | cut -c 39-50`P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO !=
"3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"
else
endLoop=1
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...whilREPLACE MODE!= 1:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 218 lines, 7170 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 18:42  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 3
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 2
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 0

        las opciones válidas son 1, 2 o 3
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> q

        las opciones válidas son 1, 2 o 3
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 
sh-CARGAJUR2[23]: test: argument expected
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
    P_MAQUINA=`who am i | cut -c 39-50`P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ endLoop != 1 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO !=
"3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"
else
endLoop=1
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...    [ INSERT MODE$/endloop//#*-----------------------------------------------------------------------------*
echo
echo $raya
echo "TIPO DE PROCESO"
echo $raya
endLoop=0    
/P_PROCESO="##"
while [ endLoop == 0 ]$
/
/#---------------------------------------------------echo " "
echo "01 Envio Original  - Carga TOTAL 1a vez"
echo " "
echo "02 Archivo Semanal - Carga PARCIAL"
echo " "
echo "03 Archivo Mensual - Carga PARCIAL"
echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z $P_PROCESO ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0//$//
/Address search hit BOTTOM without matching pattern
:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 218 lines, 7173 characters     P_MAQUINA=`who am i | cut -c 39-50`P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ $endLoop != 1 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO !=
"3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"
else
endLoop=1
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> ^C
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>sh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
    P_MAQUINA=`who am i | cut -c 39-50`P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
echo $raya
    echo "PROCESO REAL O EN FALSO"
    echo $raya
    P_REAL_FALSO="#";
    endLoop=0
    while [ $endLoop != 1 ]
    do
#---------------------------------------------------
echo " "
echo "1) Proceso en falso"
echo " "
echo "2) Proceso real"
echo " "
echo "3) Salir"
echo " "
echo "opción (123)   ---> \c"
read P_REAL_FALSO
if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO !=
"3" ]
   then
echo "\n\tlas opciones válidas son 1, 2 o 3"
else
endLoop=1
fi
    done
}

GetTipoDeProceso()
{
#*-----------------------------------------------------------------------------*
# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
218 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "                D A T A C R E D I T O"
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*

    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != 
"3" ] 

APPEND MODE        then

APPEND MODE            echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE        else

APPEND MODE            endLoop=1

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ P_REAL_FALSO -eq 03 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 218 lines, 7173 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> www
no se encuentra el archivo  www
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> 
El nombre del archivo no condice con el tipo de proceso  #
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
218 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "                D A T A C R E D I T O"
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*

    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != 
"3" ] 

APPEND MODE        then

APPEND MODE            echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE        else

APPEND MODE            endLoop=1

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEecho "........................................."

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ $P_REAL_FALSO -eq 3 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ $P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 219 lines, 7223 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>clear
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>clearfg   sh-CARGAJUR2
sh-CARGAJUR2[117]: GetNombreDelArchivo:  not found
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
echo "03 Archivo Mensual - Carga PARCIAL"echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z $P_PROCESO ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ $endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0
else
if [ ! -s $P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archoAPPEND MODE():w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 219 lines, 7225 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 18:52  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
 
      01 Envio Original  - Carga TOTAL 1a vez
 
      02 Archivo Semanal - Carga PARCIAL
 
      03 Archivo Mensual - Carga PARCIAL
 
      04 Refresque Total - Carga TOTAL
 
      00 Salir
 
           opción (01 02 03 04 00)   ---> 01
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> 99999919 000905140104.txt
no se encuentra el archivo  9999991000905140104.txt
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> 
El nombre del archivo no condice con el tipo de proceso  01
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 --->  
El nombre del archivo no condice con el tipo de proceso  01
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> 
El nombre del archivo no condice con el tipo de proceso  01
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa01P_PROCESOtt.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
echo "03 Archivo Mensual - Carga PARCIAL"echo " "
echo "04 Refresque Total - Carga TOTAL"
echo " "
echo "00 Salir"
echo " "
echo "opción (01 02 03 04 00)   ---> \c"
read P_PROCESO
if [ -z $P_PROCESO ]
then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"
else
if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ]then
echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"else
endLoop=1
fi
fi
    done
}

GetNombreDelArchivo()
{
#*-----------------------------------------------------------------------------*
# Averigua el nombre del archivo
#*-----------------------------------------------------------------------------*
    echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ $endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"P_PROCESO"tt.txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z P_NombreArchivo ]
then
endLoop=0
else
if [ ! -s $P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del arch#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
219 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "                D A T A C R E D I T O"
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*

    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != 
"3" ] 

APPEND MODE        then

APPEND MODE            echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE        else

APPEND MODE            endLoop=1

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z $P_PROCESO ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"$P_PROCESO"tt.txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z $P_NombreArchivo ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $TEMPORALES/$P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEecho "........................................."

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ $P_REAL_FALSO -eq 3 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ $P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z P_NombreArchivo ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 219 lines, 7239 characters 
[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 18:56  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 3
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>sh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 18:57  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
 
      01 Envio Original  - Carga TOTAL 1a vez
 
      02 Archivo Semanal - Carga PARCIAL
 
      03 Archivo Mensual - Carga PARCIAL
 
      04 Refresque Total - Carga TOTAL
 
      00 Salir
 
           opción (01 02 03 04 00)   ---> 04
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104tt.txt
 ---> 9999991990905140104.txt
no se encuentra el archivo  9999991990905140104.txt
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104tt.txt
 ---> 
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104tt.txt
 ---> ^C
/d/iccol/desarrollo>cat $^?^?         echo $fff
JJJJJJaaaDDMMAAbbXX.txt
/d/iccol/desarrollo>f=9999991990905140104.txt
/d/iccol/desarrollo>echo $f
9999991990905140104.txt
/d/iccol/desarrollo>cat $TEMPORALES"/"$f
cat: cannot open /d/iccol/desarrollo/temporales/9999991990905140104.txt
/d/iccol/desarrollo>l $TEMPORALES/99999
/d/iccol/desarrollo/temporales/99999: No such file or directory
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>l $TEMPORALES/99999l $TEMPORALES/99999*
-rw-rw-r--   1 icdgd    icdatacr    1530 May 19 17:27 /d/iccol/desarrollo/temporales/9999991000905140101_ERRORES.txt
-rw-rw-r--   1 icdgd    icdatacr    2427 May 19 10:31 /d/iccol/desarrollo/temporales/9999991000905140101_ori.txt
-rw-rw-r--   1 icdgd    icdatacr    2436 May 19 15:06 /d/iccol/desarrollo/temporales/9999991000905140101.txt
-rw-rw-r--   1 icdgd    icdatacr    5151 May 19 11:17 /d/iccol/desarrollo/temporales/9999991000905140101.txt.log
-rw-rw-r--   1 icdgd    icdatacr    2464 May 19 12:12 /d/iccol/desarrollo/temporales/9999991000905140101.txt.orig
-rw-rw-r--   1 icdgd    icdatacr    1530 May 20 14:55 /d/iccol/desarrollo/temporales/9999991000905140104_ERRORES.txt
-rw-rw-r--   1 icdgd    icdatacr    2436 May 19 15:46 /d/iccol/desarrollo/temporales/9999991000905140104.txt
-rw-rw-r--   1 icdgd    icdatacr   11275 May 20 14:55 /d/iccol/desarrollo/temporales/9999991000905140104.txt.log
-rw-rw-r--   1 icdgd    icdatacr    2436 May 20 14:55 /d/iccol/desarrollo/temporales/9999991000905140104.txt.orig
/d/iccol/desarrollo>cat /d/iccol/desarrollo/temporales/9999991000905140104.txt^[  /d/iccol/desarrollo>rales/9999991000905140104.txt                            <
"/tmp/sh20849.2" 1 line, 59 characters cat /d/iccol/desarrollo/temporales/9999991000905140104.txt
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~"/tmp/sh20849.2" 1 line, 59 charactersca$CHANGE MODEtail"/tmp/sh20849.2" 1 line, 60 characters tail /d/iccol/desarrollo/temporales/9999991000905140104.txt
I200890934264SUBSUELO Y GEOTECNIA LTDA                    0450002010080600204420130506
I200890107487SUPERTIENDAS Y DROGUERIAS OL                 0340452012040600300620130106
I300600003115xxxxxx                                       0150542014010600400320120406
I300611000446ANTONIO CONDOLUCI DOMINGO                    0340021999010100506720130406
I400000163597MARWA MIKHAEL SKAFF DE KARAA                 0120322010040600604520110406
I400000266423SIMONE MARTINEZ                              033002201312060070rt20110106
I400000244359PATRICIO ALEJANDRO HERRERA C                 0450012011040200804520130111
I400000136711ARIAS NILO RIESCO                            0110232011041100905720130411
I400000163598xxxxxx                                       0330432013101002204520120406
T 00000000027                                             772774        787861        
/d/iccol/desarrollo>ech $f
ksh: ech:  not found
/d/iccol/desarrollo>echo $f
9999991990905140104.txt
/d/iccol/desarrollo>f=9999991000905140104.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>f=9999991000905140104.txt/d/iccol/desarrollo>echo $f                  /d/iccol/desarrollo>ech $f tail /d/iccol/desarrollo/temporales/9999991000905140104.t>/d/iccol/desarrollo>cat /d/iccol/desarrollo/temporales/9999991000905140104.tx/d/iccol/desarrollo>l $TEMPORALES/99999*                                      /d/iccol/desarrollo>l $TEMPORALES/99999 cat $TEMPORALES"/"$f $TEMPORALES"/"$f   t $TEMPORALES"/"$fa $TEMPORALES"/"$fi $TEMPORALES"/"$fl $TEMPORALES"/"$f
I200890934264SUBSUELO Y GEOTECNIA LTDA                    0450002010080600204420130506
I200890107487SUPERTIENDAS Y DROGUERIAS OL                 0340452012040600300620130106
I300600003115xxxxxx                                       0150542014010600400320120406
I300611000446ANTONIO CONDOLUCI DOMINGO                    0340021999010100506720130406
I400000163597MARWA MIKHAEL SKAFF DE KARAA                 0120322010040600604520110406
I400000266423SIMONE MARTINEZ                              033002201312060070rt20110106
I400000244359PATRICIO ALEJANDRO HERRERA C                 0450012011040200804520130111
I400000136711ARIAS NILO RIESCO                            0110232011041100905720130411
I400000163598xxxxxx                                       0330432013101002204520120406
T 00000000027                                             772774        787861        
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
if [ -z P_NombreArchivo ]
then
exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22
#**********************************************************
#ENTIDAD:DATACREDITO*
#SHELL-ID:     sh-CARGAJUR*
#DATE-WRITTEN: MAY/2014*
#AUTHOR:GLOBANT*
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO*
# Globant.   |*
#******************************************************************
#
#*========================================================*
#*DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "D A T A C R E D I T O"
    echo " "
    echo "Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*
    echo
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
219 lines deletedNo lines in bufferAPPEND MODE#sh-CARGAJUR.v.01.0001 grabado como /d/iccol/desarrollo/macros/sh-CARGAJUR22

#**********************************************************


#ENTIDAD:      DATACREDITO                                *



#SHELL-ID:     sh-CARGAJUR                                *
#DATE-WRITTEN: MAY/2014                                   *
#AUTHOR:       GLOBANT                                    *
#******************************************************************
# 16-may-2014| CQnnnn - CARGA DE ARCHIVO EXTERNO                  *
# Globant.   |                                                    *
#******************************************************************
#
#*========================================================*
#*          DEFINICION DE VARIABLES Y FUNCIONES
#*========================================================*
raya="---------------------------------------------------"
codsus="999999"
P_REAL_FALSO="1"
P_PROCESO="#";
P_NombreArchivo=""


GetFechaSistema()
{
#*-----------------------------------------------------------------------------*
# Arma y muestra la fecha del sistema y la máquina
#*-----------------------------------------------------------------------------*
    P_SERVER_DEV="172.24.6.154"
    HoraHoy=`date '+%H:%M'`
    FECHOY_A4MMDD=`date '+%Y%m%d'`
    FECHOY_ANOMES=`date '+%Y%m%d' | cut -c 1-6`
    P_FCORTE=$FECHOY_ANOMES
    P_MAQUINA=`who am i | cut -c 39-50`
    P_FCORTE=$FECHOY_ANOMES
    echo $raya
    echo " "
    echo "                D A T A C R E D I T O"
    echo " "
    echo "              Cargue de archivo de JURAD"
    echo " "
    echo "Fecha:" $FECHOY_A4MMDD $HoraHoy " en" $P_MAQUINA
    echo " "
}

GetRealOFalso()
{
#*-----------------------------------------------------------------------------*
# Averigua si el tipo de proceso es REAL o EN FALSO
#*-----------------------------------------------------------------------------*

    echo

APPEND MODE    echo $raya

APPEND MODE    echo "              PROCESO REAL O EN FALSO"

APPEND MODE    echo $raya

APPEND MODE    P_REAL_FALSO="#";

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "        1) Proceso en falso"

APPEND MODE        echo " "

APPEND MODE        echo "        2) Proceso real"

APPEND MODE        echo " "

APPEND MODE        echo "        3) Salir"

APPEND MODE        echo " "

APPEND MODE        echo "             opción (123)   ---> \c"

APPEND MODE        read P_REAL_FALSO 

APPEND MODE        if [ $P_REAL_FALSO != "1" ] && [ $P_REAL_FALSO != "2" ] && [ $P_REAL_FALSO != 
"3" ] 

APPEND MODE        then

APPEND MODE            echo "\n\tlas opciones válidas son 1, 2 o 3"

APPEND MODE        else

APPEND MODE            endLoop=1

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetTipoDeProceso()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el tipo de proceso: carga inicial, actualización, refresque total ...

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo

APPEND MODE    echo $raya

APPEND MODE    echo "                  TIPO DE PROCESO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    P_PROCESO="##"

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo "      01 Envio Original  - Carga TOTAL 1a vez"

APPEND MODE        echo " "

APPEND MODE        echo "      02 Archivo Semanal - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      03 Archivo Mensual - Carga PARCIAL"

APPEND MODE        echo " "

APPEND MODE        echo "      04 Refresque Total - Carga TOTAL"

APPEND MODE        echo " "

APPEND MODE        echo "      00 Salir"

APPEND MODE        echo " "

APPEND MODE        echo "           opción (01 02 03 04 00)   ---> \c"

APPEND MODE        read P_PROCESO

APPEND MODE        if [ -z "$P_PROCESO" ] 

APPEND MODE        then

APPEND MODE            echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE        else

APPEND MODE            if [ $P_PROCESO != "01" ] && [ $P_PROCESO != "02" ] && [ $P_PROCESO != "03
" ] && [ $P_PROCESO != "04" ] && [ $P_PROCESO != "00" ] 

APPEND MODE            then

APPEND MODE                echo "\n\t ingrese una de las opciones 01 02 03 04 00\c"

APPEND MODE            else

APPEND MODE                endLoop=1

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODEGetNombreDelArchivo()

APPEND MODE{

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE# Averigua el nombre del archivo

APPEND MODE#*-----------------------------------------------------------------------------*

APPEND MODE    echo "                NOMBRE DEL ARCHIVO"

APPEND MODE    echo $raya

APPEND MODE    endLoop=0

APPEND MODE    while [ $endLoop == 0 ]

APPEND MODE    do

APPEND MODE#             ---------------------------------------------------

APPEND MODE        echo " "

APPEND MODE        echo " Ingrese el nombre del archivo o enter para salir:"

APPEND MODE        echo "      999999100ddmmaa01"$P_PROCESO".txt"

APPEND MODE#                   JJJJJJaaaDDMMAAbbXX.txt

APPEND MODE        echo " ---> \c"

APPEND MODE        read P_NombreArchivo

APPEND MODE        if [ -z "$P_NombreArchivo" ]

APPEND MODE        then

APPEND MODE            endLoop=0

APPEND MODE        else

APPEND MODE            if [ ! -s $TEMPORALES"/"$P_NombreArchivo ]

APPEND MODE            then

APPEND MODE                echo "no se encuentra el archivo " $P_NombreArchivo

APPEND MODE            else

APPEND MODE#               el tipo de proceso 01/02/03/04 está en el nombre del arch

APPEND MODE                auxTxt=`echo $fff | grep XX.txt`

APPEND MODE                if [ $P_PROCESO".txt" != auxTxt ]

APPEND MODE                then

APPEND MODE                    echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO

APPEND MODE                fi

APPEND MODE            fi

APPEND MODE        fi

APPEND MODE    done

APPEND MODE}

APPEND MODE

APPEND MODE

APPEND MODE#*========================================================*

APPEND MODE#*                    PROCESO                             *

APPEND MODE#*========================================================*

APPEND MODE#*              FASE 1: PIDE PARAMETROS                   *

APPEND MODE#*========================================================*

APPEND MODEecho "........................................."

APPEND MODEclear

APPEND MODEGetFechaSistema

APPEND MODEGetRealOFalso

APPEND MODEif [ $P_REAL_FALSO -eq 3 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetTipoDeProceso

APPEND MODEif [ $P_PROCESO -eq 00 ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODEGetNombreDelArchivo

APPEND MODEif [ -z "$P_NombreArchivo" ]

APPEND MODEthen

APPEND MODE    exit

APPEND MODEfi

APPEND MODE

APPEND MODE# echo (esto no está refactoreado)

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "

APPEND MODE# fechab=$P_FCORTE

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# numeroreg=`wc -l < $P_NombreArchivo archivo`

APPEND MODE# echo

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# echo "| Registros iniciales archivo de entrada : " $numeroreg

APPEND MODE# echo "+-------------------------------------------------------------+"

APPEND MODE# cadena00=$archivo.orig

APPEND MODE# cp $P_NombreArchivo $cadena00

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE#echo "|                 SEGUNDA FASE: PROCESO                       |"

APPEND MODE#echo "+-------------------------------------------------------------+"

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    banner CARGAJUR

APPEND MODE    echo " "

APPEND MODE    echo $raya

APPEND MODE    echo " Procesando $TEMPORALES/'$P_NombreArchivo 

APPEND MODE    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO

APPEND MODE#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log

APPEND MODE#   activar programa CARGAJUR2!!!

APPEND MODE#   CARGAJUR2 dele user 1|2 para real o falso

APPEND MODE    echo $raya

APPEND MODE    echo "             RESULTADOS DEL PROCESO"

APPEND MODE    echo " "

APPEND MODE    cat $P_NombreArchivo.log 

APPEND MODE    echo " "

APPEND MODE    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log

APPEND MODE    ls -lrt $P_NombreArchivo*

APPEND MODE    echo $raya

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE    echo " "

APPEND MODE

:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 221 lines, 7326 characters 


[1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgtail $TEMPORALES"/"$f/d/iccol/desarrollo>f=9999991000905140104.txt/d/iccol/desarrollo>echo $f                  /d/iccol/desarrollo>ech $f tail /d/iccol/desarrollo/temporales/9999991000905140104.t>/d/iccol/desarrollo>cat /d/iccol/desarrollo/temporales/9999991000905140104.tx/d/iccol/desarrollo>l $TEMPORALES/99999*                                      /d/iccol/desarrollo>l $TEMPORALES/99999 cat $TEMPORALES"/"$fecho $f             f=9999991990905140104.txt/d/iccol/desarrollo>echo $fff                /d/iccol/desarrollo>sh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 19:07  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
 
      01 Envio Original  - Carga TOTAL 1a vez
 
      02 Archivo Semanal - Carga PARCIAL
 
      03 Archivo Mensual - Carga PARCIAL
 
      04 Refresque Total - Carga TOTAL
 
      00 Salir
 
           opción (01 02 03 04 00)   ---> 01
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 9999991000905140101.txt
El nombre del archivo no condice con el tipo de proceso  01
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
    exit
fi

# echo (esto no está refactoreado)
# echo "+-------------------------------------------------------------+"
# echo "+-------------------------------------------------------------+"
# echo "     Fecha base (AAAAMM)     -----> ($P_FCORTE) "
# fechab=$P_FCORTE
# echo "+-------------------------------------------------------------+"
# numeroreg=`wc -l < $P_NombreArchivo archivo`
# echo
# echo "+-------------------------------------------------------------+"
# echo "| Registros iniciales archivo de entrada : " $numeroreg
# echo "+-------------------------------------------------------------+"
# cadena00=$archivo.orig
# cp $P_NombreArchivo $cadena00
#echo "+-------------------------------------------------------------+"
#echo "|SEGUNDA FASE: PROCESO|"
#echo "+-------------------------------------------------------------+"
    echo " "
    echo $raya
    echo " "
    banner CARGAJUR
    echo " "
    echo $raya
    echo " Procesando $TEMPORALES/'$P_NombreArchivo
    echo "real: " P_REAL_FALSO "archivo:  $P_NombreArchivo " tipo de proceso: " P_PROC
ESO
#   nohup x CARGAJUR $P_NombreArchivo $P_PROCESO >| $P_NombreArchivo.log 2>| $P_Nombre
Archivo.log
#   activar programa CARGAJUR2!!!
#   CARGAJUR2 dele user 1|2 para real o falso
    echo $raya
    echo "RESULTADOS DEL PROCESO"
    echo " "
    cat $P_NombreArchivo.log
    echo " "
    ls -lrt $P_NombreArchivo* >> $P_NombreArchivo.log
    ls -lrt $P_NombreArchivo*
    echo $raya
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "#*-----------------------------------------------------------------------------*echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ $endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"$P_PROCESO".txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z "$P_NombreArchivo" ]
then
endLoop=0
else
if [ ! -s $TEMPORALES"/"$P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
echo "........................................."
clear
GetFechaSistema
GetRealOFalso
if [ $P_REAL_FALSO -eq 3 ]
then
exit
fi
GetTipoDeProceso
if [ $P_PROCESO -eq 00 ]OPEN MODE                echo auxTxt:w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 222 lines, 7342 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgsh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 19:10  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
 
      01 Envio Original  - Carga TOTAL 1a vez
 
      02 Archivo Semanal - Carga PARCIAL
 
      03 Archivo Mensual - Carga PARCIAL
 
      04 Refresque Total - Carga TOTAL
 
      00 Salir
 
           opción (01 02 03 04 00)   ---> 01
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 9999991990905140101.txt
no se encuentra el archivo  9999991990905140101.txt
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 9999991000905140101.txt
auxTxt
El nombre del archivo no condice con el tipo de proceso  01
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> 
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0101.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
#*-----------------------------------------------------------------------------*echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ $endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"$P_PROCESO".txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z "$P_NombreArchivo" ]
then
endLoop=0
else
if [ ! -s $TEMPORALES"/"$P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`echo auxTxt
if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
echo "........................................."
clear
GetFechaSistema
GetRealOFalso
if [ $P_REAL_FALSO -eq 3 ]
then
exit
fi
GetTipoDeProcesoINSERT MODE$o"APPEND MODE -o  -o  ]"$P_NombreArchivo"" -o "$P_NombreArchivo"" ]APPEND MODEINSERT MODE== "" :w"/d/iccol/desarrollo/macros/sh-CARGAJUR2" 222 lines, 7371 characters [1] + Stopped (SIGTSTP)        vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>fgfg og g$gfg
ksh: o:  not found
/d/iccol/desarrollo>echo $f
9999991000905140104.txt
/d/iccol/desarrollo>^[  /d/iccol/desarrollo>echo $fo $fg  fg   sh-CARGAJUR2
.........................................
---------------------------------------------------
 
                D A T A C R E D I T O
 
              Cargue de archivo de JURAD
 
Fecha: 20140521 19:15  en 172.16.10.10
 

---------------------------------------------------
              PROCESO REAL O EN FALSO
---------------------------------------------------
 
        1) Proceso en falso
 
        2) Proceso real
 
        3) Salir
 
             opción (123)   ---> 1

---------------------------------------------------
                  TIPO DE PROCESO
---------------------------------------------------
 
      01 Envio Original  - Carga TOTAL 1a vez
 
      02 Archivo Semanal - Carga PARCIAL
 
      03 Archivo Mensual - Carga PARCIAL
 
      04 Refresque Total - Carga TOTAL
 
      00 Salir
 
           opción (01 02 03 04 00)   ---> 04
                NOMBRE DEL ARCHIVO
---------------------------------------------------
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104.txt
 ---> 9999991000905140104.txt

El nombre del archivo no condice con el tipo de proceso  04
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104.txt
 ---> 
 
 Ingrese el nombre del archivo o enter para salir:
      999999100ddmmaa0104.txt
 ---> ^C
/d/iccol/desarrollo>fg
vi /d/iccol/desarrollo/macros/sh-CARGAJUR2
#*-----------------------------------------------------------------------------*echo "NOMBRE DEL ARCHIVO"
    echo $raya
    endLoop=0
    while [ $endLoop == 0 ]
    do
#---------------------------------------------------
echo " "
echo " Ingrese el nombre del archivo o enter para salir:"
echo "999999100ddmmaa01"$P_PROCESO".txt"
#JJJJJJaaaDDMMAAbbXX.txt
echo " ---> \c"
read P_NombreArchivo
if [ -z "$P_NombreArchivo" -o "$P_NombreArchivo" == "" ]
then
endLoop=0
else
if [ ! -s $TEMPORALES"/"$P_NombreArchivo ]then
echo "no se encuentra el archivo " $P_NombreArchivoelse
#el tipo de proceso 01/02/03/04 está en el nombre del archauxTxt=`echo $fff | grep XX.txt`echo $auxTxt
if [ $P_PROCESO".txt" != auxTxt ]then
echo "El nombre del archivo no condice con el tipo de proceso " $P
_PROCESO
fi
fi
fi
    done
}


#*========================================================*
#*PROCESO*
#*========================================================*
#*FASE 1: PIDE PARAMETROS*
#*========================================================*
echo "........................................."
clear
GetFechaSistema
GetRealOFalso
if [ $P_REAL_FALSO -eq 3 ]
then
exit
fi
GetTipoDeProceso/d/iccol/desarrollo>^D
