REMARK* UTLBIT.PROC.v.0001
REMARK* ESTE COPY CONTIENE CADA UNA DE LAS RUTINAS PROPIAS DEL MANEJO DE
REMARK* BITS EN STRINGS COMO FLAGS SI/NO UTILES PARA AHORRO DE ESPACIO
REMARK* AL LLAMAR CUALQUIER RUTINA SE MANEJA UN CODIGO DE ERROR QUE DEBE
REMARK* SER CHEQUEADO PARA ASEGURAR QUE TODO ESTA OK
REMARK*
UTLBIT 0001-VALOR-FLAG-UTLBIT.
REMARK******************************************************************
REMARK*0001-VALOR-FLAG-UTLBIT.
REMARK* ESTA RUTINA BUSCA EN EL STRING DADOS EL VALOR DEL FLAG BUSCADO
REMARK* RETORNANDO 1 O 0 DE ACUERDO AL VALOR DEL BIT CORRESPONDIENTE
REMARK*      ALINEACION : 
REMARK*         0        1        2
REMARK*      12345678 90123456 78901234 ..........NUMERACION DE FLAGS
REMARK*      11011010 11011101 00010010 ..........FLAGS O BITS
REMARK*      CARACTE1 CARACTE2 CARACTE3 ..........STRING
REMARK*      PARAMETROS DE ENTRADA:
REMARK*         STRING MAX 100 A FLAGEAR     INPUT-STR-UTLBIT
REMARK*         LONGITUD  DEL STRING        INPUT-LEN-UTLBIT
REMARK*         FLAG BUSCADO                INPUT-FLA-UTLBIT
REMARK*      DATOS DE SALIDA:           
REMARK*         VALOR DEL FLAG              OUTPUT-VAL-UTLBIT
REMARK*         ERROR EN DATOS(0,1)         OUTPUT-ERR-UTLBIT
REMARK*      OBSERVACION: ESTA RUTINA NO DEBE SER USADO EN ARCHIVOS
REMARK*                   LINE SEQUENTIAL 
REMARK******************************************************************
UTLBIT     MOVE 0 TO OUTPUT-ERR-UTLBIT
UTLBIT     COMPUTE POSCAR-UTLBIT = ((INPUT-FLA-UTLBIT - 1 )  / 8) + 1
UTLBIT     COMPUTE POSFLA-UTLBIT = INPUT-FLA-UTLBIT - 
UTLBIT                             (POSCAR-UTLBIT - 1 ) * 8
UTLBIT     IF POSCAR-UTLBIT > INPUT-LEN-UTLBIT OR
UTLBIT        INPUT-LEN-UTLBIT > 100
UTLBIT        MOVE 1 TO OUTPUT-ERR-UTLBIT
UTLBIT     ELSE
UTLBIT        MOVE INPUT-STR-UTLBIT(POSCAR-UTLBIT:1) TO CAR-UTLBIT
UTLBIT        MOVE FUNCTION ORD(CAR-UTLBIT) TO ASCII-UTLBIT
UTLBIT        SUBTRACT 1 FROM ASCII-UTLBIT
UTLBIT        MOVE ASCII-UTLBIT TO ASCXX-UTLBIT 
UTLBIT        MOVE 0 TO OUTPUT-VAL-UTLBIT
UTLBIT        MOVE 1 TO I-UTLBIT
UTLBIT        MOVE 128 TO VALOR-UTLBIT
UTLBIT        PERFORM UNTIL I-UTLBIT > 8 OR OUTPUT-VAL-UTLBIT = 1
UTLBIT          IF ASCXX-UTLBIT >= VALOR-UTLBIT 
UTLBIT             COMPUTE ASCXX-UTLBIT = ASCXX-UTLBIT - VALOR-UTLBIT
UTLBIT             IF I-UTLBIT = POSFLA-UTLBIT 
UTLBIT                MOVE 1 TO OUTPUT-VAL-UTLBIT
UTLBIT             END-IF
UTLBIT          END-IF
UTLBIT          COMPUTE VALOR-UTLBIT = VALOR-UTLBIT / 2
UTLBIT          ADD 1 TO I-UTLBIT
UTLBIT        END-PERFORM.
UTLBIT 0002-UPDATE-FLAG-UTLBIT.
REMARK******************************************************************
REMARK*0002-UPDATE-FLAG-UTLBIT.
REMARK******************************************************************
REMARK* ESTA RUTINA ACTUALIZA EN EL STRING DADO EL VALOR DEL FLAG DADO
REMARK* RETORNANDO EL STRING ACTUALIZADO                            
REMARK*      ALINEACION : 
REMARK*         0        1        2
REMARK*      12345678 90123456 78901234 ..........NUMERACION DE FLAGS
REMARK*      11011010 11011101 00010010 ..........FLAGS O BITS
REMARK*      CARACTE1 CARACTE2 CARACTE3 ..........STRING
REMARK*      PARAMETROS DE ENTRADA:
REMARK*         STRING MAX 100 A FLAGEAR    INPUT-STR-UTLBIT
REMARK*         LONGITUD  DEL STRING        INPUT-LEN-UTLBIT
REMARK*         FLAG BUSCADO                INPUT-FLA-UTLBIT
REMARK*         NUEVO VALOR DEL FLAG        INPUT-VAL-UTLBIT
REMARK*      DATOS DE SALIDA:           
REMARK*         STRING CON EL BIT ACTUALIZ. INPUT-STR-UTLBIT
REMARK*         ERROR EN DATOS(0,1,2)       OUTPUT-ERR-UTLBIT
REMARK*      OBSERVACION: ESTA RUTINA NO DEBE SER USADO EN ARCHIVOS
REMARK*                   LINE SEQUENTIAL 
REMARK******************************************************************
UTLBIT       MOVE 0 TO OUTPUT-ERR-UTLBIT.
UTLBIT       IF INPUT-VAL-UTLBIT = 1 OR 0 
UTLBIT          PERFORM 0001-VALOR-FLAG-UTLBIT 
UTLBIT       ELSE
UTLBIT          MOVE 1 TO OUTPUT-ERR-UTLBIT
UTLBIT       END-IF.
UTLBIT       IF OUTPUT-ERR-UTLBIT = 0 
UTLBIT          IF INPUT-VAL-UTLBIT NOT = OUTPUT-VAL-UTLBIT
UTLBIT             IF INPUT-VAL-UTLBIT = 1
UTLBIT                COMPUTE ASCII-UTLBIT = ASCII-UTLBIT + 
UTLBIT                        2 ** (8 - POSFLA-UTLBIT) + 1
UTLBIT             ELSE
UTLBIT                COMPUTE ASCII-UTLBIT = ASCII-UTLBIT - 
UTLBIT                        2 ** (8 - POSFLA-UTLBIT) + 1
UTLBIT
UTLBIT             END-IF
UTLBIT             IF ASCII-UTLBIT > 0 AND < 257 
UTLBIT                MOVE V-UTLBIT(ASCII-UTLBIT) TO 
UTLBIT                     INPUT-STR-UTLBIT(POSCAR-UTLBIT:1)
UTLBIT             ELSE
UTLBIT                DISPLAY "ERROR INTERNO RUTINA DE BITS" 
UTLBIT                MOVE 2 TO OUTPUT-ERR-UTLBIT
UTLBIT             END-IF
UTLBIT          END-IF
UTLBIT       END-IF.
